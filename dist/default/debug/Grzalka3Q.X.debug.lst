

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Nov 01 20:46:20 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1516
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	dabs	1,0x320,16
    29                           	dabs	1,0x2A0,80
    30                           	dabs	1,0x26C,4
    31                           	dabs	1,0x218C,0,_temp_tabela
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  0010                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0015                     	;# 
    52  0016                     	;# 
    53  0016                     	;# 
    54  0017                     	;# 
    55  0018                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001C                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  0090                     	;# 
    64  0091                     	;# 
    65  0092                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0097                     	;# 
    69  0099                     	;# 
    70  009A                     	;# 
    71  009B                     	;# 
    72  009B                     	;# 
    73  009C                     	;# 
    74  009D                     	;# 
    75  009E                     	;# 
    76  010C                     	;# 
    77  010D                     	;# 
    78  010E                     	;# 
    79  0116                     	;# 
    80  0117                     	;# 
    81  011D                     	;# 
    82  018C                     	;# 
    83  018D                     	;# 
    84  018E                     	;# 
    85  0191                     	;# 
    86  0191                     	;# 
    87  0192                     	;# 
    88  0193                     	;# 
    89  0193                     	;# 
    90  0194                     	;# 
    91  0195                     	;# 
    92  0196                     	;# 
    93  0197                     	;# 
    94  0199                     	;# 
    95  019A                     	;# 
    96  019B                     	;# 
    97  019B                     	;# 
    98  019B                     	;# 
    99  019B                     	;# 
   100  019C                     	;# 
   101  019C                     	;# 
   102  019D                     	;# 
   103  019E                     	;# 
   104  019F                     	;# 
   105  020D                     	;# 
   106  0210                     	;# 
   107  0211                     	;# 
   108  0211                     	;# 
   109  0212                     	;# 
   110  0212                     	;# 
   111  0213                     	;# 
   112  0213                     	;# 
   113  0214                     	;# 
   114  0214                     	;# 
   115  0215                     	;# 
   116  0215                     	;# 
   117  0215                     	;# 
   118  0216                     	;# 
   119  0216                     	;# 
   120  0217                     	;# 
   121  0217                     	;# 
   122  0291                     	;# 
   123  0291                     	;# 
   124  0292                     	;# 
   125  0293                     	;# 
   126  0298                     	;# 
   127  0298                     	;# 
   128  0299                     	;# 
   129  029A                     	;# 
   130  0394                     	;# 
   131  0395                     	;# 
   132  0396                     	;# 
   133  0FE4                     	;# 
   134  0FE5                     	;# 
   135  0FE6                     	;# 
   136  0FE7                     	;# 
   137  0FE8                     	;# 
   138  0FE9                     	;# 
   139  0FEA                     	;# 
   140  0FEB                     	;# 
   141  0FED                     	;# 
   142  0FEE                     	;# 
   143  0FEF                     	;_temp_tabela
   144                           
   145                           	psect	idataBANK0
   146  0726                     __pidataBANK0:	
   147                           
   148                           ;initializer for _adr_hi
   149  0726  341F               	retlw	31
   150                           
   151                           ;initializer for _adr_low
   152  0727  34FD               	retlw	253
   153                           
   154                           ;initializer for _adr_low2
   155  0728  34FE               	retlw	254
   156                           
   157                           	psect	stringtext
   158  0700                     __pstringtext:	
   159  0700                     _cyfry:	
   160  0700  343F               	retlw	63
   161  0701  3406               	retlw	6
   162  0702  345B               	retlw	91
   163  0703  344F               	retlw	79
   164  0704  3466               	retlw	102
   165  0705  346D               	retlw	109
   166  0706  347D               	retlw	125
   167  0707  3407               	retlw	7
   168  0708  347F               	retlw	127
   169  0709  346F               	retlw	111
   170  070A  3400               	retlw	0
   171  070B  3440               	retlw	64
   172  070C  3463               	retlw	99
   173  070D  341C               	retlw	28
   174  070E  3440               	retlw	64
   175  070F                     __end_of_cyfry:	
   176  070F                     _an:	
   177  070F  3401               	retlw	1
   178  0710  3402               	retlw	2
   179  0711                     __end_of_an:	
   180                           
   181                           	psect	nvBANK0
   182  0062                     __pnvBANK0:	
   183  0062                     _timer5:	
   184  0062                     	ds	4
   185  0066                     _czas_s_reset:	
   186  0066                     	ds	2
   187  0068                     _cyf_1:	
   188  0068                     	ds	1
   189  0069                     _cyf_2:	
   190  0069                     	ds	1
   191  006A                     _czas_przerwa_ms:	
   192  006A                     	ds	1
   193  006B                     _grzalka_numer:	
   194  006B                     	ds	1
   195  006C                     _kro_1:	
   196  006C                     	ds	1
   197                           
   198                           	psect	nvBANK1
   199  00A8                     __pnvBANK1:	
   200  00A8                     _kro_2:	
   201  00A8                     	ds	1
   202  000B                     _INTCONbits	set	11
   203  000D                     _PORTBbits	set	13
   204  009D                     _ADCON0bits	set	157
   205  009E                     _ADCON1	set	158
   206  0095                     _OPTION_REGbits	set	149
   207  0099                     _OSCCONbits	set	153
   208  008C                     _TRISAbits	set	140
   209  008D                     _TRISBbits	set	141
   210  008E                     _TRISC	set	142
   211  0097                     _WDTCONbits	set	151
   212  0117                     _FVRCONbits	set	279
   213  010C                     _LATAbits	set	268
   214  010D                     _LATB	set	269
   215  010D                     _LATBbits	set	269
   216  010E                     _LATC	set	270
   217  018C                     _ANSELAbits	set	396
   218  018D                     _ANSELBbits	set	397
   219  018E                     _ANSELC	set	398
   220  0192                     _PMADRH	set	402
   221  0191                     _PMADRL	set	401
   222  0195                     _PMCON1bits	set	405
   223  0196                     _PMCON2	set	406
   224  0194                     _PMDATH	set	404
   225  0193                     _PMDATL	set	403
   226  020D                     _WPUBbits	set	525
   227                           
   228                           ; #config settings
   229  0000                     
   230                           	psect	cinit
   231  00DA                     start_initialization:	
   232  00DA                     __initialization:		;BIGRAM
   233                           
   234                           ; Clear objects allocated to BIGRAM
   235  00DA  308C               	movlw	low (0+8588)
   236  00DB  0084               	movwf	4
   237  00DC  3021               	movlw	high (0+8588)
   238  00DD  0085               	movwf	5
   239  00DE  3064               	movlw	100
   240  00DF  00FE               	movwf	btemp
   241  00E0  3000               	movlw	0
   242  00E1  00FF               	movwf	btemp+1
   243  00E2  3187  2711  3180   	fcall	clear_ram0
   244                           
   245                           ; Clear objects allocated to COMMON
   246  00E5  01F0               	clrf	__pbssCOMMON& (0+127)
   247  00E6  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   248  00E7  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   249  00E8  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   250  00E9  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   251                           
   252                           ; Clear objects allocated to BANK0
   253  00EA  3020               	movlw	low __pbssBANK0
   254  00EB  0084               	movwf	4
   255  00EC  3000               	movlw	high __pbssBANK0
   256  00ED  0085               	movwf	5
   257  00EE  302A               	movlw	42
   258  00EF  00FE               	movwf	btemp
   259  00F0  3000               	movlw	0
   260  00F1  00FF               	movwf	btemp+1
   261  00F2  3187  2711  3180   	fcall	clear_ram0
   262                           
   263                           ; Clear objects allocated to BANK1
   264  00F5  0021               	movlb	1	; select bank1
   265  00F6  01A0               	clrf	__pbssBANK1& (0+127)
   266  00F7  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   267  00F8  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   268  00F9  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   269                           
   270                           ; Initialize objects allocated to BANK0
   271  00FA  0020               	movlb	0	; select bank0
   272  00FB  3187  2726  3180   	fcall	__pidataBANK0	;fetch initializer
   273  00FE  00ED               	movwf	__pdataBANK0& (0+127)
   274  00FF  3187  2727  3180   	fcall	__pidataBANK0+1	;fetch initializer
   275  0102  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   276  0103  3187  2728         	fcall	__pidataBANK0+2	;fetch initializer
   277  0105  00EF               	movwf	(__pdataBANK0+2)& (0+127)
   278  0106                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  0106                     __end_of__initialization:	
   282  0106  0020               	movlb	0
   283  0107  3181  2909         	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMMON
   286  0070                     __pbssCOMMON:	
   287  0070                     _PWM:	
   288  0070                     	ds	1
   289  0071                     _idx:	
   290  0071                     	ds	1
   291  0072                     _licznik:	
   292  0072                     	ds	1
   293  0073                     _multi:	
   294  0073                     	ds	1
   295  0074                     _wyswietlacz:	
   296  0074                     	ds	1
   297                           
   298                           	psect	bssBANK0
   299  0020                     __pbssBANK0:	
   300  0020                     _czas_ms:	
   301  0020                     	ds	4
   302  0024                     _timer2:	
   303  0024                     	ds	4
   304  0028                     _adc:	
   305  0028                     	ds	2
   306  002A                     _czas_flash:	
   307  002A                     	ds	2
   308  002C                     _czas_s:	
   309  002C                     	ds	2
   310  002E                     _timer1:	
   311  002E                     	ds	2
   312  0030                     _timer3:	
   313  0030                     	ds	2
   314  0032                     _timer4:	
   315  0032                     	ds	2
   316  0034                     _timer6:	
   317  0034                     	ds	2
   318  0036                     _timer7:	
   319  0036                     	ds	2
   320  0038                     _START:	
   321  0038                     	ds	1
   322  0039                     _START_Fl:	
   323  0039                     	ds	1
   324  003A                     _case_wyswietlacz:	
   325  003A                     	ds	1
   326  003B                     _cyf_1_tmp:	
   327  003B                     	ds	1
   328  003C                     _cyf_2_tmp:	
   329  003C                     	ds	1
   330  003D                     _cyf_3:	
   331  003D                     	ds	1
   332  003E                     _cyf_3_tmp:	
   333  003E                     	ds	1
   334  003F                     _flaga_temp:	
   335  003F                     	ds	1
   336  0040                     _flash_hi:	
   337  0040                     	ds	1
   338  0041                     _flash_low:	
   339  0041                     	ds	1
   340  0042                     _kro_1_tmp:	
   341  0042                     	ds	1
   342  0043                     _kro_2_tmp:	
   343  0043                     	ds	1
   344  0044                     _kro_3:	
   345  0044                     	ds	1
   346  0045                     _kro_3_tmp:	
   347  0045                     	ds	1
   348  0046                     _przycisk_minus_flag:	
   349  0046                     	ds	1
   350  0047                     _przycisk_plus_flag:	
   351  0047                     	ds	1
   352  0048                     _test_index:	
   353  0048                     	ds	1
   354  0049                     _x:	
   355  0049                     	ds	1
   356                           
   357                           	psect	dataBANK0
   358  006D                     __pdataBANK0:	
   359  006D                     _adr_hi:	
   360  006D                     	ds	1
   361  006E                     _adr_low:	
   362  006E                     	ds	1
   363  006F                     _adr_low2:	
   364  006F                     	ds	1
   365                           
   366                           	psect	bssBANK1
   367  00A0                     __pbssBANK1:	
   368  00A0                     _temp:	
   369  00A0                     	ds	2
   370  00A2                     _temp_sr:	
   371  00A2                     	ds	2
   372                           
   373                           	psect	clrtext
   374  0711                     clear_ram0:	
   375                           ;	Called with FSR0 containing the base address, and
   376                           ;	btemp/btemp+1 has the size to clear
   377                           
   378  0711  0064               	clrwdt	;clear the watchdog before getting into this loop
   379  0712                     clrloop0:	
   380  0712  0180               	clrf	0	;clear RAM location pointed to by FSR
   381  0713  3101               	addfsr 0,1
   382  0714  3001               	movlw	1
   383  0715  02FE               	subwf	126,f
   384  0716  3000               	movlw	0
   385  0717  3BFF               	subwfb	127,f
   386  0718  087F               	movf	127,w
   387  0719  047E               	iorwf	126,w
   388  071A  1903               	btfsc	3,2
   389  071B  3400               	retlw	0	;all done for this memory range, return
   390  071C  2F12               	goto	clrloop0	;have we reached the end yet?
   391                           
   392                           	psect	cstackBANK1
   393  00A4                     __pcstackBANK1:	
   394  00A4                     ??_main:	
   395                           
   396                           ; 0 bytes @ 0x0
   397  00A4                     	ds	4
   398                           
   399                           	psect	cstackCOMMON
   400  0075                     __pcstackCOMMON:	
   401  0075                     ?_unlock_flash:	
   402  0075                     ?_ISR:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0075                     ??_ISR:	
   406                           ; 0 bytes @ 0x0
   407                           
   408                           
   409                           ; 0 bytes @ 0x0
   410  0075                     	ds	5
   411                           
   412                           	psect	cstackBANK0
   413  004A                     __pcstackBANK0:	
   414  004A                     ?_erase_flash:	
   415  004A                     ?_write_flash:	
   416                           ; 0 bytes @ 0x0
   417                           
   418  004A                     ??_unlock_flash:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  004A                     ?_read_flash:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  004A                     ?___lwmod:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  004A                     ?___lmul:	
   428                           ; 2 bytes @ 0x0
   429                           
   430  004A                     ?___lldiv:	
   431                           ; 4 bytes @ 0x0
   432                           
   433  004A                     read_flash@adrs_lo:	
   434                           ; 4 bytes @ 0x0
   435                           
   436  004A                     write_flash@adr_lo:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  004A                     erase_flash@adr_lo:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  004A                     ___lwmod@divisor:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  004A                     ___lmul@multiplier:	
   446                           ; 2 bytes @ 0x0
   447                           
   448  004A                     ___lldiv@divisor:	
   449                           ; 4 bytes @ 0x0
   450                           
   451                           
   452                           ; 4 bytes @ 0x0
   453  004A                     	ds	1
   454  004B                     ??_read_flash:	
   455  004B                     ??_erase_flash:	
   456                           ; 0 bytes @ 0x1
   457                           
   458  004B                     read_flash@adrs_hi:	
   459                           ; 0 bytes @ 0x1
   460                           
   461  004B                     write_flash@data_lo:	
   462                           ; 1 bytes @ 0x1
   463                           
   464                           
   465                           ; 1 bytes @ 0x1
   466  004B                     	ds	1
   467  004C                     ??_write_flash:	
   468  004C                     ___lwmod@dividend:	
   469                           ; 0 bytes @ 0x2
   470                           
   471                           
   472                           ; 2 bytes @ 0x2
   473  004C                     	ds	1
   474  004D                     erase_flash@adr_hi:	
   475                           
   476                           ; 1 bytes @ 0x3
   477  004D                     	ds	1
   478  004E                     ??___lwmod:	
   479  004E                     write_flash@adr_hi:	
   480                           ; 0 bytes @ 0x4
   481                           
   482  004E                     ___lmul@multiplicand:	
   483                           ; 1 bytes @ 0x4
   484                           
   485  004E                     ___lldiv@dividend:	
   486                           ; 4 bytes @ 0x4
   487                           
   488                           
   489                           ; 4 bytes @ 0x4
   490  004E                     	ds	1
   491  004F                     ___lwmod@counter:	
   492                           
   493                           ; 1 bytes @ 0x5
   494  004F                     	ds	1
   495  0050                     ?___lwdiv:	
   496  0050                     ___lwdiv@divisor:	
   497                           ; 2 bytes @ 0x6
   498                           
   499                           
   500                           ; 2 bytes @ 0x6
   501  0050                     	ds	2
   502  0052                     ??___lmul:	
   503  0052                     ??___lldiv:	
   504                           ; 0 bytes @ 0x8
   505                           
   506  0052                     ___lwdiv@dividend:	
   507                           ; 0 bytes @ 0x8
   508                           
   509  0052                     ___lmul@product:	
   510                           ; 2 bytes @ 0x8
   511                           
   512                           
   513                           ; 4 bytes @ 0x8
   514  0052                     	ds	1
   515  0053                     ___lldiv@quotient:	
   516                           
   517                           ; 4 bytes @ 0x9
   518  0053                     	ds	1
   519  0054                     ??___lwdiv:	
   520                           
   521                           ; 0 bytes @ 0xA
   522  0054                     	ds	1
   523  0055                     ___lwdiv@quotient:	
   524                           
   525                           ; 2 bytes @ 0xB
   526  0055                     	ds	2
   527  0057                     ___lldiv@counter:	
   528  0057                     ___lwdiv@counter:	
   529                           ; 1 bytes @ 0xD
   530                           
   531                           
   532                           ; 1 bytes @ 0xD
   533  0057                     	ds	1
   534  0058                     ?_wyswietl:	
   535  0058                     wyswietl@liczba:	
   536                           ; 0 bytes @ 0xE
   537                           
   538                           
   539                           ; 2 bytes @ 0xE
   540  0058                     	ds	2
   541  005A                     ??_wyswietl:	
   542                           
   543                           ; 0 bytes @ 0x10
   544  005A                     	ds	1
   545  005B                     ?_main:	
   546  005B                     main@argc:	
   547                           ; 2 bytes @ 0x11
   548                           
   549                           
   550                           ; 2 bytes @ 0x11
   551  005B                     	ds	2
   552  005D                     main@argv:	
   553                           
   554                           ; 2 bytes @ 0x13
   555  005D                     	ds	2
   556  005F                     main@tmp:	
   557                           
   558                           ; 1 bytes @ 0x15
   559  005F                     	ds	1
   560  0060                     main@liczba_tmp:	
   561                           
   562                           ; 2 bytes @ 0x16
   563  0060                     	ds	2
   564                           
   565                           	psect	maintext
   566  0109                     __pmaintext:	
   567 ;;
   568 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   569 ;;
   570 ;; *************** function _main *****************
   571 ;; Defined at:
   572 ;;		line 153 in file "main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;  argc            2   17[BANK0 ] int 
   575 ;;  argv            2   19[BANK0 ] PTR PTR unsigned char 
   576 ;; Auto vars:     Size  Location     Type
   577 ;;  tmp             1   21[BANK0 ] unsigned char 
   578 ;;  liczba_tmp      2   22[BANK0 ] volatile unsigned int 
   579 ;; Return value:  Size  Location     Type
   580 ;;                  2   17[BANK0 ] int 
   581 ;; Registers used:
   582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   583 ;; Tracked objects:
   584 ;;		On entry : B1F/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   588 ;;      Params:         0       4       0       0       0       0       0       0
   589 ;;      Locals:         0       3       0       0       0       0       0       0
   590 ;;      Temps:          0       0       4       0       0       0       0       0
   591 ;;      Totals:         0       7       4       0       0       0       0       0
   592 ;;Total ram usage:       11 bytes
   593 ;; Hardware stack levels required when called:    3
   594 ;; This function calls:
   595 ;;		___lldiv
   596 ;;		___lmul
   597 ;;		_erase_flash
   598 ;;		_read_flash
   599 ;;		_write_flash
   600 ;;		_wyswietl
   601 ;; This function is called by:
   602 ;;		Startup code after reset
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           
   607                           ;psect for function _main
   608  0109                     _main:	
   609                           
   610                           ;main.c: 156: OSCCONbits.IRCF0 = 0;
   611                           
   612                           ;incstack = 0
   613                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   614  0109  0021               	movlb	1	; select bank1
   615  010A  1199               	bcf	25,3	;volatile
   616                           
   617                           ;main.c: 157: OSCCONbits.IRCF1 = 1;
   618  010B  1619               	bsf	25,4	;volatile
   619                           
   620                           ;main.c: 158: OSCCONbits.IRCF2 = 1;
   621  010C  1699               	bsf	25,5	;volatile
   622                           
   623                           ;main.c: 159: OSCCONbits.IRCF3 = 1;
   624  010D  1719               	bsf	25,6	;volatile
   625                           
   626                           ;main.c: 163: WDTCONbits.WDTPS0=0;
   627  010E  1097               	bcf	23,1	;volatile
   628                           
   629                           ;main.c: 164: WDTCONbits.WDTPS1=0;
   630  010F  1117               	bcf	23,2	;volatile
   631                           
   632                           ;main.c: 165: WDTCONbits.WDTPS2=1;
   633  0110  1597               	bsf	23,3	;volatile
   634                           
   635                           ;main.c: 166: WDTCONbits.WDTPS3=1;
   636  0111  1617               	bsf	23,4	;volatile
   637                           
   638                           ;main.c: 167: WDTCONbits.WDTPS4=0;
   639  0112  1297               	bcf	23,5	;volatile
   640                           
   641                           ;main.c: 171: OPTION_REGbits.PS0=0;
   642  0113  1015               	bcf	21,0	;volatile
   643                           
   644                           ;main.c: 172: OPTION_REGbits.PS1=1;
   645  0114  1495               	bsf	21,1	;volatile
   646                           
   647                           ;main.c: 173: OPTION_REGbits.PS2=0;
   648  0115  1115               	bcf	21,2	;volatile
   649                           
   650                           ;main.c: 174: OPTION_REGbits.TMR0CS = 0;
   651  0116  1295               	bcf	21,5	;volatile
   652                           
   653                           ;main.c: 175: OPTION_REGbits.PSA = 0;
   654  0117  1195               	bcf	21,3	;volatile
   655                           
   656                           ;main.c: 177: INTCONbits.TMR0IE = 1;
   657  0118  168B               	bsf	11,5	;volatile
   658                           
   659                           ;main.c: 178: INTCONbits.GIE = 1;
   660  0119  178B               	bsf	11,7	;volatile
   661                           
   662                           ;main.c: 185: ANSELAbits.ANSA0 = 0;
   663  011A  0023               	movlb	3	; select bank3
   664  011B  100C               	bcf	12,0	;volatile
   665                           
   666                           ;main.c: 186: ANSELAbits.ANSA1 = 0;
   667  011C  108C               	bcf	12,1	;volatile
   668                           
   669                           ;main.c: 187: ANSELAbits.ANSA2 = 0;
   670  011D  110C               	bcf	12,2	;volatile
   671                           
   672                           ;main.c: 188: ANSELAbits.ANSA3 = 0;
   673  011E  118C               	bcf	12,3	;volatile
   674                           
   675                           ;main.c: 189: ANSELAbits.ANSA5 = 0;
   676  011F  128C               	bcf	12,5	;volatile
   677                           
   678                           ;main.c: 192: TRISAbits.TRISA0 = 0;
   679  0120  0021               	movlb	1	; select bank1
   680  0121  100C               	bcf	12,0	;volatile
   681                           
   682                           ;main.c: 193: TRISAbits.TRISA1 = 0;
   683  0122  108C               	bcf	12,1	;volatile
   684                           
   685                           ;main.c: 194: TRISAbits.TRISA2 = 0;
   686  0123  110C               	bcf	12,2	;volatile
   687                           
   688                           ;main.c: 195: TRISAbits.TRISA3 = 0;
   689  0124  118C               	bcf	12,3	;volatile
   690                           
   691                           ;main.c: 196: TRISAbits.TRISA4 = 0;
   692  0125  120C               	bcf	12,4	;volatile
   693                           
   694                           ;main.c: 197: TRISAbits.TRISA5 = 0;
   695  0126  128C               	bcf	12,5	;volatile
   696                           
   697                           ;main.c: 198: TRISAbits.TRISA6 = 0;
   698  0127  130C               	bcf	12,6	;volatile
   699                           
   700                           ;main.c: 199: TRISAbits.TRISA7 = 0;
   701  0128  138C               	bcf	12,7	;volatile
   702                           
   703                           ;main.c: 202: LATAbits.LATA0 = 0;
   704  0129  0022               	movlb	2	; select bank2
   705  012A  100C               	bcf	12,0	;volatile
   706                           
   707                           ;main.c: 203: LATAbits.LATA1 = 0;
   708  012B  108C               	bcf	12,1	;volatile
   709                           
   710                           ;main.c: 204: LATAbits.LATA2 = 0;
   711  012C  110C               	bcf	12,2	;volatile
   712                           
   713                           ;main.c: 205: LATAbits.LATA3 = 0;
   714  012D  118C               	bcf	12,3	;volatile
   715                           
   716                           ;main.c: 206: LATAbits.LATA4 = 0;
   717  012E  120C               	bcf	12,4	;volatile
   718                           
   719                           ;main.c: 207: LATAbits.LATA5 = 0;
   720  012F  128C               	bcf	12,5	;volatile
   721                           
   722                           ;main.c: 208: LATAbits.LATA6 = 0;
   723  0130  130C               	bcf	12,6	;volatile
   724                           
   725                           ;main.c: 209: LATAbits.LATA7 = 0;
   726  0131  138C               	bcf	12,7	;volatile
   727                           
   728                           ;main.c: 214: ANSELBbits.ANSB0 = 0;
   729  0132  0023               	movlb	3	; select bank3
   730  0133  100D               	bcf	13,0	;volatile
   731                           
   732                           ;main.c: 215: ANSELBbits.ANSB1 = 0;
   733  0134  108D               	bcf	13,1	;volatile
   734                           
   735                           ;main.c: 218: TRISBbits.TRISB0 = 0;
   736  0135  0021               	movlb	1	; select bank1
   737  0136  100D               	bcf	13,0	;volatile
   738                           
   739                           ;main.c: 219: TRISBbits.TRISB1 = 0;
   740  0137  108D               	bcf	13,1	;volatile
   741                           
   742                           ;main.c: 221: LATBbits.LATB0 = 0;
   743  0138  0022               	movlb	2	; select bank2
   744  0139  100D               	bcf	13,0	;volatile
   745                           
   746                           ;main.c: 222: LATBbits.LATB1 = 0;
   747  013A  108D               	bcf	13,1	;volatile
   748                           
   749                           ;main.c: 226: ANSELBbits.ANSB2 = 0;
   750  013B  0023               	movlb	3	; select bank3
   751  013C  110D               	bcf	13,2	;volatile
   752                           
   753                           ;main.c: 227: ANSELBbits.ANSB3 = 0;
   754  013D  118D               	bcf	13,3	;volatile
   755                           
   756                           ;main.c: 228: ANSELBbits.ANSB4 = 0;
   757  013E  120D               	bcf	13,4	;volatile
   758                           
   759                           ;main.c: 229: ANSELBbits.ANSB5 = 0;
   760  013F  128D               	bcf	13,5	;volatile
   761                           
   762                           ;main.c: 231: TRISBbits.TRISB4 = 0;
   763  0140  0021               	movlb	1	; select bank1
   764  0141  120D               	bcf	13,4	;volatile
   765                           
   766                           ;main.c: 234: TRISBbits.TRISB2 = 1;
   767  0142  150D               	bsf	13,2	;volatile
   768                           
   769                           ;main.c: 235: TRISBbits.TRISB3 = 1;
   770  0143  158D               	bsf	13,3	;volatile
   771                           
   772                           ;main.c: 236: TRISBbits.TRISB4 = 1;
   773  0144  160D               	bsf	13,4	;volatile
   774                           
   775                           ;main.c: 237: TRISBbits.TRISB5 = 1;
   776  0145  168D               	bsf	13,5	;volatile
   777                           
   778                           ;main.c: 238: TRISBbits.TRISB6 = 1;
   779  0146  170D               	bsf	13,6	;volatile
   780                           
   781                           ;main.c: 239: TRISBbits.TRISB7 = 1;
   782  0147  178D               	bsf	13,7	;volatile
   783                           
   784                           ;main.c: 242: OPTION_REGbits.nWPUEN = 0;
   785  0148  1395               	bcf	21,7	;volatile
   786                           
   787                           ;main.c: 243: WPUBbits.WPUB3 = 1;
   788  0149  0024               	movlb	4	; select bank4
   789  014A  158D               	bsf	13,3	;volatile
   790                           
   791                           ;main.c: 244: WPUBbits.WPUB4 = 1;
   792  014B  160D               	bsf	13,4	;volatile
   793                           
   794                           ;main.c: 248: TRISC = 0;
   795  014C  0021               	movlb	1	; select bank1
   796  014D  018E               	clrf	14	;volatile
   797                           
   798                           ;main.c: 249: LATC = 0;
   799  014E  0022               	movlb	2	; select bank2
   800  014F  018E               	clrf	14	;volatile
   801                           
   802                           ;main.c: 250: ANSELC = 0;
   803  0150  0023               	movlb	3	; select bank3
   804  0151  018E               	clrf	14	;volatile
   805                           
   806                           ;main.c: 253: ANSELAbits.ANSA5 = 0;
   807  0152  128C               	bcf	12,5	;volatile
   808                           
   809                           ;main.c: 254: TRISAbits.TRISA5 = 0;
   810  0153  0021               	movlb	1	; select bank1
   811  0154  128C               	bcf	12,5	;volatile
   812                           
   813                           ;main.c: 255: LATAbits.LATA5 = 0;
   814  0155  0022               	movlb	2	; select bank2
   815  0156  128C               	bcf	12,5	;volatile
   816                           
   817                           ;main.c: 258: FVRCONbits.TSEN = 1;
   818  0157  1697               	bsf	23,5	;volatile
   819                           
   820                           ;main.c: 259: FVRCONbits.FVREN = 0;
   821  0158  1397               	bcf	23,7	;volatile
   822                           
   823                           ;main.c: 260: FVRCONbits.TSRNG = 1;
   824  0159  1617               	bsf	23,4	;volatile
   825                           
   826                           ;main.c: 262: ADCON0bits.ADON = 1;
   827  015A  0021               	movlb	1	; select bank1
   828  015B  141D               	bsf	29,0	;volatile
   829                           
   830                           ;main.c: 263: ADCON0bits.CHS = 0b11110;
   831  015C  081D               	movf	29,w	;volatile
   832  015D  3983               	andlw	-125
   833  015E  3878               	iorlw	120
   834  015F  009D               	movwf	29	;volatile
   835                           
   836                           ;main.c: 264: ADCON1 |= 0b10000000;
   837  0160  179E               	bsf	30,7	;volatile
   838                           
   839                           ;main.c: 267: x=0;
   840  0161  0020               	movlb	0	; select bank0
   841  0162  01C9               	clrf	_x	;volatile
   842                           
   843                           ;main.c: 268: flaga_temp = 0;
   844  0163  01BF               	clrf	_flaga_temp	;volatile
   845                           
   846                           ;main.c: 270: cyf_1 = 0;
   847  0164  01E8               	clrf	_cyf_1	;volatile
   848                           
   849                           ;main.c: 271: cyf_2 = 0;
   850  0165  01E9               	clrf	_cyf_2	;volatile
   851                           
   852                           ;main.c: 272: cyf_3 = 0;
   853  0166  01BD               	clrf	_cyf_3	;volatile
   854                           
   855                           ;main.c: 273: kro_1 = 0;
   856  0167  01EC               	clrf	_kro_1	;volatile
   857                           
   858                           ;main.c: 274: kro_2 = 0;
   859  0168  0021               	movlb	1	; select bank1
   860  0169  01A8               	clrf	_kro_2^(0+128)	;volatile
   861                           
   862                           ;main.c: 275: kro_3 = 0;
   863  016A  0020               	movlb	0	; select bank0
   864  016B  01C4               	clrf	_kro_3	;volatile
   865                           
   866                           ;main.c: 277: timer5 = 5000;
   867  016C  3000               	movlw	0
   868  016D  00E5               	movwf	_timer5+3	;volatile
   869  016E  3000               	movlw	0
   870  016F  00E4               	movwf	_timer5+2	;volatile
   871  0170  3013               	movlw	19
   872  0171  00E3               	movwf	_timer5+1	;volatile
   873  0172  3088               	movlw	136
   874  0173  00E2               	movwf	_timer5	;volatile
   875                           
   876                           ;main.c: 279: START = 0;
   877  0174  01B8               	clrf	_START	;volatile
   878                           
   879                           ;main.c: 280: czas_przerwa_ms = 100;
   880  0175  3064               	movlw	100
   881  0176  0021               	movlb	1	; select bank1
   882  0177  00A4               	movwf	??_main^(0+128)
   883  0178  0824               	movf	??_main^(0+128),w
   884  0179  0020               	movlb	0	; select bank0
   885  017A  00EA               	movwf	_czas_przerwa_ms	;volatile
   886                           
   887                           ;main.c: 281: czas_s_reset = 15;
   888  017B  300F               	movlw	15
   889  017C  00E6               	movwf	_czas_s_reset	;volatile
   890  017D  3000               	movlw	0
   891  017E  00E7               	movwf	_czas_s_reset+1	;volatile
   892                           
   893                           ;main.c: 285: grzalka_numer = 1;
   894  017F  3001               	movlw	1
   895  0180  0021               	movlb	1	; select bank1
   896  0181  00A4               	movwf	??_main^(0+128)
   897  0182  0824               	movf	??_main^(0+128),w
   898  0183  0020               	movlb	0	; select bank0
   899  0184  00EB               	movwf	_grzalka_numer	;volatile
   900                           
   901                           ;main.c: 286: START_Fl = 0;
   902  0185  01B9               	clrf	_START_Fl	;volatile
   903                           
   904                           ;main.c: 289: cyf_1 = 14;
   905  0186  300E               	movlw	14
   906  0187  0021               	movlb	1	; select bank1
   907  0188  00A4               	movwf	??_main^(0+128)
   908  0189  0824               	movf	??_main^(0+128),w
   909  018A  0020               	movlb	0	; select bank0
   910  018B  00E8               	movwf	_cyf_1	;volatile
   911                           
   912                           ;main.c: 290: cyf_2 = 14;
   913  018C  300E               	movlw	14
   914  018D  0021               	movlb	1	; select bank1
   915  018E  00A4               	movwf	??_main^(0+128)
   916  018F  0824               	movf	??_main^(0+128),w
   917  0190  0020               	movlb	0	; select bank0
   918  0191  00E9               	movwf	_cyf_2	;volatile
   919                           
   920                           ;main.c: 291: kro_1 = 1;
   921  0192  3001               	movlw	1
   922  0193  0021               	movlb	1	; select bank1
   923  0194  00A4               	movwf	??_main^(0+128)
   924  0195  0824               	movf	??_main^(0+128),w
   925  0196  0020               	movlb	0	; select bank0
   926  0197  00EC               	movwf	_kro_1	;volatile
   927                           
   928                           ;main.c: 292: kro_2 = 1;
   929  0198  3001               	movlw	1
   930  0199  0021               	movlb	1	; select bank1
   931  019A  00A4               	movwf	??_main^(0+128)
   932  019B  0824               	movf	??_main^(0+128),w
   933  019C  00A8               	movwf	_kro_2^(0+128)	;volatile
   934                           
   935                           ;main.c: 293: _delay((unsigned long)((1000)*(8000000/4000.0)));
   936  019D  300B               	movlw	11
   937  019E  00A6               	movwf	(??_main^(0+128)+2)
   938  019F  3026               	movlw	38
   939  01A0  00A5               	movwf	(??_main^(0+128)+1)
   940  01A1  3066               	movlw	102
   941  01A2  00A4               	movwf	??_main^(0+128)
   942  01A3                     u2337:	
   943  01A3  0BA4               	decfsz	??_main^(0+128),f
   944  01A4  29A3               	goto	u2337
   945  01A5  0BA5               	decfsz	(??_main^(0+128)+1),f
   946  01A6  29A3               	goto	u2337
   947  01A7  0BA6               	decfsz	(??_main^(0+128)+2),f
   948  01A8  29A3               	goto	u2337
   949  01A9  3200               	nop2
   950                           
   951                           ;main.c: 295: flash_low = read_flash(adr_hi, adr_low);
   952  01AA  0020               	movlb	0	; select bank0
   953  01AB  086E               	movf	_adr_low,w	;volatile
   954  01AC  0021               	movlb	1	; select bank1
   955  01AD  00A4               	movwf	??_main^(0+128)
   956  01AE  0824               	movf	??_main^(0+128),w
   957  01AF  0020               	movlb	0	; select bank0
   958  01B0  00CA               	movwf	read_flash@adrs_lo
   959  01B1  086D               	movf	_adr_hi,w	;volatile
   960  01B2  3186  264E  3181   	fcall	_read_flash
   961  01B5  0021               	movlb	1	; select bank1
   962  01B6  00A5               	movwf	(??_main+1)^(0+128)
   963  01B7  0825               	movf	(??_main+1)^(0+128),w
   964  01B8  0020               	movlb	0	; select bank0
   965  01B9  00C1               	movwf	_flash_low	;volatile
   966                           
   967                           ;main.c: 296: flash_hi = (read_flash(adr_hi, adr_low2) );
   968  01BA  086F               	movf	_adr_low2,w	;volatile
   969  01BB  0021               	movlb	1	; select bank1
   970  01BC  00A4               	movwf	??_main^(0+128)
   971  01BD  0824               	movf	??_main^(0+128),w
   972  01BE  0020               	movlb	0	; select bank0
   973  01BF  00CA               	movwf	read_flash@adrs_lo
   974  01C0  086D               	movf	_adr_hi,w	;volatile
   975  01C1  3186  264E  3181   	fcall	_read_flash
   976  01C4  0021               	movlb	1	; select bank1
   977  01C5  00A5               	movwf	(??_main+1)^(0+128)
   978  01C6  0825               	movf	(??_main+1)^(0+128),w
   979  01C7  0020               	movlb	0	; select bank0
   980  01C8  00C0               	movwf	_flash_hi	;volatile
   981                           
   982                           ;main.c: 299: if ( (flash_low == 0xFF) && (flash_hi == 0xFF)) {
   983  01C9  0A41               	incf	_flash_low,w	;volatile
   984  01CA  1D03               	btfss	3,2
   985  01CB  29D4               	goto	l1877
   986  01CC  0A40               	incf	_flash_hi,w	;volatile
   987  01CD  1D03               	btfss	3,2
   988  01CE  29D4               	goto	l1877
   989                           
   990                           ;main.c: 300: flash_low = 0;
   991  01CF  01C1               	clrf	_flash_low	;volatile
   992                           
   993                           ;main.c: 301: flash_hi = 0;
   994  01D0  01C0               	clrf	_flash_hi	;volatile
   995                           
   996                           ;main.c: 302: czas_flash = 0;
   997  01D1  01AA               	clrf	_czas_flash	;volatile
   998  01D2  01AB               	clrf	_czas_flash+1	;volatile
   999                           
  1000                           ;main.c: 303: }else{
  1001  01D3  29FA               	goto	l1887
  1002  01D4                     l1877:	
  1003                           
  1004                           ;main.c: 304: flash_hi = 0;
  1005  01D4  01C0               	clrf	_flash_hi	;volatile
  1006                           
  1007                           ;main.c: 305: czas_s = flash_hi ;
  1008  01D5  0840               	movf	_flash_hi,w	;volatile
  1009  01D6  0021               	movlb	1	; select bank1
  1010  01D7  00A4               	movwf	??_main^(0+128)
  1011  01D8  01A5               	clrf	(??_main^(0+128)+1)
  1012  01D9  0824               	movf	??_main^(0+128),w
  1013  01DA  0020               	movlb	0	; select bank0
  1014  01DB  00AC               	movwf	_czas_s	;volatile
  1015  01DC  0021               	movlb	1	; select bank1
  1016  01DD  0825               	movf	(??_main+1)^(0+128),w
  1017  01DE  0020               	movlb	0	; select bank0
  1018  01DF  00AD               	movwf	_czas_s+1	;volatile
  1019                           
  1020                           ;main.c: 306: czas_s = (czas_s<<8);
  1021  01E0  082C               	movf	_czas_s,w	;volatile
  1022  01E1  0021               	movlb	1	; select bank1
  1023  01E2  00A5               	movwf	(??_main^(0+128)+1)
  1024  01E3  01A4               	clrf	??_main^(0+128)
  1025  01E4  0824               	movf	??_main^(0+128),w
  1026  01E5  0020               	movlb	0	; select bank0
  1027  01E6  00AC               	movwf	_czas_s	;volatile
  1028  01E7  0021               	movlb	1	; select bank1
  1029  01E8  0825               	movf	(??_main+1)^(0+128),w
  1030  01E9  0020               	movlb	0	; select bank0
  1031  01EA  00AD               	movwf	_czas_s+1	;volatile
  1032                           
  1033                           ;main.c: 307: czas_s|= flash_low;
  1034  01EB  0841               	movf	_flash_low,w	;volatile
  1035  01EC  0021               	movlb	1	; select bank1
  1036  01ED  00A4               	movwf	??_main^(0+128)
  1037  01EE  01A5               	clrf	(??_main^(0+128)+1)
  1038  01EF  0824               	movf	??_main^(0+128),w
  1039  01F0  0020               	movlb	0	; select bank0
  1040  01F1  04AC               	iorwf	_czas_s,f	;volatile
  1041  01F2  0021               	movlb	1	; select bank1
  1042  01F3  0825               	movf	(??_main+1)^(0+128),w
  1043  01F4  0020               	movlb	0	; select bank0
  1044  01F5  04AD               	iorwf	_czas_s+1,f	;volatile
  1045                           
  1046                           ;main.c: 310: czas_flash = czas_s;
  1047  01F6  082D               	movf	_czas_s+1,w	;volatile
  1048  01F7  00AB               	movwf	_czas_flash+1	;volatile
  1049  01F8  082C               	movf	_czas_s,w	;volatile
  1050  01F9  00AA               	movwf	_czas_flash	;volatile
  1051  01FA                     l1887:	
  1052                           
  1053                           ;main.c: 311: }
  1054                           ;main.c: 314: if (czas_s == 0) {
  1055  01FA  082C               	movf	_czas_s,w	;volatile
  1056  01FB  042D               	iorwf	_czas_s+1,w	;volatile
  1057  01FC  1D03               	btfss	3,2
  1058  01FD  2A02               	goto	l166
  1059                           
  1060                           ;main.c: 315: czas_s = czas_s_reset;
  1061  01FE  0867               	movf	_czas_s_reset+1,w	;volatile
  1062  01FF  00AD               	movwf	_czas_s+1	;volatile
  1063  0200  0866               	movf	_czas_s_reset,w	;volatile
  1064  0201  00AC               	movwf	_czas_s	;volatile
  1065  0202                     l166:	
  1066                           ;main.c: 316: }
  1067                           ;main.c: 318: while(1){
  1068                           
  1069                           
  1070                           ;main.c: 321: if (czas_s > 1800) {
  1071  0202  3007               	movlw	7
  1072  0203  0020               	movlb	0	; select bank0
  1073  0204  022D               	subwf	_czas_s+1,w	;volatile
  1074  0205  3009               	movlw	9
  1075  0206  1903               	skipnz
  1076  0207  022C               	subwf	_czas_s,w	;volatile
  1077  0208  1C03               	skipc
  1078  0209  2A0E               	goto	l1893
  1079                           
  1080                           ;main.c: 322: czas_s = 1800;
  1081  020A  3008               	movlw	8
  1082  020B  00AC               	movwf	_czas_s	;volatile
  1083  020C  3007               	movlw	7
  1084  020D  00AD               	movwf	_czas_s+1	;volatile
  1085  020E                     l1893:	
  1086                           
  1087                           ;main.c: 323: }
  1088                           ;main.c: 324: if (czas_s < 1) {
  1089  020E  082C               	movf	_czas_s,w	;volatile
  1090  020F  042D               	iorwf	_czas_s+1,w	;volatile
  1091  0210  1D03               	btfss	3,2
  1092  0211  2A16               	goto	l1897
  1093                           
  1094                           ;main.c: 325: czas_s = 1;
  1095  0212  3001               	movlw	1
  1096  0213  00AC               	movwf	_czas_s	;volatile
  1097  0214  3000               	movlw	0
  1098  0215  00AD               	movwf	_czas_s+1	;volatile
  1099  0216                     l1897:	
  1100                           
  1101                           ;main.c: 326: }
  1102                           ;main.c: 329: if ( (PORTBbits.RB3 == 0) && (PORTBbits.RB4 == 1 )){
  1103  0216  1D8D               	btfss	13,3	;volatile
  1104  0217  1E0D               	btfss	13,4	;volatile
  1105  0218  2A37               	goto	l1911
  1106                           
  1107                           ;main.c: 330: if (przycisk_plus_flag == 0 ){
  1108  0219  0847               	movf	_przycisk_plus_flag,w	;volatile
  1109  021A  1D03               	btfss	3,2
  1110  021B  2A26               	goto	l1905
  1111                           
  1112                           ;main.c: 331: _delay((unsigned long)((50)*(8000000/4000.0)));
  1113  021C  3082               	movlw	130
  1114  021D  0021               	movlb	1	; select bank1
  1115  021E  00A5               	movwf	(??_main^(0+128)+1)
  1116  021F  30DD               	movlw	221
  1117  0220  00A4               	movwf	??_main^(0+128)
  1118  0221                     u2347:	
  1119  0221  0BA4               	decfsz	??_main^(0+128),f
  1120  0222  2A21               	goto	u2347
  1121  0223  0BA5               	decfsz	(??_main^(0+128)+1),f
  1122  0224  2A21               	goto	u2347
  1123  0225  3200               	nop2
  1124  0226                     l1905:	
  1125                           
  1126                           ;main.c: 332: }
  1127                           ;main.c: 333: if ( (PORTBbits.RB3 == 0) && (przycisk_plus_flag == 0) ) {
  1128  0226  0020               	movlb	0	; select bank0
  1129  0227  198D               	btfsc	13,3	;volatile
  1130  0228  2A3C               	goto	l1915
  1131  0229  0847               	movf	_przycisk_plus_flag,w	;volatile
  1132  022A  1D03               	btfss	3,2
  1133  022B  2A3C               	goto	l1915
  1134                           
  1135                           ;main.c: 334: czas_s++;
  1136  022C  3001               	movlw	1
  1137  022D  07AC               	addwf	_czas_s,f	;volatile
  1138  022E  3000               	movlw	0
  1139  022F  3DAD               	addwfc	_czas_s+1,f	;volatile
  1140                           
  1141                           ;main.c: 335: przycisk_plus_flag = 1;
  1142  0230  3001               	movlw	1
  1143  0231  0021               	movlb	1	; select bank1
  1144  0232  00A4               	movwf	??_main^(0+128)
  1145  0233  0824               	movf	??_main^(0+128),w
  1146  0234  0020               	movlb	0	; select bank0
  1147  0235  00C7               	movwf	_przycisk_plus_flag	;volatile
  1148                           
  1149                           ;main.c: 336: }
  1150                           ;main.c: 337: }else{
  1151  0236  2A3C               	goto	l1915
  1152  0237                     l1911:	
  1153                           
  1154                           ;main.c: 338: przycisk_plus_flag = 0;
  1155  0237  01C7               	clrf	_przycisk_plus_flag	;volatile
  1156                           
  1157                           ;main.c: 339: timer1 = 1500;
  1158  0238  30DC               	movlw	220
  1159  0239  00AE               	movwf	_timer1	;volatile
  1160  023A  3005               	movlw	5
  1161  023B  00AF               	movwf	_timer1+1	;volatile
  1162  023C                     l1915:	
  1163                           
  1164                           ;main.c: 340: }
  1165                           ;main.c: 342: if ( (timer1 == 0) && (przycisk_plus_flag == 1) ) {
  1166  023C  082E               	movf	_timer1,w	;volatile
  1167  023D  042F               	iorwf	_timer1+1,w	;volatile
  1168  023E  1D03               	btfss	3,2
  1169  023F  2A51               	goto	l1921
  1170  0240  0347               	decf	_przycisk_plus_flag,w	;volatile
  1171  0241  1D03               	btfss	3,2
  1172  0242  2A51               	goto	l1921
  1173                           
  1174                           ;main.c: 343: czas_s++;
  1175  0243  3001               	movlw	1
  1176  0244  07AC               	addwf	_czas_s,f	;volatile
  1177  0245  3000               	movlw	0
  1178  0246  3DAD               	addwfc	_czas_s+1,f	;volatile
  1179                           
  1180                           ;main.c: 344: _delay((unsigned long)((10)*(8000000/4000.0)));
  1181  0247  301A               	movlw	26
  1182  0248  0021               	movlb	1	; select bank1
  1183  0249  00A5               	movwf	(??_main^(0+128)+1)
  1184  024A  30F8               	movlw	248
  1185  024B  00A4               	movwf	??_main^(0+128)
  1186  024C                     u2357:	
  1187  024C  0BA4               	decfsz	??_main^(0+128),f
  1188  024D  2A4C               	goto	u2357
  1189  024E  0BA5               	decfsz	(??_main^(0+128)+1),f
  1190  024F  2A4C               	goto	u2357
  1191  0250  0000               	nop
  1192  0251                     l1921:	
  1193                           
  1194                           ;main.c: 345: }
  1195                           ;main.c: 349: if ( (PORTBbits.RB3 == 1) && (PORTBbits.RB4 == 0 )){
  1196  0251  0020               	movlb	0	; select bank0
  1197  0252  198D               	btfsc	13,3	;volatile
  1198  0253  1A0D               	btfsc	13,4	;volatile
  1199  0254  2A73               	goto	l1935
  1200                           
  1201                           ;main.c: 350: if (przycisk_minus_flag == 0 ){
  1202  0255  0846               	movf	_przycisk_minus_flag,w	;volatile
  1203  0256  1D03               	btfss	3,2
  1204  0257  2A62               	goto	l1929
  1205                           
  1206                           ;main.c: 351: _delay((unsigned long)((50)*(8000000/4000.0)));
  1207  0258  3082               	movlw	130
  1208  0259  0021               	movlb	1	; select bank1
  1209  025A  00A5               	movwf	(??_main^(0+128)+1)
  1210  025B  30DD               	movlw	221
  1211  025C  00A4               	movwf	??_main^(0+128)
  1212  025D                     u2367:	
  1213  025D  0BA4               	decfsz	??_main^(0+128),f
  1214  025E  2A5D               	goto	u2367
  1215  025F  0BA5               	decfsz	(??_main^(0+128)+1),f
  1216  0260  2A5D               	goto	u2367
  1217  0261  3200               	nop2
  1218  0262                     l1929:	
  1219                           
  1220                           ;main.c: 352: }
  1221                           ;main.c: 353: if ( (PORTBbits.RB4 == 0) && (przycisk_minus_flag == 0) ) {
  1222  0262  0020               	movlb	0	; select bank0
  1223  0263  1A0D               	btfsc	13,4	;volatile
  1224  0264  2A78               	goto	l1939
  1225  0265  0846               	movf	_przycisk_minus_flag,w	;volatile
  1226  0266  1D03               	btfss	3,2
  1227  0267  2A78               	goto	l1939
  1228                           
  1229                           ;main.c: 354: czas_s--;
  1230  0268  3001               	movlw	1
  1231  0269  02AC               	subwf	_czas_s,f	;volatile
  1232  026A  3000               	movlw	0
  1233  026B  3BAD               	subwfb	_czas_s+1,f	;volatile
  1234                           
  1235                           ;main.c: 355: przycisk_minus_flag = 1;
  1236  026C  3001               	movlw	1
  1237  026D  0021               	movlb	1	; select bank1
  1238  026E  00A4               	movwf	??_main^(0+128)
  1239  026F  0824               	movf	??_main^(0+128),w
  1240  0270  0020               	movlb	0	; select bank0
  1241  0271  00C6               	movwf	_przycisk_minus_flag	;volatile
  1242                           
  1243                           ;main.c: 356: }
  1244                           ;main.c: 357: }else{
  1245  0272  2A78               	goto	l1939
  1246  0273                     l1935:	
  1247                           
  1248                           ;main.c: 358: przycisk_minus_flag = 0;
  1249  0273  01C6               	clrf	_przycisk_minus_flag	;volatile
  1250                           
  1251                           ;main.c: 359: timer6 = 1500;
  1252  0274  30DC               	movlw	220
  1253  0275  00B4               	movwf	_timer6	;volatile
  1254  0276  3005               	movlw	5
  1255  0277  00B5               	movwf	_timer6+1	;volatile
  1256  0278                     l1939:	
  1257                           
  1258                           ;main.c: 360: }
  1259                           ;main.c: 362: if ( (timer6 == 0) && (przycisk_minus_flag == 1) ) {
  1260  0278  0834               	movf	_timer6,w	;volatile
  1261  0279  0435               	iorwf	_timer6+1,w	;volatile
  1262  027A  1D03               	btfss	3,2
  1263  027B  2A8D               	goto	l1945
  1264  027C  0346               	decf	_przycisk_minus_flag,w	;volatile
  1265  027D  1D03               	btfss	3,2
  1266  027E  2A8D               	goto	l1945
  1267                           
  1268                           ;main.c: 363: czas_s--;
  1269  027F  3001               	movlw	1
  1270  0280  02AC               	subwf	_czas_s,f	;volatile
  1271  0281  3000               	movlw	0
  1272  0282  3BAD               	subwfb	_czas_s+1,f	;volatile
  1273                           
  1274                           ;main.c: 364: _delay((unsigned long)((10)*(8000000/4000.0)));
  1275  0283  301A               	movlw	26
  1276  0284  0021               	movlb	1	; select bank1
  1277  0285  00A5               	movwf	(??_main^(0+128)+1)
  1278  0286  30F8               	movlw	248
  1279  0287  00A4               	movwf	??_main^(0+128)
  1280  0288                     u2377:	
  1281  0288  0BA4               	decfsz	??_main^(0+128),f
  1282  0289  2A88               	goto	u2377
  1283  028A  0BA5               	decfsz	(??_main^(0+128)+1),f
  1284  028B  2A88               	goto	u2377
  1285  028C  0000               	nop
  1286  028D                     l1945:	
  1287                           
  1288                           ;main.c: 365: }
  1289                           ;main.c: 369: if ( (PORTBbits.RB3 == 0) && (PORTBbits.RB4 == 0 )){
  1290  028D  0020               	movlb	0	; select bank0
  1291  028E  1D8D               	btfss	13,3	;volatile
  1292  028F  1A0D               	btfsc	13,4	;volatile
  1293  0290  2AD4               	goto	l179
  1294                           
  1295                           ;main.c: 370: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1296  0291  300B               	movlw	11
  1297  0292  0021               	movlb	1	; select bank1
  1298  0293  00A6               	movwf	(??_main^(0+128)+2)
  1299  0294  3026               	movlw	38
  1300  0295  00A5               	movwf	(??_main^(0+128)+1)
  1301  0296  3066               	movlw	102
  1302  0297  00A4               	movwf	??_main^(0+128)
  1303  0298                     u2387:	
  1304  0298  0BA4               	decfsz	??_main^(0+128),f
  1305  0299  2A98               	goto	u2387
  1306  029A  0BA5               	decfsz	(??_main^(0+128)+1),f
  1307  029B  2A98               	goto	u2387
  1308  029C  0BA6               	decfsz	(??_main^(0+128)+2),f
  1309  029D  2A98               	goto	u2387
  1310  029E  3200               	nop2
  1311  029F  0064               	clrwdt	;# 
  1312                           
  1313                           ;main.c: 372: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1314  02A0  300B               	movlw	11
  1315  02A1  0021               	movlb	1	; select bank1
  1316  02A2  00A6               	movwf	(??_main^(0+128)+2)
  1317  02A3  3026               	movlw	38
  1318  02A4  00A5               	movwf	(??_main^(0+128)+1)
  1319  02A5  3066               	movlw	102
  1320  02A6  00A4               	movwf	??_main^(0+128)
  1321  02A7                     u2397:	
  1322  02A7  0BA4               	decfsz	??_main^(0+128),f
  1323  02A8  2AA7               	goto	u2397
  1324  02A9  0BA5               	decfsz	(??_main^(0+128)+1),f
  1325  02AA  2AA7               	goto	u2397
  1326  02AB  0BA6               	decfsz	(??_main^(0+128)+2),f
  1327  02AC  2AA7               	goto	u2397
  1328  02AD  3200               	nop2
  1329  02AE  0064               	clrwdt	;# 
  1330                           
  1331                           ;main.c: 374: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1332  02AF  300B               	movlw	11
  1333  02B0  0021               	movlb	1	; select bank1
  1334  02B1  00A6               	movwf	(??_main^(0+128)+2)
  1335  02B2  3026               	movlw	38
  1336  02B3  00A5               	movwf	(??_main^(0+128)+1)
  1337  02B4  3066               	movlw	102
  1338  02B5  00A4               	movwf	??_main^(0+128)
  1339  02B6                     u2407:	
  1340  02B6  0BA4               	decfsz	??_main^(0+128),f
  1341  02B7  2AB6               	goto	u2407
  1342  02B8  0BA5               	decfsz	(??_main^(0+128)+1),f
  1343  02B9  2AB6               	goto	u2407
  1344  02BA  0BA6               	decfsz	(??_main^(0+128)+2),f
  1345  02BB  2AB6               	goto	u2407
  1346  02BC  3200               	nop2
  1347  02BD  0064               	clrwdt	;# 
  1348                           
  1349                           ;main.c: 376: if ( (PORTBbits.RB3 == 0) && (PORTBbits.RB4 == 0 )){
  1350  02BE  0020               	movlb	0	; select bank0
  1351  02BF  1D8D               	btfss	13,3	;volatile
  1352  02C0  1A0D               	btfsc	13,4	;volatile
  1353  02C1  2AC6               	goto	l180
  1354                           
  1355                           ;main.c: 377: czas_s = czas_s_reset;
  1356  02C2  0867               	movf	_czas_s_reset+1,w	;volatile
  1357  02C3  00AD               	movwf	_czas_s+1	;volatile
  1358  02C4  0866               	movf	_czas_s_reset,w	;volatile
  1359  02C5  00AC               	movwf	_czas_s	;volatile
  1360  02C6                     l180:	
  1361                           
  1362                           ;main.c: 378: }
  1363                           ;main.c: 379: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1364  02C6  300B               	movlw	11
  1365  02C7  0021               	movlb	1	; select bank1
  1366  02C8  00A6               	movwf	(??_main^(0+128)+2)
  1367  02C9  3026               	movlw	38
  1368  02CA  00A5               	movwf	(??_main^(0+128)+1)
  1369  02CB  3066               	movlw	102
  1370  02CC  00A4               	movwf	??_main^(0+128)
  1371  02CD                     u2417:	
  1372  02CD  0BA4               	decfsz	??_main^(0+128),f
  1373  02CE  2ACD               	goto	u2417
  1374  02CF  0BA5               	decfsz	(??_main^(0+128)+1),f
  1375  02D0  2ACD               	goto	u2417
  1376  02D1  0BA6               	decfsz	(??_main^(0+128)+2),f
  1377  02D2  2ACD               	goto	u2417
  1378  02D3  3200               	nop2
  1379  02D4                     l179:	
  1380                           
  1381                           ;main.c: 380: }
  1382                           ;main.c: 385: if ( (czas_s!= czas_flash) && (PORTBbits.RB3 ==1) && (PORTBbits.RB4 == 1) 
      +                          ) {
  1383  02D4  0020               	movlb	0	; select bank0
  1384  02D5  082B               	movf	_czas_flash+1,w	;volatile
  1385  02D6  062D               	xorwf	_czas_s+1,w	;volatile
  1386  02D7  1D03               	skipz
  1387  02D8  2ADB               	goto	u2145
  1388  02D9  082A               	movf	_czas_flash,w	;volatile
  1389  02DA  062C               	xorwf	_czas_s,w	;volatile
  1390  02DB                     u2145:	
  1391  02DB  1D03               	btfss	3,2
  1392  02DC  1D8D               	btfss	13,3	;volatile
  1393  02DD  2B52               	goto	l1985
  1394  02DE  1E0D               	btfss	13,4	;volatile
  1395  02DF  2B52               	goto	l1985
  1396                           
  1397                           ;main.c: 387: if (timer7<4000) {
  1398  02E0  300F               	movlw	15
  1399  02E1  0237               	subwf	_timer7+1,w	;volatile
  1400  02E2  30A0               	movlw	160
  1401  02E3  1903               	skipnz
  1402  02E4  0236               	subwf	_timer7,w	;volatile
  1403  02E5  1803               	skipnc
  1404  02E6  2AF2               	goto	l1965
  1405                           
  1406                           ;main.c: 388: kro_1 = 1;
  1407  02E7  3001               	movlw	1
  1408  02E8  0021               	movlb	1	; select bank1
  1409  02E9  00A4               	movwf	??_main^(0+128)
  1410  02EA  0824               	movf	??_main^(0+128),w
  1411  02EB  0020               	movlb	0	; select bank0
  1412  02EC  00EC               	movwf	_kro_1	;volatile
  1413                           
  1414                           ;main.c: 389: kro_2 = 1;
  1415  02ED  3001               	movlw	1
  1416  02EE  0021               	movlb	1	; select bank1
  1417  02EF  00A4               	movwf	??_main^(0+128)
  1418  02F0  0824               	movf	??_main^(0+128),w
  1419  02F1  00A8               	movwf	_kro_2^(0+128)	;volatile
  1420  02F2                     l1965:	
  1421                           
  1422                           ;main.c: 390: }
  1423                           ;main.c: 393: if (timer7 == 0 ) {
  1424  02F2  0020               	movlb	0	; select bank0
  1425  02F3  0836               	movf	_timer7,w	;volatile
  1426  02F4  0437               	iorwf	_timer7+1,w	;volatile
  1427  02F5  1D03               	btfss	3,2
  1428  02F6  2B56               	goto	l1987
  1429                           
  1430                           ;main.c: 397: unsigned char tmp;
  1431                           ;main.c: 398: tmp = (czas_s & 0x00ff);
  1432  02F7  082C               	movf	_czas_s,w	;volatile
  1433  02F8  0021               	movlb	1	; select bank1
  1434  02F9  00A4               	movwf	??_main^(0+128)
  1435  02FA  0824               	movf	??_main^(0+128),w
  1436  02FB  0020               	movlb	0	; select bank0
  1437  02FC  00DF               	movwf	main@tmp
  1438                           
  1439                           ;main.c: 399: erase_flash(adr_hi, adr_low);
  1440  02FD  086E               	movf	_adr_low,w	;volatile
  1441  02FE  0021               	movlb	1	; select bank1
  1442  02FF  00A4               	movwf	??_main^(0+128)
  1443  0300  0824               	movf	??_main^(0+128),w
  1444  0301  0020               	movlb	0	; select bank0
  1445  0302  00CA               	movwf	erase_flash@adr_lo
  1446  0303  086D               	movf	_adr_hi,w	;volatile
  1447  0304  3186  262E  3181   	fcall	_erase_flash
  1448                           
  1449                           ;main.c: 400: write_flash(adr_hi, adr_low, tmp );
  1450  0307  0020               	movlb	0	; select bank0
  1451  0308  086E               	movf	_adr_low,w	;volatile
  1452  0309  0021               	movlb	1	; select bank1
  1453  030A  00A4               	movwf	??_main^(0+128)
  1454  030B  0824               	movf	??_main^(0+128),w
  1455  030C  0020               	movlb	0	; select bank0
  1456  030D  00CA               	movwf	write_flash@adr_lo
  1457  030E  085F               	movf	main@tmp,w
  1458  030F  0021               	movlb	1	; select bank1
  1459  0310  00A5               	movwf	(??_main+1)^(0+128)
  1460  0311  0825               	movf	(??_main+1)^(0+128),w
  1461  0312  0020               	movlb	0	; select bank0
  1462  0313  00CB               	movwf	write_flash@data_lo
  1463  0314  086D               	movf	_adr_hi,w	;volatile
  1464  0315  3186  2607  3181   	fcall	_write_flash
  1465                           
  1466                           ;main.c: 401: tmp = ((czas_s >>8)&0x00ff);
  1467  0318  0020               	movlb	0	; select bank0
  1468  0319  082D               	movf	_czas_s+1,w	;volatile
  1469  031A  0021               	movlb	1	; select bank1
  1470  031B  00A4               	movwf	??_main^(0+128)
  1471  031C  0824               	movf	??_main^(0+128),w
  1472  031D  0020               	movlb	0	; select bank0
  1473  031E  00DF               	movwf	main@tmp
  1474                           
  1475                           ;main.c: 402: write_flash(adr_hi, adr_low2, tmp);
  1476  031F  086F               	movf	_adr_low2,w	;volatile
  1477  0320  0021               	movlb	1	; select bank1
  1478  0321  00A4               	movwf	??_main^(0+128)
  1479  0322  0824               	movf	??_main^(0+128),w
  1480  0323  0020               	movlb	0	; select bank0
  1481  0324  00CA               	movwf	write_flash@adr_lo
  1482  0325  085F               	movf	main@tmp,w
  1483  0326  0021               	movlb	1	; select bank1
  1484  0327  00A5               	movwf	(??_main+1)^(0+128)
  1485  0328  0825               	movf	(??_main+1)^(0+128),w
  1486  0329  0020               	movlb	0	; select bank0
  1487  032A  00CB               	movwf	write_flash@data_lo
  1488  032B  086D               	movf	_adr_hi,w	;volatile
  1489  032C  3186  2607  3181   	fcall	_write_flash
  1490                           
  1491                           ;main.c: 404: flash_low = read_flash(adr_hi, adr_low);
  1492  032F  0020               	movlb	0	; select bank0
  1493  0330  086E               	movf	_adr_low,w	;volatile
  1494  0331  0021               	movlb	1	; select bank1
  1495  0332  00A4               	movwf	??_main^(0+128)
  1496  0333  0824               	movf	??_main^(0+128),w
  1497  0334  0020               	movlb	0	; select bank0
  1498  0335  00CA               	movwf	read_flash@adrs_lo
  1499  0336  086D               	movf	_adr_hi,w	;volatile
  1500  0337  3186  264E  3181   	fcall	_read_flash
  1501  033A  0021               	movlb	1	; select bank1
  1502  033B  00A5               	movwf	(??_main+1)^(0+128)
  1503  033C  0825               	movf	(??_main+1)^(0+128),w
  1504  033D  0020               	movlb	0	; select bank0
  1505  033E  00C1               	movwf	_flash_low	;volatile
  1506                           
  1507                           ;main.c: 405: flash_hi = (read_flash(adr_hi, adr_low2) );
  1508  033F  086F               	movf	_adr_low2,w	;volatile
  1509  0340  0021               	movlb	1	; select bank1
  1510  0341  00A4               	movwf	??_main^(0+128)
  1511  0342  0824               	movf	??_main^(0+128),w
  1512  0343  0020               	movlb	0	; select bank0
  1513  0344  00CA               	movwf	read_flash@adrs_lo
  1514  0345  086D               	movf	_adr_hi,w	;volatile
  1515  0346  3186  264E  3181   	fcall	_read_flash
  1516  0349  0021               	movlb	1	; select bank1
  1517  034A  00A5               	movwf	(??_main+1)^(0+128)
  1518  034B  0825               	movf	(??_main+1)^(0+128),w
  1519  034C  0020               	movlb	0	; select bank0
  1520  034D  00C0               	movwf	_flash_hi	;volatile
  1521                           
  1522                           ;main.c: 408: czas_flash = czas_s;
  1523  034E  082D               	movf	_czas_s+1,w	;volatile
  1524  034F  00AB               	movwf	_czas_flash+1	;volatile
  1525  0350  082C               	movf	_czas_s,w	;volatile
  1526  0351  00AA               	movwf	_czas_flash	;volatile
  1527  0352                     l1985:	
  1528                           ;main.c: 410: }
  1529                           ;main.c: 411: }else{
  1530                           
  1531                           ;main.c: 409: timer7 = 5000;
  1532                           
  1533                           
  1534                           ;main.c: 412: timer7 = 5000;
  1535  0352  3088               	movlw	136
  1536  0353  00B6               	movwf	_timer7	;volatile
  1537  0354  3013               	movlw	19
  1538  0355  00B7               	movwf	_timer7+1	;volatile
  1539  0356                     l1987:	
  1540                           
  1541                           ;main.c: 413: }
  1542                           ;main.c: 426: if ( (PORTBbits.RB5 == 0) ) {
  1543  0356  1A8D               	btfsc	13,5	;volatile
  1544  0357  2B7A               	goto	l2001
  1545                           
  1546                           ;main.c: 427: if ( (START_Fl ==0) && (timer3<10) ) {
  1547  0358  0839               	movf	_START_Fl,w	;volatile
  1548  0359  1D03               	btfss	3,2
  1549  035A  2B7F               	goto	l2005
  1550  035B  3000               	movlw	0
  1551  035C  0231               	subwf	_timer3+1,w	;volatile
  1552  035D  300A               	movlw	10
  1553  035E  1903               	skipnz
  1554  035F  0230               	subwf	_timer3,w	;volatile
  1555  0360  1803               	skipnc
  1556  0361  2B7F               	goto	l2005
  1557                           
  1558                           ;main.c: 428: if (START == 0 ) {
  1559  0362  0838               	movf	_START,w	;volatile
  1560  0363  1D03               	btfss	3,2
  1561  0364  2B72               	goto	l1997
  1562                           
  1563                           ;main.c: 429: START = 1;
  1564  0365  3001               	movlw	1
  1565  0366  0021               	movlb	1	; select bank1
  1566  0367  00A4               	movwf	??_main^(0+128)
  1567  0368  0824               	movf	??_main^(0+128),w
  1568  0369  0020               	movlb	0	; select bank0
  1569  036A  00B8               	movwf	_START	;volatile
  1570                           
  1571                           ;main.c: 430: grzalka_numer = 1;
  1572  036B  3001               	movlw	1
  1573  036C  0021               	movlb	1	; select bank1
  1574  036D  00A4               	movwf	??_main^(0+128)
  1575  036E  0824               	movf	??_main^(0+128),w
  1576  036F  0020               	movlb	0	; select bank0
  1577  0370  00EB               	movwf	_grzalka_numer	;volatile
  1578                           
  1579                           ;main.c: 431: }else{
  1580  0371  2B73               	goto	l1999
  1581  0372                     l1997:	
  1582                           
  1583                           ;main.c: 432: START = 0;
  1584  0372  01B8               	clrf	_START	;volatile
  1585  0373                     l1999:	
  1586                           
  1587                           ;main.c: 433: }
  1588                           ;main.c: 434: START_Fl = 1;
  1589  0373  3001               	movlw	1
  1590  0374  0021               	movlb	1	; select bank1
  1591  0375  00A4               	movwf	??_main^(0+128)
  1592  0376  0824               	movf	??_main^(0+128),w
  1593  0377  0020               	movlb	0	; select bank0
  1594  0378  00B9               	movwf	_START_Fl	;volatile
  1595                           
  1596                           ;main.c: 435: }
  1597                           ;main.c: 436: }else{
  1598  0379  2B7F               	goto	l2005
  1599  037A                     l2001:	
  1600                           
  1601                           ;main.c: 437: START_Fl = 0;
  1602  037A  01B9               	clrf	_START_Fl	;volatile
  1603                           
  1604                           ;main.c: 438: timer3 = 60;
  1605  037B  303C               	movlw	60
  1606  037C  00B0               	movwf	_timer3	;volatile
  1607  037D  3000               	movlw	0
  1608  037E  00B1               	movwf	_timer3+1	;volatile
  1609  037F                     l2005:	
  1610                           
  1611                           ;main.c: 439: }
  1612                           ;main.c: 442: if (czas_s < 1) {
  1613  037F  082C               	movf	_czas_s,w	;volatile
  1614  0380  042D               	iorwf	_czas_s+1,w	;volatile
  1615  0381  1D03               	btfss	3,2
  1616  0382  2B87               	goto	l2009
  1617                           
  1618                           ;main.c: 443: czas_s = 1;
  1619  0383  3001               	movlw	1
  1620  0384  00AC               	movwf	_czas_s	;volatile
  1621  0385  3000               	movlw	0
  1622  0386  00AD               	movwf	_czas_s+1	;volatile
  1623  0387                     l2009:	
  1624                           
  1625                           ;main.c: 444: }
  1626                           ;main.c: 445: czas_ms = czas_s *1000UL;
  1627  0387  082C               	movf	_czas_s,w	;volatile
  1628  0388  00CA               	movwf	___lmul@multiplier
  1629  0389  082D               	movf	_czas_s+1,w	;volatile
  1630  038A  00CB               	movwf	___lmul@multiplier+1
  1631  038B  01CC               	clrf	___lmul@multiplier+2
  1632  038C  01CD               	clrf	___lmul@multiplier+3
  1633  038D  3000               	movlw	0
  1634  038E  00D1               	movwf	___lmul@multiplicand+3
  1635  038F  3000               	movlw	0
  1636  0390  00D0               	movwf	___lmul@multiplicand+2
  1637  0391  3003               	movlw	3
  1638  0392  00CF               	movwf	___lmul@multiplicand+1
  1639  0393  30E8               	movlw	232
  1640  0394  00CE               	movwf	___lmul@multiplicand
  1641  0395  3185  25AA  3181   	fcall	___lmul
  1642  0398  0020               	movlb	0	; select bank0
  1643  0399  084D               	movf	?___lmul+3,w
  1644  039A  00A3               	movwf	_czas_ms+3	;volatile
  1645  039B  084C               	movf	?___lmul+2,w
  1646  039C  00A2               	movwf	_czas_ms+2	;volatile
  1647  039D  084B               	movf	?___lmul+1,w
  1648  039E  00A1               	movwf	_czas_ms+1	;volatile
  1649  039F  084A               	movf	?___lmul,w
  1650  03A0  00A0               	movwf	_czas_ms	;volatile
  1651                           
  1652                           ;main.c: 446: if (grzalka_numer>6) {
  1653  03A1  3007               	movlw	7
  1654  03A2  026B               	subwf	_grzalka_numer,w	;volatile
  1655  03A3  1C03               	skipc
  1656  03A4  2BAB               	goto	l2015
  1657                           
  1658                           ;main.c: 447: grzalka_numer =1;
  1659  03A5  3001               	movlw	1
  1660  03A6  0021               	movlb	1	; select bank1
  1661  03A7  00A4               	movwf	??_main^(0+128)
  1662  03A8  0824               	movf	??_main^(0+128),w
  1663  03A9  0020               	movlb	0	; select bank0
  1664  03AA  00EB               	movwf	_grzalka_numer	;volatile
  1665  03AB                     l2015:	
  1666                           
  1667                           ;main.c: 448: }
  1668                           ;main.c: 449: if ( (START == 1) && (timer5 ==0) ) {
  1669  03AB  0338               	decf	_START,w	;volatile
  1670  03AC  1D03               	btfss	3,2
  1671  03AD  2C01               	goto	l192
  1672  03AE  0865               	movf	_timer5+3,w	;volatile
  1673  03AF  0464               	iorwf	_timer5+2,w	;volatile
  1674  03B0  0463               	iorwf	_timer5+1,w	;volatile
  1675  03B1  0462               	iorwf	_timer5,w	;volatile
  1676  03B2  1D03               	skipz
  1677  03B3  2C01               	goto	l192
  1678                           
  1679                           ;main.c: 450: timer5 = czas_ms;
  1680  03B4  0823               	movf	_czas_ms+3,w	;volatile
  1681  03B5  00E5               	movwf	_timer5+3	;volatile
  1682  03B6  0822               	movf	_czas_ms+2,w	;volatile
  1683  03B7  00E4               	movwf	_timer5+2	;volatile
  1684  03B8  0821               	movf	_czas_ms+1,w	;volatile
  1685  03B9  00E3               	movwf	_timer5+1	;volatile
  1686  03BA  0820               	movf	_czas_ms,w	;volatile
  1687  03BB  00E2               	movwf	_timer5	;volatile
  1688                           
  1689                           ;main.c: 452: switch (grzalka_numer) {
  1690  03BC  2BE6               	goto	l2047
  1691  03BD                     l194:	
  1692                           ;main.c: 453: case 1:
  1693                           
  1694                           
  1695                           ;main.c: 454: LATAbits.LATA0 = 1;
  1696  03BD  0022               	movlb	2	; select bank2
  1697  03BE  140C               	bsf	12,0	;volatile
  1698  03BF  2BE3               	goto	L3
  1699  03C0                     l2021:	
  1700                           ;main.c: 458: case 2:
  1701                           
  1702                           ;main.c: 457: break;
  1703                           
  1704                           ;main.c: 456: LATAbits.LATA2 = 0;
  1705                           
  1706                           ;main.c: 455: LATAbits.LATA1 = 0;
  1707                           
  1708  03C0  2BCB               	goto	l2037
  1709  03C1                     l197:	
  1710                           ;main.c: 464: case 3:
  1711                           
  1712                           ;main.c: 463: break;
  1713                           
  1714                           ;main.c: 462: LATAbits.LATA2 = 0;
  1715                           
  1716                           ;main.c: 461: LATAbits.LATA1 = 0;
  1717                           
  1718                           ;main.c: 460: LATAbits.LATA0 = 0;
  1719                           
  1720                           ;main.c: 459: timer5 = czas_przerwa_ms;
  1721                           
  1722                           
  1723                           ;main.c: 465: LATAbits.LATA0 = 0;
  1724  03C1  0022               	movlb	2	; select bank2
  1725  03C2  100C               	bcf	12,0	;volatile
  1726                           
  1727                           ;main.c: 466: LATAbits.LATA1 = 1;
  1728  03C3  148C               	bsf	12,1	;volatile
  1729  03C4  2BE4               	goto	l2043
  1730  03C5                     l2029:	
  1731                           ;main.c: 469: case 4:
  1732                           
  1733                           ;main.c: 468: break;
  1734                           
  1735                           ;main.c: 467: LATAbits.LATA2 = 0;
  1736                           
  1737  03C5  2BCB               	goto	l2037
  1738  03C6                     l199:	
  1739                           ;main.c: 475: case 5:
  1740                           
  1741                           ;main.c: 474: break;
  1742                           
  1743                           ;main.c: 473: LATAbits.LATA2 = 0;
  1744                           
  1745                           ;main.c: 472: LATAbits.LATA1 = 0;
  1746                           
  1747                           ;main.c: 471: LATAbits.LATA0 = 0;
  1748                           
  1749                           ;main.c: 470: timer5 = czas_przerwa_ms;
  1750                           
  1751                           
  1752                           ;main.c: 476: LATAbits.LATA0 = 0;
  1753  03C6  0022               	movlb	2	; select bank2
  1754  03C7  100C               	bcf	12,0	;volatile
  1755                           
  1756                           ;main.c: 477: LATAbits.LATA1 = 0;
  1757  03C8  108C               	bcf	12,1	;volatile
  1758                           
  1759                           ;main.c: 478: LATAbits.LATA2 = 1;
  1760  03C9  150C               	bsf	12,2	;volatile
  1761                           
  1762                           ;main.c: 479: break;
  1763  03CA  2BFB               	goto	l2049
  1764  03CB                     l2037:	
  1765                           ;main.c: 480: case 6:
  1766                           
  1767                           
  1768                           ;main.c: 481: timer5 = czas_przerwa_ms;
  1769  03CB  0020               	movlb	0	; select bank0
  1770  03CC  086A               	movf	_czas_przerwa_ms,w	;volatile
  1771  03CD  0021               	movlb	1	; select bank1
  1772  03CE  00A4               	movwf	??_main^(0+128)
  1773  03CF  01A5               	clrf	(??_main^(0+128)+1)
  1774  03D0  01A6               	clrf	(??_main^(0+128)+2)
  1775  03D1  01A7               	clrf	(??_main^(0+128)+3)
  1776  03D2  0827               	movf	(??_main+3)^(0+128),w
  1777  03D3  0020               	movlb	0	; select bank0
  1778  03D4  00E5               	movwf	_timer5+3	;volatile
  1779  03D5  0021               	movlb	1	; select bank1
  1780  03D6  0826               	movf	(??_main+2)^(0+128),w
  1781  03D7  0020               	movlb	0	; select bank0
  1782  03D8  00E4               	movwf	_timer5+2	;volatile
  1783  03D9  0021               	movlb	1	; select bank1
  1784  03DA  0825               	movf	(??_main+1)^(0+128),w
  1785  03DB  0020               	movlb	0	; select bank0
  1786  03DC  00E3               	movwf	_timer5+1	;volatile
  1787  03DD  0021               	movlb	1	; select bank1
  1788  03DE  0824               	movf	??_main^(0+128),w
  1789  03DF  0020               	movlb	0	; select bank0
  1790  03E0  00E2               	movwf	_timer5	;volatile
  1791                           
  1792                           ;main.c: 482: LATAbits.LATA0 = 0;
  1793  03E1  0022               	movlb	2	; select bank2
  1794  03E2  100C               	bcf	12,0	;volatile
  1795  03E3                     L3:	
  1796                           
  1797                           ;main.c: 483: LATAbits.LATA1 = 0;
  1798  03E3  108C               	bcf	12,1	;volatile
  1799  03E4                     l2043:	
  1800                           
  1801                           ;main.c: 484: LATAbits.LATA2 = 0;
  1802  03E4  110C               	bcf	12,2	;volatile
  1803                           
  1804                           ;main.c: 486: }
  1805                           
  1806                           ;main.c: 485: break;
  1807  03E5  2BFB               	goto	l2049
  1808  03E6                     l2047:	
  1809  03E6  0020               	movlb	0	; select bank0
  1810  03E7  086B               	movf	_grzalka_numer,w	;volatile
  1811                           
  1812                           ; Switch size 1, requested type "space"
  1813                           ; Number of cases is 6, Range of values is 1 to 6
  1814                           ; switch strategies available:
  1815                           ; Name         Instructions Cycles
  1816                           ; simple_byte           19    10 (average)
  1817                           ; direct_byte           21     9 (fixed)
  1818                           ; jumptable            263     9 (fixed)
  1819                           ;	Chosen strategy is simple_byte
  1820  03E8  3A01               	xorlw	1	; case 1
  1821  03E9  1903               	skipnz
  1822  03EA  2BBD               	goto	l194
  1823  03EB  3A03               	xorlw	3	; case 2
  1824  03EC  1903               	skipnz
  1825  03ED  2BC0               	goto	l2021
  1826  03EE  3A01               	xorlw	1	; case 3
  1827  03EF  1903               	skipnz
  1828  03F0  2BC1               	goto	l197
  1829  03F1  3A07               	xorlw	7	; case 4
  1830  03F2  1903               	skipnz
  1831  03F3  2BC5               	goto	l2029
  1832  03F4  3A01               	xorlw	1	; case 5
  1833  03F5  1903               	skipnz
  1834  03F6  2BC6               	goto	l199
  1835  03F7  3A03               	xorlw	3	; case 6
  1836  03F8  1903               	skipnz
  1837  03F9  2BCB               	goto	l2037
  1838  03FA  2BFB               	goto	l2049
  1839  03FB                     l2049:	
  1840                           
  1841                           ;main.c: 487: grzalka_numer++;
  1842  03FB  3001               	movlw	1
  1843  03FC  0021               	movlb	1	; select bank1
  1844  03FD  00A4               	movwf	??_main^(0+128)
  1845  03FE  0824               	movf	??_main^(0+128),w
  1846  03FF  0020               	movlb	0	; select bank0
  1847  0400  07EB               	addwf	_grzalka_numer,f	;volatile
  1848  0401                     l192:	
  1849                           
  1850                           ;main.c: 488: }
  1851                           ;main.c: 490: if (START == 1) {
  1852  0401  0338               	decf	_START,w	;volatile
  1853  0402  1D03               	btfss	3,2
  1854  0403  2C21               	goto	l2057
  1855                           
  1856                           ;main.c: 491: if (timer4 ==0) {
  1857  0404  0832               	movf	_timer4,w	;volatile
  1858  0405  0433               	iorwf	_timer4+1,w	;volatile
  1859  0406  1D03               	btfss	3,2
  1860  0407  2C21               	goto	l2057
  1861                           
  1862                           ;main.c: 492: timer4 =200;
  1863  0408  30C8               	movlw	200
  1864  0409  00B2               	movwf	_timer4	;volatile
  1865  040A  3000               	movlw	0
  1866  040B  00B3               	movwf	_timer4+1	;volatile
  1867                           
  1868                           ;main.c: 493: LATAbits.LATA3 ^= 1;
  1869  040C  0022               	movlb	2	; select bank2
  1870  040D  0C0C               	rrf	12,w	;volatile
  1871  040E  0021               	movlb	1	; select bank1
  1872  040F  00A4               	movwf	??_main^(0+128)
  1873  0410  0CA4               	rrf	??_main^(0+128),f
  1874  0411  0C24               	rrf	??_main^(0+128),w
  1875  0412  3901               	andlw	1
  1876  0413  00A4               	movwf	??_main^(0+128)
  1877  0414  3001               	movlw	1
  1878  0415  06A4               	xorwf	??_main^(0+128),f
  1879  0416  0DA4               	rlf	??_main^(0+128),f
  1880  0417  0DA4               	rlf	??_main^(0+128),f
  1881  0418  0DA4               	rlf	??_main^(0+128),f
  1882  0419  0022               	movlb	2	; select bank2
  1883  041A  080C               	movf	12,w	;volatile
  1884  041B  0021               	movlb	1	; select bank1
  1885  041C  0624               	xorwf	??_main^(0+128),w
  1886  041D  39F7               	andlw	-9
  1887  041E  0624               	xorwf	??_main^(0+128),w
  1888  041F  0022               	movlb	2	; select bank2
  1889  0420  008C               	movwf	12	;volatile
  1890  0421                     l2057:	
  1891                           
  1892                           ;main.c: 494: }
  1893                           ;main.c: 495: }
  1894                           ;main.c: 498: if (START == 0) {
  1895  0421  0020               	movlb	0	; select bank0
  1896  0422  0838               	movf	_START,w	;volatile
  1897  0423  1D03               	btfss	3,2
  1898  0424  2C33               	goto	l2063
  1899                           
  1900                           ;main.c: 499: LATAbits.LATA0 = 0;
  1901  0425  0022               	movlb	2	; select bank2
  1902  0426  100C               	bcf	12,0	;volatile
  1903                           
  1904                           ;main.c: 500: LATAbits.LATA1 = 0;
  1905  0427  108C               	bcf	12,1	;volatile
  1906                           
  1907                           ;main.c: 501: LATAbits.LATA2 = 0;
  1908  0428  110C               	bcf	12,2	;volatile
  1909                           
  1910                           ;main.c: 502: LATAbits.LATA3 = 0;
  1911  0429  118C               	bcf	12,3	;volatile
  1912                           
  1913                           ;main.c: 503: timer5 = 0;
  1914  042A  3000               	movlw	0
  1915  042B  0020               	movlb	0	; select bank0
  1916  042C  00E5               	movwf	_timer5+3	;volatile
  1917  042D  3000               	movlw	0
  1918  042E  00E4               	movwf	_timer5+2	;volatile
  1919  042F  3000               	movlw	0
  1920  0430  00E3               	movwf	_timer5+1	;volatile
  1921  0431  3000               	movlw	0
  1922  0432  00E2               	movwf	_timer5	;volatile
  1923  0433                     l2063:	
  1924                           
  1925                           ;main.c: 504: }
  1926                           ;main.c: 511: if (START ==1) {
  1927  0433  0338               	decf	_START,w	;volatile
  1928  0434  1D03               	btfss	3,2
  1929  0435  2C55               	goto	l2067
  1930                           
  1931                           ;main.c: 512: volatile unsigned int liczba_tmp;
  1932                           ;main.c: 513: liczba_tmp = timer5/1000;
  1933  0436  3000               	movlw	0
  1934  0437  00CD               	movwf	___lldiv@divisor+3
  1935  0438  3000               	movlw	0
  1936  0439  00CC               	movwf	___lldiv@divisor+2
  1937  043A  3003               	movlw	3
  1938  043B  00CB               	movwf	___lldiv@divisor+1
  1939  043C  30E8               	movlw	232
  1940  043D  00CA               	movwf	___lldiv@divisor
  1941  043E  0865               	movf	_timer5+3,w	;volatile
  1942  043F  00D1               	movwf	___lldiv@dividend+3
  1943  0440  0864               	movf	_timer5+2,w	;volatile
  1944  0441  00D0               	movwf	___lldiv@dividend+2
  1945  0442  0863               	movf	_timer5+1,w	;volatile
  1946  0443  00CF               	movwf	___lldiv@dividend+1
  1947  0444  0862               	movf	_timer5,w	;volatile
  1948  0445  00CE               	movwf	___lldiv@dividend
  1949  0446  3185  2522  3181   	fcall	___lldiv
  1950  0449  0020               	movlb	0	; select bank0
  1951  044A  084B               	movf	?___lldiv+1,w
  1952  044B  00E1               	movwf	main@liczba_tmp+1	;volatile
  1953  044C  084A               	movf	?___lldiv,w
  1954  044D  00E0               	movwf	main@liczba_tmp	;volatile
  1955                           
  1956                           ;main.c: 514: wyswietl( liczba_tmp +1 );
  1957  044E  0860               	movf	main@liczba_tmp,w	;volatile
  1958  044F  3E01               	addlw	1
  1959  0450  00D8               	movwf	wyswietl@liczba
  1960  0451  3000               	movlw	0
  1961  0452  3D61               	addwfc	main@liczba_tmp+1,w	;volatile
  1962  0453  00D9               	movwf	wyswietl@liczba+1
  1963  0454  2C5A               	goto	L2
  1964  0455                     l2067:	
  1965                           ;main.c: 515: }else{
  1966                           
  1967                           
  1968                           ;main.c: 516: wyswietl(czas_s);
  1969  0455  0020               	movlb	0	; select bank0
  1970  0456  082D               	movf	_czas_s+1,w	;volatile
  1971  0457  00D9               	movwf	wyswietl@liczba+1
  1972  0458  082C               	movf	_czas_s,w	;volatile
  1973  0459  00D8               	movwf	wyswietl@liczba
  1974  045A                     L2:	
  1975  045A  3184  2472  3181   	fcall	_wyswietl
  1976                           
  1977                           ;main.c: 518: }
  1978                           ;main.c: 522: if (START == 0) {
  1979  045D  0020               	movlb	0	; select bank0
  1980  045E  0838               	movf	_START,w	;volatile
  1981  045F  1D03               	btfss	3,2
  1982  0460  2C6A               	goto	l2073
  1983                           
  1984                           ;main.c: 523: timer2 = 1800000;
  1985  0461  3000               	movlw	0
  1986  0462  00A7               	movwf	_timer2+3	;volatile
  1987  0463  301B               	movlw	27
  1988  0464  00A6               	movwf	_timer2+2	;volatile
  1989  0465  3077               	movlw	119
  1990  0466  00A5               	movwf	_timer2+1	;volatile
  1991  0467  3040               	movlw	64
  1992  0468  00A4               	movwf	_timer2	;volatile
  1993                           
  1994                           ;main.c: 524: }else{
  1995  0469  2C70               	goto	l207
  1996  046A                     l2073:	
  1997                           
  1998                           ;main.c: 525: if (timer2 == 0) {
  1999  046A  0827               	movf	_timer2+3,w	;volatile
  2000  046B  0426               	iorwf	_timer2+2,w	;volatile
  2001  046C  0425               	iorwf	_timer2+1,w	;volatile
  2002  046D  0424               	iorwf	_timer2,w	;volatile
  2003  046E  1903               	btfsc	3,2
  2004                           
  2005                           ;main.c: 526: START =0;
  2006  046F  01B8               	clrf	_START	;volatile
  2007  0470                     l207:	
  2008  0470  0064               	clrwdt	;# 
  2009  0471  2A02               	goto	l166
  2010  0472                     __end_of_main:	
  2011                           ;main.c: 531: }
  2012                           ;main.c: 533: return (0);
  2013                           ;	Return value of _main is never used
  2014                           
  2015                           
  2016                           	psect	text1
  2017  0472                     __ptext1:	
  2018 ;; *************** function _wyswietl *****************
  2019 ;; Defined at:
  2020 ;;		line 538 in file "main.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  liczba          2   14[BANK0 ] unsigned int 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;		None               void
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0, pclath, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2034 ;;      Params:         0       2       0       0       0       0       0       0
  2035 ;;      Locals:         0       0       0       0       0       0       0       0
  2036 ;;      Temps:          0       1       0       0       0       0       0       0
  2037 ;;      Totals:         0       3       0       0       0       0       0       0
  2038 ;;Total ram usage:        3 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    2
  2041 ;; This function calls:
  2042 ;;		___lwdiv
  2043 ;;		___lwmod
  2044 ;; This function is called by:
  2045 ;;		_main
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           
  2050                           ;psect for function _wyswietl
  2051  0472                     _wyswietl:	
  2052                           
  2053                           ;main.c: 542: if ( liczba > 599 ) {
  2054                           
  2055                           ;incstack = 0
  2056                           ; Regs used in _wyswietl: [wreg+status,2+status,0+pclath+cstack]
  2057  0472  3002               	movlw	2
  2058  0473  0020               	movlb	0	; select bank0
  2059  0474  0259               	subwf	wyswietl@liczba+1,w
  2060  0475  3058               	movlw	88
  2061  0476  1903               	skipnz
  2062  0477  0258               	subwf	wyswietl@liczba,w
  2063  0478  1C03               	skipc
  2064  0479  2CB0               	goto	l1745
  2065                           
  2066                           ;main.c: 543: liczba = liczba/60;
  2067  047A  303C               	movlw	60
  2068  047B  00D0               	movwf	___lwdiv@divisor
  2069  047C  3000               	movlw	0
  2070  047D  00D1               	movwf	___lwdiv@divisor+1
  2071  047E  0859               	movf	wyswietl@liczba+1,w
  2072  047F  00D3               	movwf	___lwdiv@dividend+1
  2073  0480  0858               	movf	wyswietl@liczba,w
  2074  0481  00D2               	movwf	___lwdiv@dividend
  2075  0482  3185  2575  3184   	fcall	___lwdiv
  2076  0485  0020               	movlb	0	; select bank0
  2077  0486  0851               	movf	?___lwdiv+1,w
  2078  0487  00D9               	movwf	wyswietl@liczba+1
  2079  0488  0850               	movf	?___lwdiv,w
  2080  0489  00D8               	movwf	wyswietl@liczba
  2081                           
  2082                           ;main.c: 544: cyf_1 = liczba/10;
  2083  048A  300A               	movlw	10
  2084  048B  00D0               	movwf	___lwdiv@divisor
  2085  048C  3000               	movlw	0
  2086  048D  00D1               	movwf	___lwdiv@divisor+1
  2087  048E  0859               	movf	wyswietl@liczba+1,w
  2088  048F  00D3               	movwf	___lwdiv@dividend+1
  2089  0490  0858               	movf	wyswietl@liczba,w
  2090  0491  00D2               	movwf	___lwdiv@dividend
  2091  0492  3185  2575  3184   	fcall	___lwdiv
  2092  0495  0020               	movlb	0	; select bank0
  2093  0496  0850               	movf	?___lwdiv,w
  2094  0497  00DA               	movwf	??_wyswietl
  2095  0498  085A               	movf	??_wyswietl,w
  2096  0499  00E8               	movwf	_cyf_1	;volatile
  2097                           
  2098                           ;main.c: 545: cyf_2 = liczba%10;
  2099  049A  300A               	movlw	10
  2100  049B  00CA               	movwf	___lwmod@divisor
  2101  049C  3000               	movlw	0
  2102  049D  00CB               	movwf	___lwmod@divisor+1
  2103  049E  0859               	movf	wyswietl@liczba+1,w
  2104  049F  00CD               	movwf	___lwmod@dividend+1
  2105  04A0  0858               	movf	wyswietl@liczba,w
  2106  04A1  00CC               	movwf	___lwmod@dividend
  2107  04A2  3185  25DA         	fcall	___lwmod
  2108  04A4  0020               	movlb	0	; select bank0
  2109  04A5  084A               	movf	?___lwmod,w
  2110  04A6  00DA               	movwf	??_wyswietl
  2111  04A7  085A               	movf	??_wyswietl,w
  2112  04A8  00E9               	movwf	_cyf_2	;volatile
  2113                           
  2114                           ;main.c: 546: kro_1 = 0;
  2115  04A9  01EC               	clrf	_kro_1	;volatile
  2116                           
  2117                           ;main.c: 547: kro_2 = 1;
  2118  04AA  3001               	movlw	1
  2119  04AB  00DA               	movwf	??_wyswietl
  2120  04AC  085A               	movf	??_wyswietl,w
  2121  04AD  0021               	movlb	1	; select bank1
  2122  04AE  00A8               	movwf	_kro_2^(0+128)	;volatile
  2123                           
  2124                           ;main.c: 548: }else if( liczba > 99 ){
  2125  04AF  0008               	return
  2126  04B0                     l1745:	
  2127  04B0  3000               	movlw	0
  2128  04B1  0020               	movlb	0	; select bank0
  2129  04B2  0259               	subwf	wyswietl@liczba+1,w
  2130  04B3  3064               	movlw	100
  2131  04B4  1903               	skipnz
  2132  04B5  0258               	subwf	wyswietl@liczba,w
  2133  04B6  1C03               	skipc
  2134  04B7  2CEB               	goto	l1755
  2135                           
  2136                           ;main.c: 549: cyf_1 = liczba/60;
  2137  04B8  303C               	movlw	60
  2138  04B9  00D0               	movwf	___lwdiv@divisor
  2139  04BA  3000               	movlw	0
  2140  04BB  00D1               	movwf	___lwdiv@divisor+1
  2141  04BC  0859               	movf	wyswietl@liczba+1,w
  2142  04BD  00D3               	movwf	___lwdiv@dividend+1
  2143  04BE  0858               	movf	wyswietl@liczba,w
  2144  04BF  00D2               	movwf	___lwdiv@dividend
  2145  04C0  3185  2575  3184   	fcall	___lwdiv
  2146  04C3  0020               	movlb	0	; select bank0
  2147  04C4  0850               	movf	?___lwdiv,w
  2148  04C5  00DA               	movwf	??_wyswietl
  2149  04C6  085A               	movf	??_wyswietl,w
  2150  04C7  00E8               	movwf	_cyf_1	;volatile
  2151                           
  2152                           ;main.c: 550: kro_1 = 1;
  2153  04C8  3001               	movlw	1
  2154  04C9  00DA               	movwf	??_wyswietl
  2155  04CA  085A               	movf	??_wyswietl,w
  2156  04CB  00EC               	movwf	_kro_1	;volatile
  2157                           
  2158                           ;main.c: 551: kro_2 = 0;
  2159  04CC  0021               	movlb	1	; select bank1
  2160  04CD  01A8               	clrf	_kro_2^(0+128)	;volatile
  2161                           
  2162                           ;main.c: 552: cyf_2 = (liczba%60)/10;
  2163  04CE  300A               	movlw	10
  2164  04CF  0020               	movlb	0	; select bank0
  2165  04D0  00D0               	movwf	___lwdiv@divisor
  2166  04D1  3000               	movlw	0
  2167  04D2  00D1               	movwf	___lwdiv@divisor+1
  2168  04D3  0859               	movf	wyswietl@liczba+1,w
  2169  04D4  00CD               	movwf	___lwmod@dividend+1
  2170  04D5  0858               	movf	wyswietl@liczba,w
  2171  04D6  00CC               	movwf	___lwmod@dividend
  2172  04D7  303C               	movlw	60
  2173  04D8  00CA               	movwf	___lwmod@divisor
  2174  04D9  3000               	movlw	0
  2175  04DA  00CB               	movwf	___lwmod@divisor+1
  2176  04DB  3185  25DA  3184   	fcall	___lwmod
  2177  04DE  0020               	movlb	0	; select bank0
  2178  04DF  084B               	movf	?___lwmod+1,w
  2179  04E0  00D3               	movwf	___lwdiv@dividend+1
  2180  04E1  084A               	movf	?___lwmod,w
  2181  04E2  00D2               	movwf	___lwdiv@dividend
  2182  04E3  3185  2575         	fcall	___lwdiv
  2183  04E5  0020               	movlb	0	; select bank0
  2184  04E6  0850               	movf	?___lwdiv,w
  2185  04E7  00DA               	movwf	??_wyswietl
  2186  04E8  085A               	movf	??_wyswietl,w
  2187  04E9  00E9               	movwf	_cyf_2	;volatile
  2188                           
  2189                           ;main.c: 553: }else if (liczba > 9) {
  2190  04EA  0008               	return
  2191  04EB                     l1755:	
  2192  04EB  3000               	movlw	0
  2193  04EC  0259               	subwf	wyswietl@liczba+1,w
  2194  04ED  300A               	movlw	10
  2195  04EE  1903               	skipnz
  2196  04EF  0258               	subwf	wyswietl@liczba,w
  2197  04F0  1C03               	skipc
  2198  04F1  2D15               	goto	l1763
  2199                           
  2200                           ;main.c: 554: cyf_1 = liczba/10;
  2201  04F2  300A               	movlw	10
  2202  04F3  00D0               	movwf	___lwdiv@divisor
  2203  04F4  3000               	movlw	0
  2204  04F5  00D1               	movwf	___lwdiv@divisor+1
  2205  04F6  0859               	movf	wyswietl@liczba+1,w
  2206  04F7  00D3               	movwf	___lwdiv@dividend+1
  2207  04F8  0858               	movf	wyswietl@liczba,w
  2208  04F9  00D2               	movwf	___lwdiv@dividend
  2209  04FA  3185  2575  3184   	fcall	___lwdiv
  2210  04FD  0020               	movlb	0	; select bank0
  2211  04FE  0850               	movf	?___lwdiv,w
  2212  04FF  00DA               	movwf	??_wyswietl
  2213  0500  085A               	movf	??_wyswietl,w
  2214  0501  00E8               	movwf	_cyf_1	;volatile
  2215                           
  2216                           ;main.c: 555: cyf_2 = liczba%10;
  2217  0502  300A               	movlw	10
  2218  0503  00CA               	movwf	___lwmod@divisor
  2219  0504  3000               	movlw	0
  2220  0505  00CB               	movwf	___lwmod@divisor+1
  2221  0506  0859               	movf	wyswietl@liczba+1,w
  2222  0507  00CD               	movwf	___lwmod@dividend+1
  2223  0508  0858               	movf	wyswietl@liczba,w
  2224  0509  00CC               	movwf	___lwmod@dividend
  2225  050A  3185  25DA         	fcall	___lwmod
  2226  050C  0020               	movlb	0	; select bank0
  2227  050D  084A               	movf	?___lwmod,w
  2228  050E  00DA               	movwf	??_wyswietl
  2229  050F  085A               	movf	??_wyswietl,w
  2230  0510  00E9               	movwf	_cyf_2	;volatile
  2231                           
  2232                           ;main.c: 556: kro_1 = 0;
  2233  0511  01EC               	clrf	_kro_1	;volatile
  2234                           
  2235                           ;main.c: 557: kro_2 = 0;
  2236  0512  0021               	movlb	1	; select bank1
  2237  0513  01A8               	clrf	_kro_2^(0+128)	;volatile
  2238                           
  2239                           ;main.c: 558: }else{
  2240  0514  0008               	return
  2241  0515                     l1763:	
  2242                           
  2243                           ;main.c: 559: cyf_1 = 10;
  2244  0515  300A               	movlw	10
  2245  0516  0020               	movlb	0	; select bank0
  2246  0517  00DA               	movwf	??_wyswietl
  2247  0518  085A               	movf	??_wyswietl,w
  2248  0519  00E8               	movwf	_cyf_1	;volatile
  2249                           
  2250                           ;main.c: 560: cyf_2 = liczba;
  2251  051A  0858               	movf	wyswietl@liczba,w
  2252  051B  00DA               	movwf	??_wyswietl
  2253  051C  085A               	movf	??_wyswietl,w
  2254  051D  00E9               	movwf	_cyf_2	;volatile
  2255                           
  2256                           ;main.c: 561: kro_1 = 0;
  2257  051E  01EC               	clrf	_kro_1	;volatile
  2258                           
  2259                           ;main.c: 562: kro_2 = 0;
  2260  051F  0021               	movlb	1	; select bank1
  2261  0520  01A8               	clrf	_kro_2^(0+128)	;volatile
  2262  0521  0008               	return
  2263  0522                     __end_of_wyswietl:	
  2264                           
  2265                           	psect	text2
  2266  05DA                     __ptext2:	
  2267 ;; *************** function ___lwmod *****************
  2268 ;; Defined at:
  2269 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  divisor         2    0[BANK0 ] unsigned int 
  2272 ;;  dividend        2    2[BANK0 ] unsigned int 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  counter         1    5[BANK0 ] unsigned char 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  2    0[BANK0 ] unsigned int 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, status,0
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2284 ;;      Params:         0       4       0       0       0       0       0       0
  2285 ;;      Locals:         0       1       0       0       0       0       0       0
  2286 ;;      Temps:          0       1       0       0       0       0       0       0
  2287 ;;      Totals:         0       6       0       0       0       0       0       0
  2288 ;;Total ram usage:        6 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:    1
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_wyswietl
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           
  2299                           ;psect for function ___lwmod
  2300  05DA                     ___lwmod:	
  2301                           
  2302                           ;incstack = 0
  2303                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2304  05DA  0020               	movlb	0	; select bank0
  2305  05DB  084A               	movf	___lwmod@divisor,w
  2306  05DC  044B               	iorwf	___lwmod@divisor+1,w
  2307  05DD  1903               	btfsc	3,2
  2308  05DE  2E02               	goto	l1683
  2309  05DF  01CF               	clrf	___lwmod@counter
  2310  05E0  0ACF               	incf	___lwmod@counter,f
  2311  05E1                     l1673:	
  2312  05E1  1BCB               	btfsc	___lwmod@divisor+1,7
  2313  05E2  2DED               	goto	l1675
  2314  05E3  3001               	movlw	1
  2315  05E4                     u1725:	
  2316  05E4  35CA               	lslf	___lwmod@divisor,f
  2317  05E5  0DCB               	rlf	___lwmod@divisor+1,f
  2318  05E6  0B89               	decfsz	9,f
  2319  05E7  2DE4               	goto	u1725
  2320  05E8  3001               	movlw	1
  2321  05E9  00CE               	movwf	??___lwmod
  2322  05EA  084E               	movf	??___lwmod,w
  2323  05EB  07CF               	addwf	___lwmod@counter,f
  2324  05EC  2DE1               	goto	l1673
  2325  05ED                     l1675:	
  2326  05ED  084B               	movf	___lwmod@divisor+1,w
  2327  05EE  024D               	subwf	___lwmod@dividend+1,w
  2328  05EF  1D03               	skipz
  2329  05F0  2DF3               	goto	u1745
  2330  05F1  084A               	movf	___lwmod@divisor,w
  2331  05F2  024C               	subwf	___lwmod@dividend,w
  2332  05F3                     u1745:	
  2333  05F3  1C03               	skipc
  2334  05F4  2DF9               	goto	l1679
  2335  05F5  084A               	movf	___lwmod@divisor,w
  2336  05F6  02CC               	subwf	___lwmod@dividend,f
  2337  05F7  084B               	movf	___lwmod@divisor+1,w
  2338  05F8  3BCD               	subwfb	___lwmod@dividend+1,f
  2339  05F9                     l1679:	
  2340  05F9  3001               	movlw	1
  2341  05FA                     u1755:	
  2342  05FA  36CB               	lsrf	___lwmod@divisor+1,f
  2343  05FB  0CCA               	rrf	___lwmod@divisor,f
  2344  05FC  0B89               	decfsz	9,f
  2345  05FD  2DFA               	goto	u1755
  2346  05FE  3001               	movlw	1
  2347  05FF  02CF               	subwf	___lwmod@counter,f
  2348  0600  1D03               	btfss	3,2
  2349  0601  2DED               	goto	l1675
  2350  0602                     l1683:	
  2351  0602  084D               	movf	___lwmod@dividend+1,w
  2352  0603  00CB               	movwf	?___lwmod+1
  2353  0604  084C               	movf	___lwmod@dividend,w
  2354  0605  00CA               	movwf	?___lwmod
  2355  0606  0008               	return
  2356  0607                     __end_of___lwmod:	
  2357                           
  2358                           	psect	text3
  2359  0575                     __ptext3:	
  2360 ;; *************** function ___lwdiv *****************
  2361 ;; Defined at:
  2362 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  divisor         2    6[BANK0 ] unsigned int 
  2365 ;;  dividend        2    8[BANK0 ] unsigned int 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  quotient        2   11[BANK0 ] unsigned int 
  2368 ;;  counter         1   13[BANK0 ] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  2    6[BANK0 ] unsigned int 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2, status,0
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2378 ;;      Params:         0       4       0       0       0       0       0       0
  2379 ;;      Locals:         0       3       0       0       0       0       0       0
  2380 ;;      Temps:          0       1       0       0       0       0       0       0
  2381 ;;      Totals:         0       8       0       0       0       0       0       0
  2382 ;;Total ram usage:        8 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    1
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_wyswietl
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           
  2393                           ;psect for function ___lwdiv
  2394  0575                     ___lwdiv:	
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2398  0575  0020               	movlb	0	; select bank0
  2399  0576  01D5               	clrf	___lwdiv@quotient
  2400  0577  01D6               	clrf	___lwdiv@quotient+1
  2401  0578  0850               	movf	___lwdiv@divisor,w
  2402  0579  0451               	iorwf	___lwdiv@divisor+1,w
  2403  057A  1903               	btfsc	3,2
  2404  057B  2DA5               	goto	l1173
  2405  057C  01D7               	clrf	___lwdiv@counter
  2406  057D  0AD7               	incf	___lwdiv@counter,f
  2407  057E                     l1161:	
  2408  057E  1BD1               	btfsc	___lwdiv@divisor+1,7
  2409  057F  2D8A               	goto	l1163
  2410  0580  3001               	movlw	1
  2411  0581                     u875:	
  2412  0581  35D0               	lslf	___lwdiv@divisor,f
  2413  0582  0DD1               	rlf	___lwdiv@divisor+1,f
  2414  0583  0B89               	decfsz	9,f
  2415  0584  2D81               	goto	u875
  2416  0585  3001               	movlw	1
  2417  0586  00D4               	movwf	??___lwdiv
  2418  0587  0854               	movf	??___lwdiv,w
  2419  0588  07D7               	addwf	___lwdiv@counter,f
  2420  0589  2D7E               	goto	l1161
  2421  058A                     l1163:	
  2422  058A  3001               	movlw	1
  2423  058B                     u895:	
  2424  058B  35D5               	lslf	___lwdiv@quotient,f
  2425  058C  0DD6               	rlf	___lwdiv@quotient+1,f
  2426  058D  0B89               	decfsz	9,f
  2427  058E  2D8B               	goto	u895
  2428  058F  0851               	movf	___lwdiv@divisor+1,w
  2429  0590  0253               	subwf	___lwdiv@dividend+1,w
  2430  0591  1D03               	skipz
  2431  0592  2D95               	goto	u905
  2432  0593  0850               	movf	___lwdiv@divisor,w
  2433  0594  0252               	subwf	___lwdiv@dividend,w
  2434  0595                     u905:	
  2435  0595  1C03               	skipc
  2436  0596  2D9C               	goto	l1169
  2437  0597  0850               	movf	___lwdiv@divisor,w
  2438  0598  02D2               	subwf	___lwdiv@dividend,f
  2439  0599  0851               	movf	___lwdiv@divisor+1,w
  2440  059A  3BD3               	subwfb	___lwdiv@dividend+1,f
  2441  059B  1455               	bsf	___lwdiv@quotient,0
  2442  059C                     l1169:	
  2443  059C  3001               	movlw	1
  2444  059D                     u915:	
  2445  059D  36D1               	lsrf	___lwdiv@divisor+1,f
  2446  059E  0CD0               	rrf	___lwdiv@divisor,f
  2447  059F  0B89               	decfsz	9,f
  2448  05A0  2D9D               	goto	u915
  2449  05A1  3001               	movlw	1
  2450  05A2  02D7               	subwf	___lwdiv@counter,f
  2451  05A3  1D03               	btfss	3,2
  2452  05A4  2D8A               	goto	l1163
  2453  05A5                     l1173:	
  2454  05A5  0856               	movf	___lwdiv@quotient+1,w
  2455  05A6  00D1               	movwf	?___lwdiv+1
  2456  05A7  0855               	movf	___lwdiv@quotient,w
  2457  05A8  00D0               	movwf	?___lwdiv
  2458  05A9  0008               	return
  2459  05AA                     __end_of___lwdiv:	
  2460                           
  2461                           	psect	text4
  2462  0607                     __ptext4:	
  2463 ;; *************** function _write_flash *****************
  2464 ;; Defined at:
  2465 ;;		line 601 in file "main.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  adr_hi          1    wreg     unsigned char 
  2468 ;;  adr_lo          1    0[BANK0 ] unsigned char 
  2469 ;;  data_lo         1    1[BANK0 ] unsigned char 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  adr_hi          1    4[BANK0 ] unsigned char 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;		None               void
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, status,0, pclath, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2481 ;;      Params:         0       2       0       0       0       0       0       0
  2482 ;;      Locals:         0       1       0       0       0       0       0       0
  2483 ;;      Temps:          0       2       0       0       0       0       0       0
  2484 ;;      Totals:         0       5       0       0       0       0       0       0
  2485 ;;Total ram usage:        5 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    2
  2488 ;; This function calls:
  2489 ;;		_unlock_flash
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           
  2496                           ;psect for function _write_flash
  2497  0607                     _write_flash:	
  2498                           
  2499                           ;incstack = 0
  2500                           ; Regs used in _write_flash: [wreg+status,2+status,0+pclath+cstack]
  2501                           ;write_flash@adr_hi stored from wreg
  2502  0607  0020               	movlb	0	; select bank0
  2503  0608  00CE               	movwf	write_flash@adr_hi
  2504                           
  2505                           ;main.c: 603: INTCONbits.GIE = 0;
  2506  0609  138B               	bcf	11,7	;volatile
  2507                           
  2508                           ;main.c: 604: PMCON1bits.CFGS=0;
  2509  060A  0023               	movlb	3	; select bank3
  2510  060B  1315               	bcf	21,6	;volatile
  2511                           
  2512                           ;main.c: 606: PMADRH=adr_hi;
  2513  060C  0020               	movlb	0	; select bank0
  2514  060D  084E               	movf	write_flash@adr_hi,w
  2515  060E  0023               	movlb	3	; select bank3
  2516  060F  0092               	movwf	18	;volatile
  2517                           
  2518                           ;main.c: 607: PMADRL=adr_lo;
  2519  0610  0020               	movlb	0	; select bank0
  2520  0611  084A               	movf	write_flash@adr_lo,w
  2521  0612  0023               	movlb	3	; select bank3
  2522  0613  0091               	movwf	17	;volatile
  2523                           
  2524                           ;main.c: 609: PMCON1bits.FREE = 0;
  2525  0614  1215               	bcf	21,4	;volatile
  2526                           
  2527                           ;main.c: 610: PMCON1bits.LWLO=1;
  2528  0615  1695               	bsf	21,5	;volatile
  2529                           
  2530                           ;main.c: 611: PMCON1bits.WREN=1;
  2531  0616  1515               	bsf	21,2	;volatile
  2532                           
  2533                           ;main.c: 613: PMDATL=data_lo;
  2534  0617  0020               	movlb	0	; select bank0
  2535  0618  084B               	movf	write_flash@data_lo,w
  2536  0619  0023               	movlb	3	; select bank3
  2537  061A  0093               	movwf	19	;volatile
  2538                           
  2539                           ;main.c: 614: PMDATH = 0;
  2540  061B  0194               	clrf	20	;volatile
  2541                           
  2542                           ;main.c: 617: PMCON1bits.LWLO = 0;
  2543  061C  1295               	bcf	21,5	;volatile
  2544                           
  2545                           ;main.c: 618: unlock_flash();
  2546  061D  3187  271D  3186   	fcall	_unlock_flash
  2547                           
  2548                           ;main.c: 619: _delay((unsigned long)((3)*(8000000/4000.0)));
  2549  0620  3008               	movlw	8
  2550  0621  0020               	movlb	0	; select bank0
  2551  0622  00CD               	movwf	??_write_flash+1
  2552  0623  30C9               	movlw	201
  2553  0624  00CC               	movwf	??_write_flash
  2554  0625                     u2427:	
  2555  0625  0BCC               	decfsz	??_write_flash,f
  2556  0626  2E25               	goto	u2427
  2557  0627  0BCD               	decfsz	??_write_flash+1,f
  2558  0628  2E25               	goto	u2427
  2559  0629  3200               	nop2
  2560                           
  2561                           ;main.c: 620: PMCON1bits.WREN = 0;
  2562  062A  0023               	movlb	3	; select bank3
  2563  062B  1115               	bcf	21,2	;volatile
  2564                           
  2565                           ;main.c: 622: INTCONbits.GIE = 1;
  2566  062C  178B               	bsf	11,7	;volatile
  2567  062D  0008               	return
  2568  062E                     __end_of_write_flash:	
  2569                           
  2570                           	psect	text5
  2571  064E                     __ptext5:	
  2572 ;; *************** function _read_flash *****************
  2573 ;; Defined at:
  2574 ;;		line 569 in file "main.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  adrs_hi         1    wreg     unsigned char 
  2577 ;;  adrs_lo         1    0[BANK0 ] unsigned char 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  adrs_hi         1    1[BANK0 ] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      unsigned char 
  2582 ;; Registers used:
  2583 ;;		wreg
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2589 ;;      Params:         0       1       0       0       0       0       0       0
  2590 ;;      Locals:         0       1       0       0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0
  2592 ;;      Totals:         0       2       0       0       0       0       0       0
  2593 ;;Total ram usage:        2 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    1
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           
  2604                           ;psect for function _read_flash
  2605  064E                     _read_flash:	
  2606                           
  2607                           ;incstack = 0
  2608                           ; Regs used in _read_flash: [wreg]
  2609                           ;read_flash@adrs_hi stored from wreg
  2610  064E  0020               	movlb	0	; select bank0
  2611  064F  00CB               	movwf	read_flash@adrs_hi
  2612                           
  2613                           ;main.c: 573: PMCON1bits.CFGS=0;
  2614  0650  0023               	movlb	3	; select bank3
  2615  0651  1315               	bcf	21,6	;volatile
  2616                           
  2617                           ;main.c: 574: PMADRL=adrs_lo ;
  2618  0652  0020               	movlb	0	; select bank0
  2619  0653  084A               	movf	read_flash@adrs_lo,w
  2620  0654  0023               	movlb	3	; select bank3
  2621  0655  0091               	movwf	17	;volatile
  2622                           
  2623                           ;main.c: 575: PMADRH=adrs_hi;
  2624  0656  0020               	movlb	0	; select bank0
  2625  0657  084B               	movf	read_flash@adrs_hi,w
  2626  0658  0023               	movlb	3	; select bank3
  2627  0659  0092               	movwf	18	;volatile
  2628                           
  2629                           ;main.c: 577: PMCON1bits.RD = 1;
  2630  065A  1415               	bsf	21,0	;volatile
  2631                           
  2632                           ;main.c: 578: __nop();
  2633  065B  0000               	nop
  2634                           
  2635                           ;main.c: 579: __nop();
  2636  065C  0000               	nop
  2637                           
  2638                           ;main.c: 581: return PMDATL;
  2639  065D  0023               	movlb	3	; select bank3
  2640  065E  0813               	movf	19,w	;volatile
  2641  065F  0008               	return
  2642  0660                     __end_of_read_flash:	
  2643                           
  2644                           	psect	text6
  2645  062E                     __ptext6:	
  2646 ;; *************** function _erase_flash *****************
  2647 ;; Defined at:
  2648 ;;		line 626 in file "main.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  adr_hi          1    wreg     unsigned char 
  2651 ;;  adr_lo          1    0[BANK0 ] unsigned char 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  adr_hi          1    3[BANK0 ] unsigned char 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;		None               void
  2656 ;; Registers used:
  2657 ;;		wreg, status,2, status,0, pclath, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2663 ;;      Params:         0       1       0       0       0       0       0       0
  2664 ;;      Locals:         0       1       0       0       0       0       0       0
  2665 ;;      Temps:          0       2       0       0       0       0       0       0
  2666 ;;      Totals:         0       4       0       0       0       0       0       0
  2667 ;;Total ram usage:        4 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    2
  2670 ;; This function calls:
  2671 ;;		_unlock_flash
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           
  2678                           ;psect for function _erase_flash
  2679  062E                     _erase_flash:	
  2680                           
  2681                           ;incstack = 0
  2682                           ; Regs used in _erase_flash: [wreg+status,2+status,0+pclath+cstack]
  2683                           ;erase_flash@adr_hi stored from wreg
  2684  062E  0020               	movlb	0	; select bank0
  2685  062F  00CD               	movwf	erase_flash@adr_hi
  2686                           
  2687                           ;main.c: 628: INTCONbits.GIE = 0;
  2688  0630  138B               	bcf	11,7	;volatile
  2689                           
  2690                           ;main.c: 629: PMCON1bits.CFGS=0;
  2691  0631  0023               	movlb	3	; select bank3
  2692  0632  1315               	bcf	21,6	;volatile
  2693                           
  2694                           ;main.c: 631: PMADRH=adr_hi;
  2695  0633  0020               	movlb	0	; select bank0
  2696  0634  084D               	movf	erase_flash@adr_hi,w
  2697  0635  0023               	movlb	3	; select bank3
  2698  0636  0092               	movwf	18	;volatile
  2699                           
  2700                           ;main.c: 632: PMADRL=adr_lo;
  2701  0637  0020               	movlb	0	; select bank0
  2702  0638  084A               	movf	erase_flash@adr_lo,w
  2703  0639  0023               	movlb	3	; select bank3
  2704  063A  0091               	movwf	17	;volatile
  2705                           
  2706                           ;main.c: 634: PMCON1bits.FREE = 1;
  2707  063B  1615               	bsf	21,4	;volatile
  2708                           
  2709                           ;main.c: 635: PMCON1bits.WREN=1;
  2710  063C  1515               	bsf	21,2	;volatile
  2711                           
  2712                           ;main.c: 636: unlock_flash();
  2713  063D  3187  271D  3186   	fcall	_unlock_flash
  2714                           
  2715                           ;main.c: 637: _delay((unsigned long)((3)*(8000000/4000.0)));
  2716  0640  3008               	movlw	8
  2717  0641  0020               	movlb	0	; select bank0
  2718  0642  00CC               	movwf	??_erase_flash+1
  2719  0643  30C9               	movlw	201
  2720  0644  00CB               	movwf	??_erase_flash
  2721  0645                     u2437:	
  2722  0645  0BCB               	decfsz	??_erase_flash,f
  2723  0646  2E45               	goto	u2437
  2724  0647  0BCC               	decfsz	??_erase_flash+1,f
  2725  0648  2E45               	goto	u2437
  2726  0649  3200               	nop2
  2727                           
  2728                           ;main.c: 638: PMCON1bits.WREN = 0;
  2729  064A  0023               	movlb	3	; select bank3
  2730  064B  1115               	bcf	21,2	;volatile
  2731                           
  2732                           ;main.c: 640: INTCONbits.GIE = 1;
  2733  064C  178B               	bsf	11,7	;volatile
  2734  064D  0008               	return
  2735  064E                     __end_of_erase_flash:	
  2736                           
  2737                           	psect	text7
  2738  071D                     __ptext7:	
  2739 ;; *************** function _unlock_flash *****************
  2740 ;; Defined at:
  2741 ;;		line 588 in file "main.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;		None               void
  2748 ;; Registers used:
  2749 ;;		wreg
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2755 ;;      Params:         0       0       0       0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0
  2758 ;;      Totals:         0       0       0       0       0       0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    1
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_write_flash
  2766 ;;		_erase_flash
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           
  2771                           ;psect for function _unlock_flash
  2772  071D                     _unlock_flash:	
  2773                           
  2774                           ;main.c: 590: PMCON2=0x55;
  2775                           
  2776                           ;incstack = 0
  2777                           ; Regs used in _unlock_flash: [wreg]
  2778  071D  3055               	movlw	85
  2779  071E  0023               	movlb	3	; select bank3
  2780  071F  0096               	movwf	22	;volsfr
  2781                           
  2782                           ;main.c: 591: PMCON2=0xAA;
  2783  0720  30AA               	movlw	170
  2784  0721  0096               	movwf	22	;volsfr
  2785                           
  2786                           ;main.c: 592: PMCON1bits.WR=1;
  2787  0722  1495               	bsf	21,1	;volatile
  2788                           
  2789                           ;main.c: 593: __nop();
  2790  0723  0000               	nop
  2791                           
  2792                           ;main.c: 594: __nop();
  2793  0724  0000               	nop
  2794  0725  0008               	return
  2795  0726                     __end_of_unlock_flash:	
  2796                           
  2797                           	psect	text8
  2798  05AA                     __ptext8:	
  2799 ;; *************** function ___lmul *****************
  2800 ;; Defined at:
  2801 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2804 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  product         4    8[BANK0 ] unsigned long 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  4    0[BANK0 ] unsigned long 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2816 ;;      Params:         0       8       0       0       0       0       0       0
  2817 ;;      Locals:         0       4       0       0       0       0       0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0       0
  2819 ;;      Totals:         0      12       0       0       0       0       0       0
  2820 ;;Total ram usage:       12 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    1
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_main
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           
  2831                           ;psect for function ___lmul
  2832  05AA                     ___lmul:	
  2833                           
  2834                           ;incstack = 0
  2835                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2836  05AA  3000               	movlw	0
  2837  05AB  0020               	movlb	0	; select bank0
  2838  05AC  00D5               	movwf	___lmul@product+3
  2839  05AD  3000               	movlw	0
  2840  05AE  00D4               	movwf	___lmul@product+2
  2841  05AF  3000               	movlw	0
  2842  05B0  00D3               	movwf	___lmul@product+1
  2843  05B1  3000               	movlw	0
  2844  05B2  00D2               	movwf	___lmul@product
  2845  05B3                     l1771:	
  2846  05B3  1C4A               	btfss	___lmul@multiplier,0
  2847  05B4  2DBD               	goto	l1775
  2848  05B5  084E               	movf	___lmul@multiplicand,w
  2849  05B6  07D2               	addwf	___lmul@product,f
  2850  05B7  084F               	movf	___lmul@multiplicand+1,w
  2851  05B8  3DD3               	addwfc	___lmul@product+1,f
  2852  05B9  0850               	movf	___lmul@multiplicand+2,w
  2853  05BA  3DD4               	addwfc	___lmul@product+2,f
  2854  05BB  0851               	movf	___lmul@multiplicand+3,w
  2855  05BC  3DD5               	addwfc	___lmul@product+3,f
  2856  05BD                     l1775:	
  2857  05BD  3001               	movlw	1
  2858  05BE                     u1815:	
  2859  05BE  35CE               	lslf	___lmul@multiplicand,f
  2860  05BF  0DCF               	rlf	___lmul@multiplicand+1,f
  2861  05C0  0DD0               	rlf	___lmul@multiplicand+2,f
  2862  05C1  0DD1               	rlf	___lmul@multiplicand+3,f
  2863  05C2  0B89               	decfsz	9,f
  2864  05C3  2DBE               	goto	u1815
  2865  05C4  3001               	movlw	1
  2866  05C5                     u1825:	
  2867  05C5  36CD               	lsrf	___lmul@multiplier+3,f
  2868  05C6  0CCC               	rrf	___lmul@multiplier+2,f
  2869  05C7  0CCB               	rrf	___lmul@multiplier+1,f
  2870  05C8  0CCA               	rrf	___lmul@multiplier,f
  2871  05C9  0B89               	decfsz	9,f
  2872  05CA  2DC5               	goto	u1825
  2873  05CB  084D               	movf	___lmul@multiplier+3,w
  2874  05CC  044C               	iorwf	___lmul@multiplier+2,w
  2875  05CD  044B               	iorwf	___lmul@multiplier+1,w
  2876  05CE  044A               	iorwf	___lmul@multiplier,w
  2877  05CF  1D03               	skipz
  2878  05D0  2DB3               	goto	l1771
  2879  05D1  0855               	movf	___lmul@product+3,w
  2880  05D2  00CD               	movwf	?___lmul+3
  2881  05D3  0854               	movf	___lmul@product+2,w
  2882  05D4  00CC               	movwf	?___lmul+2
  2883  05D5  0853               	movf	___lmul@product+1,w
  2884  05D6  00CB               	movwf	?___lmul+1
  2885  05D7  0852               	movf	___lmul@product,w
  2886  05D8  00CA               	movwf	?___lmul
  2887  05D9  0008               	return
  2888  05DA                     __end_of___lmul:	
  2889                           
  2890                           	psect	text9
  2891  0522                     __ptext9:	
  2892 ;; *************** function ___lldiv *****************
  2893 ;; Defined at:
  2894 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  divisor         4    0[BANK0 ] unsigned long 
  2897 ;;  dividend        4    4[BANK0 ] unsigned long 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  quotient        4    9[BANK0 ] unsigned long 
  2900 ;;  counter         1   13[BANK0 ] unsigned char 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  4    0[BANK0 ] unsigned long 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2910 ;;      Params:         0       8       0       0       0       0       0       0
  2911 ;;      Locals:         0       5       0       0       0       0       0       0
  2912 ;;      Temps:          0       1       0       0       0       0       0       0
  2913 ;;      Totals:         0      14       0       0       0       0       0       0
  2914 ;;Total ram usage:       14 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    1
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_main
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           
  2925                           ;psect for function ___lldiv
  2926  0522                     ___lldiv:	
  2927                           
  2928                           ;incstack = 0
  2929                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2930  0522  3000               	movlw	0
  2931  0523  0020               	movlb	0	; select bank0
  2932  0524  00D6               	movwf	___lldiv@quotient+3
  2933  0525  3000               	movlw	0
  2934  0526  00D5               	movwf	___lldiv@quotient+2
  2935  0527  3000               	movlw	0
  2936  0528  00D4               	movwf	___lldiv@quotient+1
  2937  0529  3000               	movlw	0
  2938  052A  00D3               	movwf	___lldiv@quotient
  2939  052B  084D               	movf	___lldiv@divisor+3,w
  2940  052C  044C               	iorwf	___lldiv@divisor+2,w
  2941  052D  044B               	iorwf	___lldiv@divisor+1,w
  2942  052E  044A               	iorwf	___lldiv@divisor,w
  2943  052F  1903               	skipnz
  2944  0530  2D6C               	goto	l1803
  2945  0531  01D7               	clrf	___lldiv@counter
  2946  0532  0AD7               	incf	___lldiv@counter,f
  2947  0533                     l1789:	
  2948  0533  1BCD               	btfsc	___lldiv@divisor+3,7
  2949  0534  2D41               	goto	l1791
  2950  0535  3001               	movlw	1
  2951  0536                     u1855:	
  2952  0536  35CA               	lslf	___lldiv@divisor,f
  2953  0537  0DCB               	rlf	___lldiv@divisor+1,f
  2954  0538  0DCC               	rlf	___lldiv@divisor+2,f
  2955  0539  0DCD               	rlf	___lldiv@divisor+3,f
  2956  053A  0B89               	decfsz	9,f
  2957  053B  2D36               	goto	u1855
  2958  053C  3001               	movlw	1
  2959  053D  00D2               	movwf	??___lldiv
  2960  053E  0852               	movf	??___lldiv,w
  2961  053F  07D7               	addwf	___lldiv@counter,f
  2962  0540  2D33               	goto	l1789
  2963  0541                     l1791:	
  2964  0541  3001               	movlw	1
  2965  0542                     u1875:	
  2966  0542  35D3               	lslf	___lldiv@quotient,f
  2967  0543  0DD4               	rlf	___lldiv@quotient+1,f
  2968  0544  0DD5               	rlf	___lldiv@quotient+2,f
  2969  0545  0DD6               	rlf	___lldiv@quotient+3,f
  2970  0546  0B89               	decfsz	9,f
  2971  0547  2D42               	goto	u1875
  2972  0548  084D               	movf	___lldiv@divisor+3,w
  2973  0549  0251               	subwf	___lldiv@dividend+3,w
  2974  054A  1D03               	skipz
  2975  054B  2D56               	goto	u1885
  2976  054C  084C               	movf	___lldiv@divisor+2,w
  2977  054D  0250               	subwf	___lldiv@dividend+2,w
  2978  054E  1D03               	skipz
  2979  054F  2D56               	goto	u1885
  2980  0550  084B               	movf	___lldiv@divisor+1,w
  2981  0551  024F               	subwf	___lldiv@dividend+1,w
  2982  0552  1D03               	skipz
  2983  0553  2D56               	goto	u1885
  2984  0554  084A               	movf	___lldiv@divisor,w
  2985  0555  024E               	subwf	___lldiv@dividend,w
  2986  0556                     u1885:	
  2987  0556  1C03               	skipc
  2988  0557  2D61               	goto	l1799
  2989  0558  084A               	movf	___lldiv@divisor,w
  2990  0559  02CE               	subwf	___lldiv@dividend,f
  2991  055A  084B               	movf	___lldiv@divisor+1,w
  2992  055B  3BCF               	subwfb	___lldiv@dividend+1,f
  2993  055C  084C               	movf	___lldiv@divisor+2,w
  2994  055D  3BD0               	subwfb	___lldiv@dividend+2,f
  2995  055E  084D               	movf	___lldiv@divisor+3,w
  2996  055F  3BD1               	subwfb	___lldiv@dividend+3,f
  2997  0560  1453               	bsf	___lldiv@quotient,0
  2998  0561                     l1799:	
  2999  0561  3001               	movlw	1
  3000  0562                     u1895:	
  3001  0562  36CD               	lsrf	___lldiv@divisor+3,f
  3002  0563  0CCC               	rrf	___lldiv@divisor+2,f
  3003  0564  0CCB               	rrf	___lldiv@divisor+1,f
  3004  0565  0CCA               	rrf	___lldiv@divisor,f
  3005  0566  0B89               	decfsz	9,f
  3006  0567  2D62               	goto	u1895
  3007  0568  3001               	movlw	1
  3008  0569  02D7               	subwf	___lldiv@counter,f
  3009  056A  1D03               	btfss	3,2
  3010  056B  2D41               	goto	l1791
  3011  056C                     l1803:	
  3012  056C  0856               	movf	___lldiv@quotient+3,w
  3013  056D  00CD               	movwf	?___lldiv+3
  3014  056E  0855               	movf	___lldiv@quotient+2,w
  3015  056F  00CC               	movwf	?___lldiv+2
  3016  0570  0854               	movf	___lldiv@quotient+1,w
  3017  0571  00CB               	movwf	?___lldiv+1
  3018  0572  0853               	movf	___lldiv@quotient,w
  3019  0573  00CA               	movwf	?___lldiv
  3020  0574  0008               	return
  3021  0575                     __end_of___lldiv:	
  3022                           
  3023                           	psect	intentry
  3024  0004                     __pintentry:	
  3025 ;; *************** function _ISR *****************
  3026 ;; Defined at:
  3027 ;;		line 646 in file "main.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;		None
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;		None               void
  3034 ;; Registers used:
  3035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3041 ;;      Params:         0       0       0       0       0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0       0       0       0
  3043 ;;      Temps:          5       0       0       0       0       0       0       0
  3044 ;;      Totals:         5       0       0       0       0       0       0       0
  3045 ;;Total ram usage:        5 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		Interrupt level 1
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054  0004                     _ISR:	
  3055                           
  3056                           ;incstack = 0
  3057                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  3058  0004  3180               	pagesel	$
  3059  0005  0020               	movlb	0	; select bank0
  3060  0006  087F               	movf	127,w
  3061  0007  00F9               	movwf	??_ISR+4
  3062                           
  3063                           ;main.c: 649: if ( INTCONbits.TMR0IF == 1 ) {
  3064  0008  1D0B               	btfss	11,2	;volatile
  3065  0009  28D5               	goto	i1l253
  3066                           
  3067                           ;main.c: 651: if (multi>1) {
  3068  000A  3002               	movlw	2
  3069  000B  0273               	subwf	_multi,w	;volatile
  3070  000C  1C03               	skipc
  3071  000D  287B               	goto	i1l1629
  3072                           
  3073                           ;main.c: 653: LATB |= 0b00000011;
  3074  000E  3003               	movlw	3
  3075  000F  00F5               	movwf	??_ISR
  3076  0010  0875               	movf	??_ISR,w
  3077  0011  0022               	movlb	2	; select bank2
  3078  0012  048D               	iorwf	13,f	;volatile
  3079                           
  3080                           ;main.c: 654: LATC = 255;
  3081  0013  30FF               	movlw	255
  3082  0014  008E               	movwf	14	;volatile
  3083                           
  3084                           ;main.c: 656: if(idx==0){
  3085  0015  0871               	movf	_idx,w	;volatile
  3086  0016  1D03               	btfss	3,2
  3087  0017  2843               	goto	i1l1611
  3088                           
  3089                           ;main.c: 657: if (kro_1 == 1) {
  3090  0018  0020               	movlb	0	; select bank0
  3091  0019  036C               	decf	_kro_1,w	;volatile
  3092  001A  1D03               	btfss	3,2
  3093  001B  2826               	goto	i1l1605
  3094                           
  3095                           ;main.c: 658: LATC = ~(cyfry[cyf_1] | (1<<7));
  3096  001C  0868               	movf	_cyf_1,w	;volatile
  3097  001D  3E00               	addlw	low (_cyfry| (0+32768))
  3098  001E  0084               	movwf	4
  3099  001F  3087               	movlw	high (_cyfry| (0+32768))
  3100  0020  1803               	skipnc
  3101  0021  3E01               	addlw	1
  3102  0022  0085               	movwf	5
  3103  0023  0800               	movf	0,w	;code access
  3104  0024  3880               	iorlw	128
  3105  0025  2834               	goto	L4
  3106  0026                     i1l1605:	
  3107                           ;main.c: 660: }else if( cyf_1 != 10 ){
  3108                           
  3109                           ;main.c: 659: LATB &= ~an[idx] ;
  3110                           
  3111  0026  300A               	movlw	10
  3112  0027  0020               	movlb	0	; select bank0
  3113  0028  0668               	xorwf	_cyf_1,w	;volatile
  3114  0029  1903               	btfsc	3,2
  3115  002A  2843               	goto	i1l1611
  3116                           
  3117                           ;main.c: 661: LATC = ~(cyfry[cyf_1] & ~(1<<7));
  3118  002B  0868               	movf	_cyf_1,w	;volatile
  3119  002C  3E00               	addlw	low (_cyfry| (0+32768))
  3120  002D  0084               	movwf	4
  3121  002E  3087               	movlw	high (_cyfry| (0+32768))
  3122  002F  1803               	skipnc
  3123  0030  3E01               	addlw	1
  3124  0031  0085               	movwf	5
  3125  0032  0800               	movf	0,w	;code access
  3126  0033  397F               	andlw	127
  3127  0034                     L4:	
  3128  0034  3AFF               	xorlw	255
  3129  0035  0022               	movlb	2	; select bank2
  3130  0036  008E               	movwf	14	;volatile
  3131                           
  3132                           ;main.c: 662: LATB &= ~an[idx] ;
  3133  0037  0871               	movf	_idx,w	;volatile
  3134  0038  3E0F               	addlw	low (_an| (0+32768))
  3135  0039  0084               	movwf	4
  3136  003A  3087               	movlw	high (_an| (0+32768))
  3137  003B  1803               	skipnc
  3138  003C  3E01               	addlw	1
  3139  003D  0085               	movwf	5
  3140  003E  0800               	movf	0,w	;code access
  3141  003F  3AFF               	xorlw	255
  3142  0040  00F5               	movwf	??_ISR
  3143  0041  0875               	movf	??_ISR,w
  3144  0042  058D               	andwf	13,f	;volatile
  3145  0043                     i1l1611:	
  3146                           
  3147                           ;main.c: 663: }
  3148                           ;main.c: 664: }
  3149                           ;main.c: 666: if(idx==1){
  3150  0043  0371               	decf	_idx,w	;volatile
  3151  0044  1D03               	btfss	3,2
  3152  0045  2872               	goto	i1l1625
  3153                           
  3154                           ;main.c: 667: if (kro_2 == 1) {
  3155  0046  0021               	movlb	1	; select bank1
  3156  0047  0328               	decf	_kro_2^(0+128),w	;volatile
  3157  0048  1D03               	btfss	3,2
  3158  0049  2855               	goto	i1l1619
  3159                           
  3160                           ;main.c: 668: LATC = ~(cyfry[cyf_2] | (1<<7));
  3161  004A  0020               	movlb	0	; select bank0
  3162  004B  0869               	movf	_cyf_2,w	;volatile
  3163  004C  3E00               	addlw	low (_cyfry| (0+32768))
  3164  004D  0084               	movwf	4
  3165  004E  3087               	movlw	high (_cyfry| (0+32768))
  3166  004F  1803               	skipnc
  3167  0050  3E01               	addlw	1
  3168  0051  0085               	movwf	5
  3169  0052  0800               	movf	0,w	;code access
  3170  0053  3880               	iorlw	128
  3171  0054  2863               	goto	L5
  3172  0055                     i1l1619:	
  3173                           ;main.c: 670: }else if( cyf_2 != 10 ){
  3174                           
  3175                           ;main.c: 669: LATB &= ~an[idx] ;
  3176                           
  3177  0055  300A               	movlw	10
  3178  0056  0020               	movlb	0	; select bank0
  3179  0057  0669               	xorwf	_cyf_2,w	;volatile
  3180  0058  1903               	btfsc	3,2
  3181  0059  2872               	goto	i1l1625
  3182                           
  3183                           ;main.c: 671: LATC = ~(cyfry[cyf_2] & ~(1<<7));
  3184  005A  0869               	movf	_cyf_2,w	;volatile
  3185  005B  3E00               	addlw	low (_cyfry| (0+32768))
  3186  005C  0084               	movwf	4
  3187  005D  3087               	movlw	high (_cyfry| (0+32768))
  3188  005E  1803               	skipnc
  3189  005F  3E01               	addlw	1
  3190  0060  0085               	movwf	5
  3191  0061  0800               	movf	0,w	;code access
  3192  0062  397F               	andlw	127
  3193  0063                     L5:	
  3194  0063  3AFF               	xorlw	255
  3195  0064  0022               	movlb	2	; select bank2
  3196  0065  008E               	movwf	14	;volatile
  3197                           
  3198                           ;main.c: 672: LATB &= ~an[idx] ;
  3199  0066  0871               	movf	_idx,w	;volatile
  3200  0067  3E0F               	addlw	low (_an| (0+32768))
  3201  0068  0084               	movwf	4
  3202  0069  3087               	movlw	high (_an| (0+32768))
  3203  006A  1803               	skipnc
  3204  006B  3E01               	addlw	1
  3205  006C  0085               	movwf	5
  3206  006D  0800               	movf	0,w	;code access
  3207  006E  3AFF               	xorlw	255
  3208  006F  00F5               	movwf	??_ISR
  3209  0070  0875               	movf	??_ISR,w
  3210  0071  058D               	andwf	13,f	;volatile
  3211  0072                     i1l1625:	
  3212                           
  3213                           ;main.c: 673: }
  3214                           ;main.c: 674: }
  3215                           ;main.c: 677: if(++idx>1) idx=0;
  3216  0072  3001               	movlw	1
  3217  0073  00F5               	movwf	??_ISR
  3218  0074  0875               	movf	??_ISR,w
  3219  0075  07F1               	addwf	_idx,f	;volatile
  3220  0076  3002               	movlw	2
  3221  0077  0271               	subwf	_idx,w	;volatile
  3222  0078  1803               	btfsc	3,0
  3223  0079  01F1               	clrf	_idx	;volatile
  3224                           
  3225                           ;main.c: 678: multi =0;
  3226  007A  01F3               	clrf	_multi	;volatile
  3227  007B                     i1l1629:	
  3228                           
  3229                           ;main.c: 679: }
  3230                           ;main.c: 680: multi++;
  3231  007B  3001               	movlw	1
  3232  007C  00F5               	movwf	??_ISR
  3233  007D  0875               	movf	??_ISR,w
  3234  007E  07F3               	addwf	_multi,f	;volatile
  3235                           
  3236                           ;main.c: 684: if (timer1 >0) {
  3237  007F  0020               	movlb	0	; select bank0
  3238  0080  082E               	movf	_timer1,w	;volatile
  3239  0081  042F               	iorwf	_timer1+1,w	;volatile
  3240  0082  1903               	btfsc	3,2
  3241  0083  2888               	goto	i1l246
  3242                           
  3243                           ;main.c: 685: timer1--;
  3244  0084  3001               	movlw	1
  3245  0085  02AE               	subwf	_timer1,f	;volatile
  3246  0086  3000               	movlw	0
  3247  0087  3BAF               	subwfb	_timer1+1,f	;volatile
  3248  0088                     i1l246:	
  3249                           
  3250                           ;main.c: 686: }
  3251                           ;main.c: 688: if (timer2 >0) {
  3252  0088  0827               	movf	_timer2+3,w	;volatile
  3253  0089  0426               	iorwf	_timer2+2,w	;volatile
  3254  008A  0425               	iorwf	_timer2+1,w	;volatile
  3255  008B  0424               	iorwf	_timer2,w	;volatile
  3256  008C  1903               	skipnz
  3257  008D  289E               	goto	i1l1637
  3258                           
  3259                           ;main.c: 689: timer2--;
  3260  008E  3001               	movlw	1
  3261  008F  00F5               	movwf	??_ISR
  3262  0090  3000               	movlw	0
  3263  0091  00F6               	movwf	??_ISR+1
  3264  0092  3000               	movlw	0
  3265  0093  00F7               	movwf	??_ISR+2
  3266  0094  3000               	movlw	0
  3267  0095  00F8               	movwf	??_ISR+3
  3268  0096  0875               	movf	??_ISR,w
  3269  0097  02A4               	subwf	_timer2,f	;volatile
  3270  0098  0876               	movf	??_ISR+1,w
  3271  0099  3BA5               	subwfb	_timer2+1,f	;volatile
  3272  009A  0877               	movf	??_ISR+2,w
  3273  009B  3BA6               	subwfb	_timer2+2,f	;volatile
  3274  009C  0878               	movf	??_ISR+3,w
  3275  009D  3BA7               	subwfb	_timer2+3,f	;volatile
  3276  009E                     i1l1637:	
  3277                           
  3278                           ;main.c: 690: }
  3279                           ;main.c: 692: if (timer3 >0) {
  3280  009E  0830               	movf	_timer3,w	;volatile
  3281  009F  0431               	iorwf	_timer3+1,w	;volatile
  3282  00A0  1903               	btfsc	3,2
  3283  00A1  28A6               	goto	i1l1641
  3284                           
  3285                           ;main.c: 693: timer3--;
  3286  00A2  3001               	movlw	1
  3287  00A3  02B0               	subwf	_timer3,f	;volatile
  3288  00A4  3000               	movlw	0
  3289  00A5  3BB1               	subwfb	_timer3+1,f	;volatile
  3290  00A6                     i1l1641:	
  3291                           
  3292                           ;main.c: 694: }
  3293                           ;main.c: 696: if (timer4 >0) {
  3294  00A6  0832               	movf	_timer4,w	;volatile
  3295  00A7  0433               	iorwf	_timer4+1,w	;volatile
  3296  00A8  1903               	btfsc	3,2
  3297  00A9  28AE               	goto	i1l249
  3298                           
  3299                           ;main.c: 697: timer4--;
  3300  00AA  3001               	movlw	1
  3301  00AB  02B2               	subwf	_timer4,f	;volatile
  3302  00AC  3000               	movlw	0
  3303  00AD  3BB3               	subwfb	_timer4+1,f	;volatile
  3304  00AE                     i1l249:	
  3305                           
  3306                           ;main.c: 698: }
  3307                           ;main.c: 700: if (timer5 >0) {
  3308  00AE  0865               	movf	_timer5+3,w	;volatile
  3309  00AF  0464               	iorwf	_timer5+2,w	;volatile
  3310  00B0  0463               	iorwf	_timer5+1,w	;volatile
  3311  00B1  0462               	iorwf	_timer5,w	;volatile
  3312  00B2  1903               	skipnz
  3313  00B3  28C4               	goto	i1l1647
  3314                           
  3315                           ;main.c: 701: timer5--;
  3316  00B4  3001               	movlw	1
  3317  00B5  00F5               	movwf	??_ISR
  3318  00B6  3000               	movlw	0
  3319  00B7  00F6               	movwf	??_ISR+1
  3320  00B8  3000               	movlw	0
  3321  00B9  00F7               	movwf	??_ISR+2
  3322  00BA  3000               	movlw	0
  3323  00BB  00F8               	movwf	??_ISR+3
  3324  00BC  0875               	movf	??_ISR,w
  3325  00BD  02E2               	subwf	_timer5,f	;volatile
  3326  00BE  0876               	movf	??_ISR+1,w
  3327  00BF  3BE3               	subwfb	_timer5+1,f	;volatile
  3328  00C0  0877               	movf	??_ISR+2,w
  3329  00C1  3BE4               	subwfb	_timer5+2,f	;volatile
  3330  00C2  0878               	movf	??_ISR+3,w
  3331  00C3  3BE5               	subwfb	_timer5+3,f	;volatile
  3332  00C4                     i1l1647:	
  3333                           
  3334                           ;main.c: 702: }
  3335                           ;main.c: 704: if (timer6 >0) {
  3336  00C4  0834               	movf	_timer6,w	;volatile
  3337  00C5  0435               	iorwf	_timer6+1,w	;volatile
  3338  00C6  1903               	btfsc	3,2
  3339  00C7  28CC               	goto	i1l1651
  3340                           
  3341                           ;main.c: 705: timer6--;
  3342  00C8  3001               	movlw	1
  3343  00C9  02B4               	subwf	_timer6,f	;volatile
  3344  00CA  3000               	movlw	0
  3345  00CB  3BB5               	subwfb	_timer6+1,f	;volatile
  3346  00CC                     i1l1651:	
  3347                           
  3348                           ;main.c: 706: }
  3349                           ;main.c: 708: if (timer7 >0) {
  3350  00CC  0836               	movf	_timer7,w	;volatile
  3351  00CD  0437               	iorwf	_timer7+1,w	;volatile
  3352  00CE  1903               	btfsc	3,2
  3353  00CF  28D4               	goto	i1l1655
  3354                           
  3355                           ;main.c: 709: timer7--;
  3356  00D0  3001               	movlw	1
  3357  00D1  02B6               	subwf	_timer7,f	;volatile
  3358  00D2  3000               	movlw	0
  3359  00D3  3BB7               	subwfb	_timer7+1,f	;volatile
  3360  00D4                     i1l1655:	
  3361                           
  3362                           ;main.c: 710: }
  3363                           ;main.c: 712: INTCONbits.TMR0IF = 0;
  3364  00D4  110B               	bcf	11,2	;volatile
  3365  00D5                     i1l253:	
  3366  00D5  0879               	movf	??_ISR+4,w
  3367  00D6  00FF               	movwf	127
  3368  00D7  0009               	retfie
  3369  00D8                     __end_of_ISR:	
  3370  007E                     btemp	set	126	;btemp
  3371  007E                     wtemp	set	126
  3372  007E                     wtemp0	set	126
  3373  0080                     wtemp1	set	128
  3374  0082                     wtemp2	set	130
  3375  0084                     wtemp3	set	132
  3376  0086                     wtemp4	set	134
  3377  0088                     wtemp5	set	136
  3378  007F                     wtemp6	set	127
  3379  007E                     ttemp	set	126
  3380  007E                     ttemp0	set	126
  3381  0081                     ttemp1	set	129
  3382  0084                     ttemp2	set	132
  3383  0087                     ttemp3	set	135
  3384  007F                     ttemp4	set	127
  3385  007E                     ltemp	set	126
  3386  007E                     ltemp0	set	126
  3387  0082                     ltemp1	set	130
  3388  0086                     ltemp2	set	134
  3389  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    17
    Data        3
    BSS         51
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     24      80
    BANK1            80      4       9
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            76      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_wyswietl
    _wyswietl->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11     7      4    2998
                                             17 BANK0      7     3      4
                                              0 BANK1      4     4      0
                            ___lldiv
                             ___lmul
                        _erase_flash
                         _read_flash
                        _write_flash
                           _wyswietl
 ---------------------------------------------------------------------------------
 (1) _wyswietl                                             3     1      2    1600
                                             14 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     556
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     592
                                              6 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _write_flash                                          5     3      2     309
                                              0 BANK0      5     3      2
                       _unlock_flash
 ---------------------------------------------------------------------------------
 (1) _read_flash                                           2     1      1     278
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _erase_flash                                          4     3      1     116
                                              0 BANK0      4     3      1
                       _unlock_flash
 ---------------------------------------------------------------------------------
 (2) _unlock_flash                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     349
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
   ___lmul
   _erase_flash
     _unlock_flash
   _read_flash
   _write_flash
     _unlock_flash
   _wyswietl
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      63       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     18      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      4       9       8       11.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               4C      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      63      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Nov 01 20:46:20 2015

             __CFG_CP$ON 0000                        _x 0049                       _an 070F  
  __size_of_unlock_flash 0009              __CFG_LVP$ON 0000                      l207 0470  
                    l180 02C6                      l166 0202                      l192 0401  
                    l194 03BD                      l179 02D4                      l197 03C1  
                    l199 03C6             ?_erase_flash 004A                      _ISR 0004  
                    u905 0595                      u915 059D                      u875 0581  
                    u895 058B                      _PWM 0070                      _adc 0028  
                    _idx 0071             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_IESO$ON 0000                     ?_ISR 0075                     l2001 037A  
                   l2021 03C0                     l2005 037F                     l2015 03AB  
                   l1161 057E                     l2009 0387                     l1163 058A  
                   l2043 03E4                     l1173 05A5                     l2037 03CB  
                   l2029 03C5                     l2063 0433                     l2047 03E6  
                   l1169 059C                     l2073 046A                     l2057 0421  
                   l2049 03FB                     l2067 0455                     l1803 056C  
                   l1911 0237                     l1673 05E1                     l1745 04B0  
                   l1921 0251                     l1905 0226                     l1771 05B3  
                   l1675 05ED                     l1683 0602                     l1763 0515  
                   l1755 04EB                     l1915 023C                     l1791 0541  
                   l1775 05BD                     l1679 05F9                     l1935 0273  
                   l1945 028D                     l1929 0262                     l1939 0278  
                   l1789 0533                     l1965 02F2                     l1893 020E  
                   l1877 01D4                     l1799 0561                     l1887 01FA  
                   l1985 0352                     l1897 0216                     l1987 0356  
                   l1997 0372                     l1999 0373             __CFG_WDTE$ON 0000  
                   _LATB 010D                     _LATC 010E                     u2145 02DB  
                   u2407 02B6                     u2417 02CD                     u2337 01A3  
                   u2427 0625                     u2347 0221                     u2437 0645  
                   u1725 05E4                     u2357 024C                     u1815 05BE  
                   u2367 025D                     u1825 05C5                     u1745 05F3  
                   u2377 0288                     u1755 05FA                     u2387 0298  
                   u2397 02A7                     u1855 0536                     u1875 0542  
                   u1885 0556                     u1895 0562             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 0109                     _temp 00A0  
                   fsr0h 0005                     fsr0l 0004                     indf0 0000  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 00D8                     ttemp 007E                     wtemp 007E  
          __CFG_MCLRE$ON 0000             _unlock_flash 071D                    ??_ISR 0075  
                  ?_main 005B          __end_of___lldiv 0575          __end_of___lwdiv 05AA  
                  i1l253 00D5                    i1l246 0088                    i1l249 00AE  
        __end_of___lwmod 0607                    _START 0038                    _TRISC 008E  
            _write_flash 0607      ___lmul@multiplicand 004E                    _cyf_1 0068  
                  _cyf_2 0069                    _cyf_3 003D                    _kro_1 006C  
                  _kro_2 00A8                    _kro_3 0044                    _cyfry 0700  
                  _multi 0073                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
      erase_flash@adr_hi 004D        erase_flash@adr_lo 004A          __initialization 00DA  
           __end_of_main 0472           __CFG_LPBOR$OFF 0000                   ??_main 00A4  
                 _ADCON1 009E                   _ANSELC 018E                   i1l1611 0043  
                 i1l1605 0026                   i1l1641 00A6                   i1l1625 0072  
                 i1l1651 00CC                   i1l1619 0055                   i1l1637 009E  
                 i1l1629 007B                   i1l1655 00D4                   i1l1647 00C4  
                 _PMADRH 0192                   _PMADRL 0191                   _PMDATH 0194  
                 _PMDATL 0193                   _PMCON2 0196           __CFG_PWRTE$OFF 0000  
                 ___lmul 05AA                   _adr_hi 006D           __CFG_STVREN$ON 0000  
              ??___lldiv 0052                ??___lwdiv 0054                ??___lwmod 004E  
                 _czas_s 002C              _wyswietlacz 0074                   _timer1 002E  
                 _timer2 0024                   _timer3 0030                   _timer4 0032  
                 _timer5 0062                   _timer6 0034                   _timer7 0036  
   __size_of_erase_flash 0020  __end_of__initialization 0106         __end_of_wyswietl 0522  
         __pcstackCOMMON 0075             __pidataBANK0 0726            __end_of_cyfry 070F  
             __end_of_an 0711           _OPTION_REGbits 0095               __pbssBANK0 0020  
             __pbssBANK1 00A0      _przycisk_minus_flag 0046          __CFG_VCAPEN$OFF 0000  
             __pmaintext 0109                  ?___lmul 004A               __pintentry 0004  
         ___lmul@product 0052               _flaga_temp 003F             ?_write_flash 004A  
         main@liczba_tmp 0060               _czas_flash 002A          __size_of___lmul 0030  
                ___lldiv 0522                  ___lwdiv 0575                  ___lwmod 05DA  
                _adr_low 006E               _read_flash 064E                  __ptext1 0472  
                __ptext2 05DA                  __ptext3 0575                  __ptext4 0607  
                __ptext5 064E                  __ptext6 062E                  __ptext7 071D  
                __ptext8 05AA                  __ptext9 0522             __size_of_ISR 00D4  
                _czas_ms 0020                  _licznik 0072                  _temp_sr 00A2  
              ?_wyswietl 0058                  clrloop0 0712                  main@tmp 005F  
   end_of_initialization 0106         _case_wyswietlacz 003A          ___lldiv@divisor 004A  
        ___lldiv@counter 0057       write_flash@data_lo 004B             __pstringtext 0700  
          _grzalka_numer 006B                _PORTBbits 000D               _test_index 0048  
       __CFG_FOSC$INTOSC 0000                _TRISAbits 008C                _TRISBbits 008D  
             ??_wyswietl 005A           __end_of___lmul 05DA              ?_read_flash 004A  
          ??_erase_flash 004B      start_initialization 00DA              __end_of_ISR 00D8  
   __size_of_write_flash 0027             _czas_s_reset 0066            ?_unlock_flash 0075  
               ??___lmul 0052              __pdataBANK0 006D              __pbssBIGRAM 218C  
            __pbssCOMMON 0070                ___latbits 0002            __pcstackBANK0 004A  
          __pcstackBANK1 00A4      __end_of_erase_flash 064E      __size_of_read_flash 0012  
              __pnvBANK0 0062                __pnvBANK1 00A8           ??_unlock_flash 004A  
       ___lwdiv@dividend 0052                 ?___lldiv 004A                 ?___lwdiv 0050  
               ?___lwmod 004A       _przycisk_plus_flag 0047                _cyf_1_tmp 003B  
              _cyf_2_tmp 003C                _cyf_3_tmp 003E                _flash_low 0041  
       ___lwdiv@quotient 0055                _kro_1_tmp 0042                _kro_2_tmp 0043  
              _kro_3_tmp 0045        __size_of_wyswietl 00B0                 _LATAbits 010C  
               _LATBbits 010D                clear_ram0 0711        write_flash@adr_hi 004E  
      write_flash@adr_lo 004A                 _START_Fl 0039               _ADCON0bits 009D  
            _erase_flash 062E                 _WPUBbits 020D        ___lmul@multiplier 004A  
        _czas_przerwa_ms 006A         __size_of___lldiv 0053         __size_of___lwdiv 0035  
       __size_of___lwmod 002D             ??_read_flash 004B               _ANSELAbits 018C  
             _ANSELBbits 018D                 _adr_low2 006F     __end_of_unlock_flash 0726  
        ___lwdiv@divisor 0050          ___lwdiv@counter 0057                 _flash_hi 0040  
          __size_of_main 0369       __end_of_read_flash 0660                 main@argc 005B  
               main@argv 005D        read_flash@adrs_hi 004B        read_flash@adrs_lo 004A  
             _INTCONbits 000B            ??_write_flash 004C               _FVRCONbits 0117  
               _wyswietl 0472                 intlevel1 0000               _PMCON1bits 0195  
       ___lwmod@dividend 004C         ___lldiv@dividend 004E        __CFG_CLKOUTEN$OFF 0000  
             _OSCCONbits 0099              _temp_tabela 218C         ___lldiv@quotient 0053  
        ___lwmod@divisor 004A          ___lwmod@counter 004F           wyswietl@liczba 0058  
             _WDTCONbits 0097      __end_of_write_flash 062E  
