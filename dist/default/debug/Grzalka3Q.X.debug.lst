

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Nov 04 21:47:44 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1516
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	dabs	1,0x320,16
    29                           	dabs	1,0x2A0,80
    30                           	dabs	1,0x26C,4
    31                           	dabs	1,0x218C,0,_temp_tabela
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  0010                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0015                     	;# 
    52  0016                     	;# 
    53  0016                     	;# 
    54  0017                     	;# 
    55  0018                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001C                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  0090                     	;# 
    64  0091                     	;# 
    65  0092                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0097                     	;# 
    69  0099                     	;# 
    70  009A                     	;# 
    71  009B                     	;# 
    72  009B                     	;# 
    73  009C                     	;# 
    74  009D                     	;# 
    75  009E                     	;# 
    76  010C                     	;# 
    77  010D                     	;# 
    78  010E                     	;# 
    79  0116                     	;# 
    80  0117                     	;# 
    81  011D                     	;# 
    82  018C                     	;# 
    83  018D                     	;# 
    84  018E                     	;# 
    85  0191                     	;# 
    86  0191                     	;# 
    87  0192                     	;# 
    88  0193                     	;# 
    89  0193                     	;# 
    90  0194                     	;# 
    91  0195                     	;# 
    92  0196                     	;# 
    93  0197                     	;# 
    94  0199                     	;# 
    95  019A                     	;# 
    96  019B                     	;# 
    97  019B                     	;# 
    98  019B                     	;# 
    99  019B                     	;# 
   100  019C                     	;# 
   101  019C                     	;# 
   102  019D                     	;# 
   103  019E                     	;# 
   104  019F                     	;# 
   105  020D                     	;# 
   106  0210                     	;# 
   107  0211                     	;# 
   108  0211                     	;# 
   109  0212                     	;# 
   110  0212                     	;# 
   111  0213                     	;# 
   112  0213                     	;# 
   113  0214                     	;# 
   114  0214                     	;# 
   115  0215                     	;# 
   116  0215                     	;# 
   117  0215                     	;# 
   118  0216                     	;# 
   119  0216                     	;# 
   120  0217                     	;# 
   121  0217                     	;# 
   122  0291                     	;# 
   123  0291                     	;# 
   124  0292                     	;# 
   125  0293                     	;# 
   126  0298                     	;# 
   127  0298                     	;# 
   128  0299                     	;# 
   129  029A                     	;# 
   130  0394                     	;# 
   131  0395                     	;# 
   132  0396                     	;# 
   133  0FE4                     	;# 
   134  0FE5                     	;# 
   135  0FE6                     	;# 
   136  0FE7                     	;# 
   137  0FE8                     	;# 
   138  0FE9                     	;# 
   139  0FEA                     	;# 
   140  0FEB                     	;# 
   141  0FED                     	;# 
   142  0FEE                     	;# 
   143  0FEF                     	;_temp_tabela
   144                           
   145                           	psect	idataBANK0
   146  0726                     __pidataBANK0:	
   147                           
   148                           ;initializer for _adr_hi
   149  0726  341F               	retlw	31
   150                           
   151                           ;initializer for _adr_low
   152  0727  34FD               	retlw	253
   153                           
   154                           ;initializer for _adr_low2
   155  0728  34FE               	retlw	254
   156                           
   157                           ;initializer for _adr_moc
   158  0729  34FF               	retlw	255
   159                           
   160                           	psect	stringtext
   161  0700                     __pstringtext:	
   162  0700                     _cyfry:	
   163  0700  343F               	retlw	63
   164  0701  3406               	retlw	6
   165  0702  345B               	retlw	91
   166  0703  344F               	retlw	79
   167  0704  3466               	retlw	102
   168  0705  346D               	retlw	109
   169  0706  347D               	retlw	125
   170  0707  3407               	retlw	7
   171  0708  347F               	retlw	127
   172  0709  346F               	retlw	111
   173  070A  3400               	retlw	0
   174  070B  3440               	retlw	64
   175  070C  3463               	retlw	99
   176  070D  341C               	retlw	28
   177  070E  3440               	retlw	64
   178  070F                     __end_of_cyfry:	
   179  070F                     _an:	
   180  070F  3401               	retlw	1
   181  0710  3402               	retlw	2
   182  0711                     __end_of_an:	
   183                           
   184                           	psect	nvBANK0
   185  0063                     __pnvBANK0:	
   186  0063                     _timer5:	
   187  0063                     	ds	4
   188  0067                     _czas_s_reset:	
   189  0067                     	ds	2
   190  0069                     _cyf_1:	
   191  0069                     	ds	1
   192  006A                     _cyf_2:	
   193  006A                     	ds	1
   194  006B                     _grzalka_numer:	
   195  006B                     	ds	1
   196                           
   197                           	psect	nvBANK1
   198  00AC                     __pnvBANK1:	
   199  00AC                     _kro_1:	
   200  00AC                     	ds	1
   201  00AD                     _kro_2:	
   202  00AD                     	ds	1
   203  000B                     _INTCONbits	set	11
   204  000D                     _PORTBbits	set	13
   205  009D                     _ADCON0bits	set	157
   206  009E                     _ADCON1	set	158
   207  0095                     _OPTION_REGbits	set	149
   208  0099                     _OSCCONbits	set	153
   209  008C                     _TRISAbits	set	140
   210  008D                     _TRISBbits	set	141
   211  008E                     _TRISC	set	142
   212  0097                     _WDTCONbits	set	151
   213  0117                     _FVRCONbits	set	279
   214  010C                     _LATAbits	set	268
   215  010D                     _LATB	set	269
   216  010D                     _LATBbits	set	269
   217  010E                     _LATC	set	270
   218  018C                     _ANSELAbits	set	396
   219  018D                     _ANSELBbits	set	397
   220  018E                     _ANSELC	set	398
   221  0192                     _PMADRH	set	402
   222  0191                     _PMADRL	set	401
   223  0195                     _PMCON1bits	set	405
   224  0196                     _PMCON2	set	406
   225  0194                     _PMDATH	set	404
   226  0193                     _PMDATL	set	403
   227  020D                     _WPUBbits	set	525
   228                           
   229                           ; #config settings
   230  0000                     
   231                           	psect	cinit
   232  00E3                     start_initialization:	
   233  00E3                     __initialization:		;BIGRAM
   234                           
   235                           ; Clear objects allocated to BIGRAM
   236  00E3  308C               	movlw	low (0+8588)
   237  00E4  0084               	movwf	4
   238  00E5  3021               	movlw	high (0+8588)
   239  00E6  0085               	movwf	5
   240  00E7  3064               	movlw	100
   241  00E8  00FE               	movwf	btemp
   242  00E9  3000               	movlw	0
   243  00EA  00FF               	movwf	btemp+1
   244  00EB  3187  2711  3180   	fcall	clear_ram0
   245                           
   246                           ; Clear objects allocated to COMMON
   247  00EE  01F0               	clrf	__pbssCOMMON& (0+127)
   248  00EF  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   249  00F0  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   250  00F1  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   251  00F2  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   252                           
   253                           ; Clear objects allocated to BANK0
   254  00F3  3020               	movlw	low __pbssBANK0
   255  00F4  0084               	movwf	4
   256  00F5  3000               	movlw	high __pbssBANK0
   257  00F6  0085               	movwf	5
   258  00F7  302B               	movlw	43
   259  00F8  00FE               	movwf	btemp
   260  00F9  3000               	movlw	0
   261  00FA  00FF               	movwf	btemp+1
   262  00FB  3187  2711  3180   	fcall	clear_ram0
   263                           
   264                           ; Clear objects allocated to BANK1
   265  00FE  0021               	movlb	1	; select bank1
   266  00FF  01A0               	clrf	__pbssBANK1& (0+127)
   267  0100  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   268  0101  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   269  0102  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   270  0103  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   271  0104  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   272  0105  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   273  0106  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   274                           
   275                           ; Initialize objects allocated to BANK0
   276  0107  0020               	movlb	0	; select bank0
   277  0108  3187  2726  3180   	fcall	__pidataBANK0	;fetch initializer
   278  010B  00EC               	movwf	__pdataBANK0& (0+127)
   279  010C  3187  2727  3180   	fcall	__pidataBANK0+1	;fetch initializer
   280  010F  00ED               	movwf	(__pdataBANK0+1)& (0+127)
   281  0110  3187  2728  3180   	fcall	__pidataBANK0+2	;fetch initializer
   282  0113  00EE               	movwf	(__pdataBANK0+2)& (0+127)
   283  0114  3187  2729         	fcall	__pidataBANK0+3	;fetch initializer
   284  0116  00EF               	movwf	(__pdataBANK0+3)& (0+127)
   285  0117                     end_of_initialization:	
   286                           ;End of C runtime variable initialization code
   287                           
   288  0117                     __end_of__initialization:	
   289  0117  0020               	movlb	0
   290  0118  3181  291A         	ljmp	_main	;jump to C main() function
   291                           
   292                           	psect	bssCOMMON
   293  0070                     __pbssCOMMON:	
   294  0070                     _PWM:	
   295  0070                     	ds	1
   296  0071                     _idx:	
   297  0071                     	ds	1
   298  0072                     _licznik:	
   299  0072                     	ds	1
   300  0073                     _multi:	
   301  0073                     	ds	1
   302  0074                     _wyswietlacz:	
   303  0074                     	ds	1
   304                           
   305                           	psect	bssBANK0
   306  0020                     __pbssBANK0:	
   307  0020                     _timer2:	
   308  0020                     	ds	4
   309  0024                     _adc:	
   310  0024                     	ds	2
   311  0026                     _czas_flash:	
   312  0026                     	ds	2
   313  0028                     _czas_s:	
   314  0028                     	ds	2
   315  002A                     _timer1:	
   316  002A                     	ds	2
   317  002C                     _timer3:	
   318  002C                     	ds	2
   319  002E                     _timer4:	
   320  002E                     	ds	2
   321  0030                     _timer6:	
   322  0030                     	ds	2
   323  0032                     _timer7:	
   324  0032                     	ds	2
   325  0034                     _timer8:	
   326  0034                     	ds	2
   327  0036                     _START:	
   328  0036                     	ds	1
   329  0037                     _START_Fl:	
   330  0037                     	ds	1
   331  0038                     _case_wyswietlacz:	
   332  0038                     	ds	1
   333  0039                     _cyf_1_tmp:	
   334  0039                     	ds	1
   335  003A                     _cyf_2_tmp:	
   336  003A                     	ds	1
   337  003B                     _cyf_3:	
   338  003B                     	ds	1
   339  003C                     _cyf_3_tmp:	
   340  003C                     	ds	1
   341  003D                     _czas_przerwa_ms:	
   342  003D                     	ds	1
   343  003E                     _flaga_temp:	
   344  003E                     	ds	1
   345  003F                     _flash_hi:	
   346  003F                     	ds	1
   347  0040                     _flash_low:	
   348  0040                     	ds	1
   349  0041                     _flash_moc:	
   350  0041                     	ds	1
   351  0042                     _kro_1_tmp:	
   352  0042                     	ds	1
   353  0043                     _kro_2_tmp:	
   354  0043                     	ds	1
   355  0044                     _kro_3:	
   356  0044                     	ds	1
   357  0045                     _kro_3_tmp:	
   358  0045                     	ds	1
   359  0046                     _moc:	
   360  0046                     	ds	1
   361  0047                     _przycisk_minus_flag:	
   362  0047                     	ds	1
   363  0048                     _przycisk_plus_flag:	
   364  0048                     	ds	1
   365  0049                     _test_index:	
   366  0049                     	ds	1
   367  004A                     _x:	
   368  004A                     	ds	1
   369                           
   370                           	psect	dataBANK0
   371  006C                     __pdataBANK0:	
   372  006C                     _adr_hi:	
   373  006C                     	ds	1
   374  006D                     _adr_low:	
   375  006D                     	ds	1
   376  006E                     _adr_low2:	
   377  006E                     	ds	1
   378  006F                     _adr_moc:	
   379  006F                     	ds	1
   380                           
   381                           	psect	bssBANK1
   382  00A0                     __pbssBANK1:	
   383  00A0                     _czas_ms:	
   384  00A0                     	ds	4
   385  00A4                     _temp:	
   386  00A4                     	ds	2
   387  00A6                     _temp_sr:	
   388  00A6                     	ds	2
   389                           
   390                           	psect	clrtext
   391  0711                     clear_ram0:	
   392                           ;	Called with FSR0 containing the base address, and
   393                           ;	btemp/btemp+1 has the size to clear
   394                           
   395  0711  0064               	clrwdt	;clear the watchdog before getting into this loop
   396  0712                     clrloop0:	
   397  0712  0180               	clrf	0	;clear RAM location pointed to by FSR
   398  0713  3101               	addfsr 0,1
   399  0714  3001               	movlw	1
   400  0715  02FE               	subwf	126,f
   401  0716  3000               	movlw	0
   402  0717  3BFF               	subwfb	127,f
   403  0718  087F               	movf	127,w
   404  0719  047E               	iorwf	126,w
   405  071A  1903               	btfsc	3,2
   406  071B  3400               	retlw	0	;all done for this memory range, return
   407  071C  2F12               	goto	clrloop0	;have we reached the end yet?
   408                           
   409                           	psect	cstackBANK1
   410  00A8                     __pcstackBANK1:	
   411  00A8                     ??_main:	
   412                           
   413                           ; 0 bytes @ 0x0
   414  00A8                     	ds	4
   415                           
   416                           	psect	cstackCOMMON
   417  0075                     __pcstackCOMMON:	
   418  0075                     ?_unlock_flash:	
   419  0075                     ?_ISR:	
   420                           ; 0 bytes @ 0x0
   421                           
   422  0075                     ??_ISR:	
   423                           ; 0 bytes @ 0x0
   424                           
   425                           
   426                           ; 0 bytes @ 0x0
   427  0075                     	ds	5
   428                           
   429                           	psect	cstackBANK0
   430  004B                     __pcstackBANK0:	
   431  004B                     ?_erase_flash:	
   432  004B                     ?_write_flash:	
   433                           ; 0 bytes @ 0x0
   434                           
   435  004B                     ??_unlock_flash:	
   436                           ; 0 bytes @ 0x0
   437                           
   438  004B                     ?_read_flash:	
   439                           ; 0 bytes @ 0x0
   440                           
   441  004B                     ?___lwmod:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  004B                     ?___lmul:	
   445                           ; 2 bytes @ 0x0
   446                           
   447  004B                     ?___lldiv:	
   448                           ; 4 bytes @ 0x0
   449                           
   450  004B                     read_flash@adrs_lo:	
   451                           ; 4 bytes @ 0x0
   452                           
   453  004B                     write_flash@adr_lo:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  004B                     erase_flash@adr_lo:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  004B                     ___lwmod@divisor:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  004B                     ___lmul@multiplier:	
   463                           ; 2 bytes @ 0x0
   464                           
   465  004B                     ___lldiv@divisor:	
   466                           ; 4 bytes @ 0x0
   467                           
   468                           
   469                           ; 4 bytes @ 0x0
   470  004B                     	ds	1
   471  004C                     ??_read_flash:	
   472  004C                     ??_erase_flash:	
   473                           ; 0 bytes @ 0x1
   474                           
   475  004C                     read_flash@adrs_hi:	
   476                           ; 0 bytes @ 0x1
   477                           
   478  004C                     write_flash@data_lo:	
   479                           ; 1 bytes @ 0x1
   480                           
   481                           
   482                           ; 1 bytes @ 0x1
   483  004C                     	ds	1
   484  004D                     ??_write_flash:	
   485  004D                     ___lwmod@dividend:	
   486                           ; 0 bytes @ 0x2
   487                           
   488                           
   489                           ; 2 bytes @ 0x2
   490  004D                     	ds	1
   491  004E                     erase_flash@adr_hi:	
   492                           
   493                           ; 1 bytes @ 0x3
   494  004E                     	ds	1
   495  004F                     ??___lwmod:	
   496  004F                     write_flash@adr_hi:	
   497                           ; 0 bytes @ 0x4
   498                           
   499  004F                     ___lmul@multiplicand:	
   500                           ; 1 bytes @ 0x4
   501                           
   502  004F                     ___lldiv@dividend:	
   503                           ; 4 bytes @ 0x4
   504                           
   505                           
   506                           ; 4 bytes @ 0x4
   507  004F                     	ds	1
   508  0050                     ___lwmod@counter:	
   509                           
   510                           ; 1 bytes @ 0x5
   511  0050                     	ds	1
   512  0051                     ?___lwdiv:	
   513  0051                     ___lwdiv@divisor:	
   514                           ; 2 bytes @ 0x6
   515                           
   516                           
   517                           ; 2 bytes @ 0x6
   518  0051                     	ds	2
   519  0053                     ??___lmul:	
   520  0053                     ??___lldiv:	
   521                           ; 0 bytes @ 0x8
   522                           
   523  0053                     ___lwdiv@dividend:	
   524                           ; 0 bytes @ 0x8
   525                           
   526  0053                     ___lmul@product:	
   527                           ; 2 bytes @ 0x8
   528                           
   529                           
   530                           ; 4 bytes @ 0x8
   531  0053                     	ds	1
   532  0054                     ___lldiv@quotient:	
   533                           
   534                           ; 4 bytes @ 0x9
   535  0054                     	ds	1
   536  0055                     ??___lwdiv:	
   537                           
   538                           ; 0 bytes @ 0xA
   539  0055                     	ds	1
   540  0056                     ___lwdiv@quotient:	
   541                           
   542                           ; 2 bytes @ 0xB
   543  0056                     	ds	2
   544  0058                     ___lldiv@counter:	
   545  0058                     ___lwdiv@counter:	
   546                           ; 1 bytes @ 0xD
   547                           
   548                           
   549                           ; 1 bytes @ 0xD
   550  0058                     	ds	1
   551  0059                     ?_wyswietl:	
   552  0059                     wyswietl@liczba:	
   553                           ; 0 bytes @ 0xE
   554                           
   555                           
   556                           ; 2 bytes @ 0xE
   557  0059                     	ds	2
   558  005B                     ??_wyswietl:	
   559                           
   560                           ; 0 bytes @ 0x10
   561  005B                     	ds	1
   562  005C                     ?_main:	
   563  005C                     main@argc:	
   564                           ; 2 bytes @ 0x11
   565                           
   566                           
   567                           ; 2 bytes @ 0x11
   568  005C                     	ds	2
   569  005E                     main@argv:	
   570                           
   571                           ; 2 bytes @ 0x13
   572  005E                     	ds	2
   573  0060                     main@tmp:	
   574                           
   575                           ; 1 bytes @ 0x15
   576  0060                     	ds	1
   577  0061                     main@liczba_tmp:	
   578                           
   579                           ; 2 bytes @ 0x16
   580  0061                     	ds	2
   581                           
   582                           	psect	maintext
   583  011A                     __pmaintext:	
   584 ;;
   585 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   586 ;;
   587 ;; *************** function _main *****************
   588 ;; Defined at:
   589 ;;		line 159 in file "main.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;  argc            2   17[BANK0 ] int 
   592 ;;  argv            2   19[BANK0 ] PTR PTR unsigned char 
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  tmp             1   21[BANK0 ] unsigned char 
   595 ;;  liczba_tmp      2   22[BANK0 ] volatile unsigned int 
   596 ;; Return value:  Size  Location     Type
   597 ;;                  2   17[BANK0 ] int 
   598 ;; Registers used:
   599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : B1F/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   605 ;;      Params:         0       4       0       0       0       0       0       0
   606 ;;      Locals:         0       3       0       0       0       0       0       0
   607 ;;      Temps:          0       0       4       0       0       0       0       0
   608 ;;      Totals:         0       7       4       0       0       0       0       0
   609 ;;Total ram usage:       11 bytes
   610 ;; Hardware stack levels required when called:    3
   611 ;; This function calls:
   612 ;;		___lldiv
   613 ;;		___lmul
   614 ;;		_erase_flash
   615 ;;		_read_flash
   616 ;;		_write_flash
   617 ;;		_wyswietl
   618 ;; This function is called by:
   619 ;;		Startup code after reset
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           
   624                           ;psect for function _main
   625  011A                     _main:	
   626                           
   627                           ;main.c: 162: OSCCONbits.IRCF0 = 0;
   628                           
   629                           ;incstack = 0
   630                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   631  011A  0021               	movlb	1	; select bank1
   632  011B  1199               	bcf	25,3	;volatile
   633                           
   634                           ;main.c: 163: OSCCONbits.IRCF1 = 1;
   635  011C  1619               	bsf	25,4	;volatile
   636                           
   637                           ;main.c: 164: OSCCONbits.IRCF2 = 1;
   638  011D  1699               	bsf	25,5	;volatile
   639                           
   640                           ;main.c: 165: OSCCONbits.IRCF3 = 1;
   641  011E  1719               	bsf	25,6	;volatile
   642                           
   643                           ;main.c: 169: WDTCONbits.WDTPS0=0;
   644  011F  1097               	bcf	23,1	;volatile
   645                           
   646                           ;main.c: 170: WDTCONbits.WDTPS1=0;
   647  0120  1117               	bcf	23,2	;volatile
   648                           
   649                           ;main.c: 171: WDTCONbits.WDTPS2=1;
   650  0121  1597               	bsf	23,3	;volatile
   651                           
   652                           ;main.c: 172: WDTCONbits.WDTPS3=1;
   653  0122  1617               	bsf	23,4	;volatile
   654                           
   655                           ;main.c: 173: WDTCONbits.WDTPS4=0;
   656  0123  1297               	bcf	23,5	;volatile
   657                           
   658                           ;main.c: 177: OPTION_REGbits.PS0=0;
   659  0124  1015               	bcf	21,0	;volatile
   660                           
   661                           ;main.c: 178: OPTION_REGbits.PS1=1;
   662  0125  1495               	bsf	21,1	;volatile
   663                           
   664                           ;main.c: 179: OPTION_REGbits.PS2=0;
   665  0126  1115               	bcf	21,2	;volatile
   666                           
   667                           ;main.c: 180: OPTION_REGbits.TMR0CS = 0;
   668  0127  1295               	bcf	21,5	;volatile
   669                           
   670                           ;main.c: 181: OPTION_REGbits.PSA = 0;
   671  0128  1195               	bcf	21,3	;volatile
   672                           
   673                           ;main.c: 183: INTCONbits.TMR0IE = 1;
   674  0129  168B               	bsf	11,5	;volatile
   675                           
   676                           ;main.c: 184: INTCONbits.GIE = 1;
   677  012A  178B               	bsf	11,7	;volatile
   678                           
   679                           ;main.c: 191: ANSELAbits.ANSA0 = 0;
   680  012B  0023               	movlb	3	; select bank3
   681  012C  100C               	bcf	12,0	;volatile
   682                           
   683                           ;main.c: 192: ANSELAbits.ANSA1 = 0;
   684  012D  108C               	bcf	12,1	;volatile
   685                           
   686                           ;main.c: 193: ANSELAbits.ANSA2 = 0;
   687  012E  110C               	bcf	12,2	;volatile
   688                           
   689                           ;main.c: 194: ANSELAbits.ANSA3 = 0;
   690  012F  118C               	bcf	12,3	;volatile
   691                           
   692                           ;main.c: 195: ANSELAbits.ANSA5 = 0;
   693  0130  128C               	bcf	12,5	;volatile
   694                           
   695                           ;main.c: 198: TRISAbits.TRISA0 = 0;
   696  0131  0021               	movlb	1	; select bank1
   697  0132  100C               	bcf	12,0	;volatile
   698                           
   699                           ;main.c: 199: TRISAbits.TRISA1 = 0;
   700  0133  108C               	bcf	12,1	;volatile
   701                           
   702                           ;main.c: 200: TRISAbits.TRISA2 = 0;
   703  0134  110C               	bcf	12,2	;volatile
   704                           
   705                           ;main.c: 201: TRISAbits.TRISA3 = 0;
   706  0135  118C               	bcf	12,3	;volatile
   707                           
   708                           ;main.c: 202: TRISAbits.TRISA4 = 0;
   709  0136  120C               	bcf	12,4	;volatile
   710                           
   711                           ;main.c: 203: TRISAbits.TRISA5 = 0;
   712  0137  128C               	bcf	12,5	;volatile
   713                           
   714                           ;main.c: 204: TRISAbits.TRISA6 = 0;
   715  0138  130C               	bcf	12,6	;volatile
   716                           
   717                           ;main.c: 205: TRISAbits.TRISA7 = 0;
   718  0139  138C               	bcf	12,7	;volatile
   719                           
   720                           ;main.c: 208: LATAbits.LATA0 = 0;
   721  013A  0022               	movlb	2	; select bank2
   722  013B  100C               	bcf	12,0	;volatile
   723                           
   724                           ;main.c: 209: LATAbits.LATA1 = 0;
   725  013C  108C               	bcf	12,1	;volatile
   726                           
   727                           ;main.c: 210: LATAbits.LATA2 = 0;
   728  013D  110C               	bcf	12,2	;volatile
   729                           
   730                           ;main.c: 211: LATAbits.LATA3 = 0;
   731  013E  118C               	bcf	12,3	;volatile
   732                           
   733                           ;main.c: 212: LATAbits.LATA4 = 0;
   734  013F  120C               	bcf	12,4	;volatile
   735                           
   736                           ;main.c: 213: LATAbits.LATA5 = 0;
   737  0140  128C               	bcf	12,5	;volatile
   738                           
   739                           ;main.c: 214: LATAbits.LATA6 = 0;
   740  0141  130C               	bcf	12,6	;volatile
   741                           
   742                           ;main.c: 215: LATAbits.LATA7 = 0;
   743  0142  138C               	bcf	12,7	;volatile
   744                           
   745                           ;main.c: 220: ANSELBbits.ANSB0 = 0;
   746  0143  0023               	movlb	3	; select bank3
   747  0144  100D               	bcf	13,0	;volatile
   748                           
   749                           ;main.c: 221: ANSELBbits.ANSB1 = 0;
   750  0145  108D               	bcf	13,1	;volatile
   751                           
   752                           ;main.c: 224: TRISBbits.TRISB0 = 0;
   753  0146  0021               	movlb	1	; select bank1
   754  0147  100D               	bcf	13,0	;volatile
   755                           
   756                           ;main.c: 225: TRISBbits.TRISB1 = 0;
   757  0148  108D               	bcf	13,1	;volatile
   758                           
   759                           ;main.c: 227: LATBbits.LATB0 = 0;
   760  0149  0022               	movlb	2	; select bank2
   761  014A  100D               	bcf	13,0	;volatile
   762                           
   763                           ;main.c: 228: LATBbits.LATB1 = 0;
   764  014B  108D               	bcf	13,1	;volatile
   765                           
   766                           ;main.c: 232: ANSELBbits.ANSB2 = 0;
   767  014C  0023               	movlb	3	; select bank3
   768  014D  110D               	bcf	13,2	;volatile
   769                           
   770                           ;main.c: 233: ANSELBbits.ANSB3 = 0;
   771  014E  118D               	bcf	13,3	;volatile
   772                           
   773                           ;main.c: 234: ANSELBbits.ANSB4 = 0;
   774  014F  120D               	bcf	13,4	;volatile
   775                           
   776                           ;main.c: 235: ANSELBbits.ANSB5 = 0;
   777  0150  128D               	bcf	13,5	;volatile
   778                           
   779                           ;main.c: 237: TRISBbits.TRISB4 = 0;
   780  0151  0021               	movlb	1	; select bank1
   781  0152  120D               	bcf	13,4	;volatile
   782                           
   783                           ;main.c: 240: TRISBbits.TRISB2 = 1;
   784  0153  150D               	bsf	13,2	;volatile
   785                           
   786                           ;main.c: 241: TRISBbits.TRISB3 = 1;
   787  0154  158D               	bsf	13,3	;volatile
   788                           
   789                           ;main.c: 242: TRISBbits.TRISB4 = 1;
   790  0155  160D               	bsf	13,4	;volatile
   791                           
   792                           ;main.c: 243: TRISBbits.TRISB5 = 1;
   793  0156  168D               	bsf	13,5	;volatile
   794                           
   795                           ;main.c: 244: TRISBbits.TRISB6 = 1;
   796  0157  170D               	bsf	13,6	;volatile
   797                           
   798                           ;main.c: 245: TRISBbits.TRISB7 = 1;
   799  0158  178D               	bsf	13,7	;volatile
   800                           
   801                           ;main.c: 248: OPTION_REGbits.nWPUEN = 0;
   802  0159  1395               	bcf	21,7	;volatile
   803                           
   804                           ;main.c: 249: WPUBbits.WPUB3 = 1;
   805  015A  0024               	movlb	4	; select bank4
   806  015B  158D               	bsf	13,3	;volatile
   807                           
   808                           ;main.c: 250: WPUBbits.WPUB4 = 1;
   809  015C  160D               	bsf	13,4	;volatile
   810                           
   811                           ;main.c: 254: TRISC = 0;
   812  015D  0021               	movlb	1	; select bank1
   813  015E  018E               	clrf	14	;volatile
   814                           
   815                           ;main.c: 255: LATC = 0;
   816  015F  0022               	movlb	2	; select bank2
   817  0160  018E               	clrf	14	;volatile
   818                           
   819                           ;main.c: 256: ANSELC = 0;
   820  0161  0023               	movlb	3	; select bank3
   821  0162  018E               	clrf	14	;volatile
   822                           
   823                           ;main.c: 259: ANSELAbits.ANSA5 = 0;
   824  0163  128C               	bcf	12,5	;volatile
   825                           
   826                           ;main.c: 260: TRISAbits.TRISA5 = 0;
   827  0164  0021               	movlb	1	; select bank1
   828  0165  128C               	bcf	12,5	;volatile
   829                           
   830                           ;main.c: 261: LATAbits.LATA5 = 0;
   831  0166  0022               	movlb	2	; select bank2
   832  0167  128C               	bcf	12,5	;volatile
   833                           
   834                           ;main.c: 264: FVRCONbits.TSEN = 1;
   835  0168  1697               	bsf	23,5	;volatile
   836                           
   837                           ;main.c: 265: FVRCONbits.FVREN = 0;
   838  0169  1397               	bcf	23,7	;volatile
   839                           
   840                           ;main.c: 266: FVRCONbits.TSRNG = 1;
   841  016A  1617               	bsf	23,4	;volatile
   842                           
   843                           ;main.c: 268: ADCON0bits.ADON = 1;
   844  016B  0021               	movlb	1	; select bank1
   845  016C  141D               	bsf	29,0	;volatile
   846                           
   847                           ;main.c: 269: ADCON0bits.CHS = 0b11110;
   848  016D  081D               	movf	29,w	;volatile
   849  016E  3983               	andlw	-125
   850  016F  3878               	iorlw	120
   851  0170  009D               	movwf	29	;volatile
   852                           
   853                           ;main.c: 270: ADCON1 |= 0b10000000;
   854  0171  179E               	bsf	30,7	;volatile
   855                           
   856                           ;main.c: 273: x=0;
   857  0172  0020               	movlb	0	; select bank0
   858  0173  01CA               	clrf	_x	;volatile
   859                           
   860                           ;main.c: 274: flaga_temp = 0;
   861  0174  01BE               	clrf	_flaga_temp	;volatile
   862                           
   863                           ;main.c: 276: cyf_1 = 0;
   864  0175  01E9               	clrf	_cyf_1	;volatile
   865                           
   866                           ;main.c: 277: cyf_2 = 0;
   867  0176  01EA               	clrf	_cyf_2	;volatile
   868                           
   869                           ;main.c: 278: cyf_3 = 0;
   870  0177  01BB               	clrf	_cyf_3	;volatile
   871                           
   872                           ;main.c: 279: kro_1 = 0;
   873  0178  0021               	movlb	1	; select bank1
   874  0179  01AC               	clrf	_kro_1^(0+128)	;volatile
   875                           
   876                           ;main.c: 280: kro_2 = 0;
   877  017A  01AD               	clrf	_kro_2^(0+128)	;volatile
   878                           
   879                           ;main.c: 281: kro_3 = 0;
   880  017B  0020               	movlb	0	; select bank0
   881  017C  01C4               	clrf	_kro_3	;volatile
   882                           
   883                           ;main.c: 283: timer5 = 5000;
   884  017D  3000               	movlw	0
   885  017E  00E6               	movwf	_timer5+3	;volatile
   886  017F  3000               	movlw	0
   887  0180  00E5               	movwf	_timer5+2	;volatile
   888  0181  3013               	movlw	19
   889  0182  00E4               	movwf	_timer5+1	;volatile
   890  0183  3088               	movlw	136
   891  0184  00E3               	movwf	_timer5	;volatile
   892                           
   893                           ;main.c: 285: START = 0;
   894  0185  01B6               	clrf	_START	;volatile
   895                           
   896                           ;main.c: 286: czas_s_reset = 15;
   897  0186  300F               	movlw	15
   898  0187  00E7               	movwf	_czas_s_reset	;volatile
   899  0188  3000               	movlw	0
   900  0189  00E8               	movwf	_czas_s_reset+1	;volatile
   901                           
   902                           ;main.c: 290: grzalka_numer = 1;
   903  018A  3001               	movlw	1
   904  018B  0021               	movlb	1	; select bank1
   905  018C  00A8               	movwf	??_main^(0+128)
   906  018D  0828               	movf	??_main^(0+128),w
   907  018E  0020               	movlb	0	; select bank0
   908  018F  00EB               	movwf	_grzalka_numer	;volatile
   909                           
   910                           ;main.c: 291: START_Fl = 0;
   911  0190  01B7               	clrf	_START_Fl	;volatile
   912                           
   913                           ;main.c: 294: cyf_1 = 14;
   914  0191  300E               	movlw	14
   915  0192  0021               	movlb	1	; select bank1
   916  0193  00A8               	movwf	??_main^(0+128)
   917  0194  0828               	movf	??_main^(0+128),w
   918  0195  0020               	movlb	0	; select bank0
   919  0196  00E9               	movwf	_cyf_1	;volatile
   920                           
   921                           ;main.c: 295: cyf_2 = 14;
   922  0197  300E               	movlw	14
   923  0198  0021               	movlb	1	; select bank1
   924  0199  00A8               	movwf	??_main^(0+128)
   925  019A  0828               	movf	??_main^(0+128),w
   926  019B  0020               	movlb	0	; select bank0
   927  019C  00EA               	movwf	_cyf_2	;volatile
   928                           
   929                           ;main.c: 296: kro_1 = 1;
   930  019D  3001               	movlw	1
   931  019E  0021               	movlb	1	; select bank1
   932  019F  00A8               	movwf	??_main^(0+128)
   933  01A0  0828               	movf	??_main^(0+128),w
   934  01A1  00AC               	movwf	_kro_1^(0+128)	;volatile
   935                           
   936                           ;main.c: 297: kro_2 = 1;
   937  01A2  3001               	movlw	1
   938  01A3  00A8               	movwf	??_main^(0+128)
   939  01A4  0828               	movf	??_main^(0+128),w
   940  01A5  00AD               	movwf	_kro_2^(0+128)	;volatile
   941                           
   942                           ;main.c: 298: _delay((unsigned long)((1000)*(8000000/4000.0)));
   943  01A6  300B               	movlw	11
   944  01A7  00AA               	movwf	(??_main^(0+128)+2)
   945  01A8  3026               	movlw	38
   946  01A9  00A9               	movwf	(??_main^(0+128)+1)
   947  01AA  3066               	movlw	102
   948  01AB  00A8               	movwf	??_main^(0+128)
   949  01AC                     u2627:	
   950  01AC  0BA8               	decfsz	??_main^(0+128),f
   951  01AD  29AC               	goto	u2627
   952  01AE  0BA9               	decfsz	(??_main^(0+128)+1),f
   953  01AF  29AC               	goto	u2627
   954  01B0  0BAA               	decfsz	(??_main^(0+128)+2),f
   955  01B1  29AC               	goto	u2627
   956  01B2  3200               	nop2
   957                           
   958                           ;main.c: 300: flash_low = read_flash(adr_hi, adr_low);
   959  01B3  0020               	movlb	0	; select bank0
   960  01B4  086D               	movf	_adr_low,w	;volatile
   961  01B5  0021               	movlb	1	; select bank1
   962  01B6  00A8               	movwf	??_main^(0+128)
   963  01B7  0828               	movf	??_main^(0+128),w
   964  01B8  0020               	movlb	0	; select bank0
   965  01B9  00CB               	movwf	read_flash@adrs_lo
   966  01BA  086C               	movf	_adr_hi,w	;volatile
   967  01BB  3186  26DB  3181   	fcall	_read_flash
   968  01BE  0021               	movlb	1	; select bank1
   969  01BF  00A9               	movwf	(??_main+1)^(0+128)
   970  01C0  0829               	movf	(??_main+1)^(0+128),w
   971  01C1  0020               	movlb	0	; select bank0
   972  01C2  00C0               	movwf	_flash_low	;volatile
   973                           
   974                           ;main.c: 301: flash_hi = (read_flash(adr_hi, adr_low2) & 0x3fff );
   975  01C3  086E               	movf	_adr_low2,w	;volatile
   976  01C4  0021               	movlb	1	; select bank1
   977  01C5  00A8               	movwf	??_main^(0+128)
   978  01C6  0828               	movf	??_main^(0+128),w
   979  01C7  0020               	movlb	0	; select bank0
   980  01C8  00CB               	movwf	read_flash@adrs_lo
   981  01C9  086C               	movf	_adr_hi,w	;volatile
   982  01CA  3186  26DB  3181   	fcall	_read_flash
   983  01CD  0021               	movlb	1	; select bank1
   984  01CE  00A9               	movwf	(??_main+1)^(0+128)
   985  01CF  0829               	movf	(??_main+1)^(0+128),w
   986  01D0  0020               	movlb	0	; select bank0
   987  01D1  00BF               	movwf	_flash_hi	;volatile
   988                           
   989                           ;main.c: 303: flash_moc = read_flash(adr_hi, adr_moc);
   990  01D2  086F               	movf	_adr_moc,w	;volatile
   991  01D3  0021               	movlb	1	; select bank1
   992  01D4  00A8               	movwf	??_main^(0+128)
   993  01D5  0828               	movf	??_main^(0+128),w
   994  01D6  0020               	movlb	0	; select bank0
   995  01D7  00CB               	movwf	read_flash@adrs_lo
   996  01D8  086C               	movf	_adr_hi,w	;volatile
   997  01D9  3186  26DB  3181   	fcall	_read_flash
   998  01DC  0021               	movlb	1	; select bank1
   999  01DD  00A9               	movwf	(??_main+1)^(0+128)
  1000  01DE  0829               	movf	(??_main+1)^(0+128),w
  1001  01DF  0020               	movlb	0	; select bank0
  1002  01E0  00C1               	movwf	_flash_moc	;volatile
  1003                           
  1004                           ;main.c: 304: if (flash_moc!=166) {
  1005  01E1  30A6               	movlw	166
  1006  01E2  0641               	xorwf	_flash_moc,w	;volatile
  1007  01E3  1903               	btfsc	3,2
  1008  01E4  29E8               	goto	l1963
  1009                           
  1010                           ;main.c: 305: moc = 0;
  1011  01E5  01C6               	clrf	_moc	;volatile
  1012                           
  1013                           ;main.c: 306: flash_moc = 0;
  1014  01E6  01C1               	clrf	_flash_moc	;volatile
  1015                           
  1016                           ;main.c: 307: }else{
  1017  01E7  29EE               	goto	l1965
  1018  01E8                     l1963:	
  1019                           
  1020                           ;main.c: 308: moc=166;
  1021  01E8  30A6               	movlw	166
  1022  01E9  0021               	movlb	1	; select bank1
  1023  01EA  00A8               	movwf	??_main^(0+128)
  1024  01EB  0828               	movf	??_main^(0+128),w
  1025  01EC  0020               	movlb	0	; select bank0
  1026  01ED  00C6               	movwf	_moc	;volatile
  1027  01EE                     l1965:	
  1028                           
  1029                           ;main.c: 309: }
  1030                           ;main.c: 313: if ( (flash_low == 0xFF) && (flash_hi == 0xFF)) {
  1031  01EE  0A40               	incf	_flash_low,w	;volatile
  1032  01EF  1D03               	btfss	3,2
  1033  01F0  29F9               	goto	l1971
  1034  01F1  0A3F               	incf	_flash_hi,w	;volatile
  1035  01F2  1D03               	btfss	3,2
  1036  01F3  29F9               	goto	l1971
  1037                           
  1038                           ;main.c: 314: flash_low = 0;
  1039  01F4  01C0               	clrf	_flash_low	;volatile
  1040                           
  1041                           ;main.c: 315: flash_hi = 0;
  1042  01F5  01BF               	clrf	_flash_hi	;volatile
  1043                           
  1044                           ;main.c: 316: czas_flash = 0;
  1045  01F6  01A6               	clrf	_czas_flash	;volatile
  1046  01F7  01A7               	clrf	_czas_flash+1	;volatile
  1047                           
  1048                           ;main.c: 317: }else{
  1049  01F8  2A1E               	goto	l1973
  1050  01F9                     l1971:	
  1051                           
  1052                           ;main.c: 318: czas_s = flash_hi ;
  1053  01F9  083F               	movf	_flash_hi,w	;volatile
  1054  01FA  0021               	movlb	1	; select bank1
  1055  01FB  00A8               	movwf	??_main^(0+128)
  1056  01FC  01A9               	clrf	(??_main^(0+128)+1)
  1057  01FD  0828               	movf	??_main^(0+128),w
  1058  01FE  0020               	movlb	0	; select bank0
  1059  01FF  00A8               	movwf	_czas_s	;volatile
  1060  0200  0021               	movlb	1	; select bank1
  1061  0201  0829               	movf	(??_main+1)^(0+128),w
  1062  0202  0020               	movlb	0	; select bank0
  1063  0203  00A9               	movwf	_czas_s+1	;volatile
  1064                           
  1065                           ;main.c: 319: czas_s = (czas_s<<8);
  1066  0204  0828               	movf	_czas_s,w	;volatile
  1067  0205  0021               	movlb	1	; select bank1
  1068  0206  00A9               	movwf	(??_main^(0+128)+1)
  1069  0207  01A8               	clrf	??_main^(0+128)
  1070  0208  0828               	movf	??_main^(0+128),w
  1071  0209  0020               	movlb	0	; select bank0
  1072  020A  00A8               	movwf	_czas_s	;volatile
  1073  020B  0021               	movlb	1	; select bank1
  1074  020C  0829               	movf	(??_main+1)^(0+128),w
  1075  020D  0020               	movlb	0	; select bank0
  1076  020E  00A9               	movwf	_czas_s+1	;volatile
  1077                           
  1078                           ;main.c: 320: czas_s|= flash_low;
  1079  020F  0840               	movf	_flash_low,w	;volatile
  1080  0210  0021               	movlb	1	; select bank1
  1081  0211  00A8               	movwf	??_main^(0+128)
  1082  0212  01A9               	clrf	(??_main^(0+128)+1)
  1083  0213  0828               	movf	??_main^(0+128),w
  1084  0214  0020               	movlb	0	; select bank0
  1085  0215  04A8               	iorwf	_czas_s,f	;volatile
  1086  0216  0021               	movlb	1	; select bank1
  1087  0217  0829               	movf	(??_main+1)^(0+128),w
  1088  0218  0020               	movlb	0	; select bank0
  1089  0219  04A9               	iorwf	_czas_s+1,f	;volatile
  1090                           
  1091                           ;main.c: 323: czas_flash = czas_s;
  1092  021A  0829               	movf	_czas_s+1,w	;volatile
  1093  021B  00A7               	movwf	_czas_flash+1	;volatile
  1094  021C  0828               	movf	_czas_s,w	;volatile
  1095  021D  00A6               	movwf	_czas_flash	;volatile
  1096  021E                     l1973:	
  1097                           
  1098                           ;main.c: 324: }
  1099                           ;main.c: 327: if (czas_s == 0) {
  1100  021E  0828               	movf	_czas_s,w	;volatile
  1101  021F  0429               	iorwf	_czas_s+1,w	;volatile
  1102  0220  1D03               	btfss	3,2
  1103  0221  2A26               	goto	l176
  1104                           
  1105                           ;main.c: 328: czas_s = czas_s_reset;
  1106  0222  0868               	movf	_czas_s_reset+1,w	;volatile
  1107  0223  00A9               	movwf	_czas_s+1	;volatile
  1108  0224  0867               	movf	_czas_s_reset,w	;volatile
  1109  0225  00A8               	movwf	_czas_s	;volatile
  1110  0226                     l176:	
  1111                           ;main.c: 329: }
  1112                           ;main.c: 331: while(1){
  1113                           
  1114                           
  1115                           ;main.c: 334: if (czas_s > 1800) {
  1116  0226  3007               	movlw	7
  1117  0227  0020               	movlb	0	; select bank0
  1118  0228  0229               	subwf	_czas_s+1,w	;volatile
  1119  0229  3009               	movlw	9
  1120  022A  1903               	skipnz
  1121  022B  0228               	subwf	_czas_s,w	;volatile
  1122  022C  1C03               	skipc
  1123  022D  2A32               	goto	l1979
  1124                           
  1125                           ;main.c: 335: czas_s = 1800;
  1126  022E  3008               	movlw	8
  1127  022F  00A8               	movwf	_czas_s	;volatile
  1128  0230  3007               	movlw	7
  1129  0231  00A9               	movwf	_czas_s+1	;volatile
  1130  0232                     l1979:	
  1131                           
  1132                           ;main.c: 336: }
  1133                           ;main.c: 337: if (czas_s < 1) {
  1134  0232  0828               	movf	_czas_s,w	;volatile
  1135  0233  0429               	iorwf	_czas_s+1,w	;volatile
  1136  0234  1D03               	btfss	3,2
  1137  0235  2A3A               	goto	l1983
  1138                           
  1139                           ;main.c: 338: czas_s = 1;
  1140  0236  3001               	movlw	1
  1141  0237  00A8               	movwf	_czas_s	;volatile
  1142  0238  3000               	movlw	0
  1143  0239  00A9               	movwf	_czas_s+1	;volatile
  1144  023A                     l1983:	
  1145                           
  1146                           ;main.c: 339: }
  1147                           ;main.c: 342: if ( (PORTBbits.RB3 == 0) && (PORTBbits.RB4 == 1 ) && ( START == 0 )){
  1148  023A  1D8D               	btfss	13,3	;volatile
  1149  023B  1E0D               	btfss	13,4	;volatile
  1150  023C  2A5E               	goto	l1999
  1151  023D  0836               	movf	_START,w	;volatile
  1152  023E  1D03               	btfss	3,2
  1153  023F  2A5E               	goto	l1999
  1154                           
  1155                           ;main.c: 343: if (przycisk_plus_flag == 0 ){
  1156  0240  0848               	movf	_przycisk_plus_flag,w	;volatile
  1157  0241  1D03               	btfss	3,2
  1158  0242  2A4D               	goto	l1993
  1159                           
  1160                           ;main.c: 344: _delay((unsigned long)((50)*(8000000/4000.0)));
  1161  0243  3082               	movlw	130
  1162  0244  0021               	movlb	1	; select bank1
  1163  0245  00A9               	movwf	(??_main^(0+128)+1)
  1164  0246  30DD               	movlw	221
  1165  0247  00A8               	movwf	??_main^(0+128)
  1166  0248                     u2637:	
  1167  0248  0BA8               	decfsz	??_main^(0+128),f
  1168  0249  2A48               	goto	u2637
  1169  024A  0BA9               	decfsz	(??_main^(0+128)+1),f
  1170  024B  2A48               	goto	u2637
  1171  024C  3200               	nop2
  1172  024D                     l1993:	
  1173                           
  1174                           ;main.c: 345: }
  1175                           ;main.c: 346: if ( (PORTBbits.RB3 == 0) && (przycisk_plus_flag == 0) ) {
  1176  024D  0020               	movlb	0	; select bank0
  1177  024E  198D               	btfsc	13,3	;volatile
  1178  024F  2A63               	goto	l2003
  1179  0250  0848               	movf	_przycisk_plus_flag,w	;volatile
  1180  0251  1D03               	btfss	3,2
  1181  0252  2A63               	goto	l2003
  1182                           
  1183                           ;main.c: 347: czas_s++;
  1184  0253  3001               	movlw	1
  1185  0254  07A8               	addwf	_czas_s,f	;volatile
  1186  0255  3000               	movlw	0
  1187  0256  3DA9               	addwfc	_czas_s+1,f	;volatile
  1188                           
  1189                           ;main.c: 348: przycisk_plus_flag = 1;
  1190  0257  3001               	movlw	1
  1191  0258  0021               	movlb	1	; select bank1
  1192  0259  00A8               	movwf	??_main^(0+128)
  1193  025A  0828               	movf	??_main^(0+128),w
  1194  025B  0020               	movlb	0	; select bank0
  1195  025C  00C8               	movwf	_przycisk_plus_flag	;volatile
  1196                           
  1197                           ;main.c: 349: }
  1198                           ;main.c: 350: }else{
  1199  025D  2A63               	goto	l2003
  1200  025E                     l1999:	
  1201                           
  1202                           ;main.c: 351: przycisk_plus_flag = 0;
  1203  025E  01C8               	clrf	_przycisk_plus_flag	;volatile
  1204                           
  1205                           ;main.c: 352: timer1 = 1500;
  1206  025F  30DC               	movlw	220
  1207  0260  00AA               	movwf	_timer1	;volatile
  1208  0261  3005               	movlw	5
  1209  0262  00AB               	movwf	_timer1+1	;volatile
  1210  0263                     l2003:	
  1211                           
  1212                           ;main.c: 353: }
  1213                           ;main.c: 355: if ( (timer1 == 0) && (przycisk_plus_flag == 1) ) {
  1214  0263  082A               	movf	_timer1,w	;volatile
  1215  0264  042B               	iorwf	_timer1+1,w	;volatile
  1216  0265  1D03               	btfss	3,2
  1217  0266  2A78               	goto	l2009
  1218  0267  0348               	decf	_przycisk_plus_flag,w	;volatile
  1219  0268  1D03               	btfss	3,2
  1220  0269  2A78               	goto	l2009
  1221                           
  1222                           ;main.c: 356: czas_s++;
  1223  026A  3001               	movlw	1
  1224  026B  07A8               	addwf	_czas_s,f	;volatile
  1225  026C  3000               	movlw	0
  1226  026D  3DA9               	addwfc	_czas_s+1,f	;volatile
  1227                           
  1228                           ;main.c: 357: _delay((unsigned long)((10)*(8000000/4000.0)));
  1229  026E  301A               	movlw	26
  1230  026F  0021               	movlb	1	; select bank1
  1231  0270  00A9               	movwf	(??_main^(0+128)+1)
  1232  0271  30F8               	movlw	248
  1233  0272  00A8               	movwf	??_main^(0+128)
  1234  0273                     u2647:	
  1235  0273  0BA8               	decfsz	??_main^(0+128),f
  1236  0274  2A73               	goto	u2647
  1237  0275  0BA9               	decfsz	(??_main^(0+128)+1),f
  1238  0276  2A73               	goto	u2647
  1239  0277  0000               	nop
  1240  0278                     l2009:	
  1241                           
  1242                           ;main.c: 358: }
  1243                           ;main.c: 362: if ( (PORTBbits.RB3 == 1) && (PORTBbits.RB4 == 0 ) && ( START == 0 )){
  1244  0278  0020               	movlb	0	; select bank0
  1245  0279  198D               	btfsc	13,3	;volatile
  1246  027A  1A0D               	btfsc	13,4	;volatile
  1247  027B  2A9D               	goto	l2025
  1248  027C  0836               	movf	_START,w	;volatile
  1249  027D  1D03               	btfss	3,2
  1250  027E  2A9D               	goto	l2025
  1251                           
  1252                           ;main.c: 363: if (przycisk_minus_flag == 0 ){
  1253  027F  0847               	movf	_przycisk_minus_flag,w	;volatile
  1254  0280  1D03               	btfss	3,2
  1255  0281  2A8C               	goto	l2019
  1256                           
  1257                           ;main.c: 364: _delay((unsigned long)((50)*(8000000/4000.0)));
  1258  0282  3082               	movlw	130
  1259  0283  0021               	movlb	1	; select bank1
  1260  0284  00A9               	movwf	(??_main^(0+128)+1)
  1261  0285  30DD               	movlw	221
  1262  0286  00A8               	movwf	??_main^(0+128)
  1263  0287                     u2657:	
  1264  0287  0BA8               	decfsz	??_main^(0+128),f
  1265  0288  2A87               	goto	u2657
  1266  0289  0BA9               	decfsz	(??_main^(0+128)+1),f
  1267  028A  2A87               	goto	u2657
  1268  028B  3200               	nop2
  1269  028C                     l2019:	
  1270                           
  1271                           ;main.c: 365: }
  1272                           ;main.c: 366: if ( (PORTBbits.RB4 == 0) && (przycisk_minus_flag == 0) ) {
  1273  028C  0020               	movlb	0	; select bank0
  1274  028D  1A0D               	btfsc	13,4	;volatile
  1275  028E  2AA2               	goto	l2029
  1276  028F  0847               	movf	_przycisk_minus_flag,w	;volatile
  1277  0290  1D03               	btfss	3,2
  1278  0291  2AA2               	goto	l2029
  1279                           
  1280                           ;main.c: 367: czas_s--;
  1281  0292  3001               	movlw	1
  1282  0293  02A8               	subwf	_czas_s,f	;volatile
  1283  0294  3000               	movlw	0
  1284  0295  3BA9               	subwfb	_czas_s+1,f	;volatile
  1285                           
  1286                           ;main.c: 368: przycisk_minus_flag = 1;
  1287  0296  3001               	movlw	1
  1288  0297  0021               	movlb	1	; select bank1
  1289  0298  00A8               	movwf	??_main^(0+128)
  1290  0299  0828               	movf	??_main^(0+128),w
  1291  029A  0020               	movlb	0	; select bank0
  1292  029B  00C7               	movwf	_przycisk_minus_flag	;volatile
  1293                           
  1294                           ;main.c: 369: }
  1295                           ;main.c: 370: }else{
  1296  029C  2AA2               	goto	l2029
  1297  029D                     l2025:	
  1298                           
  1299                           ;main.c: 371: przycisk_minus_flag = 0;
  1300  029D  01C7               	clrf	_przycisk_minus_flag	;volatile
  1301                           
  1302                           ;main.c: 372: timer6 = 1500;
  1303  029E  30DC               	movlw	220
  1304  029F  00B0               	movwf	_timer6	;volatile
  1305  02A0  3005               	movlw	5
  1306  02A1  00B1               	movwf	_timer6+1	;volatile
  1307  02A2                     l2029:	
  1308                           
  1309                           ;main.c: 373: }
  1310                           ;main.c: 375: if ( (timer6 == 0) && (przycisk_minus_flag == 1) ) {
  1311  02A2  0830               	movf	_timer6,w	;volatile
  1312  02A3  0431               	iorwf	_timer6+1,w	;volatile
  1313  02A4  1D03               	btfss	3,2
  1314  02A5  2AB7               	goto	l2035
  1315  02A6  0347               	decf	_przycisk_minus_flag,w	;volatile
  1316  02A7  1D03               	btfss	3,2
  1317  02A8  2AB7               	goto	l2035
  1318                           
  1319                           ;main.c: 376: czas_s--;
  1320  02A9  3001               	movlw	1
  1321  02AA  02A8               	subwf	_czas_s,f	;volatile
  1322  02AB  3000               	movlw	0
  1323  02AC  3BA9               	subwfb	_czas_s+1,f	;volatile
  1324                           
  1325                           ;main.c: 377: _delay((unsigned long)((10)*(8000000/4000.0)));
  1326  02AD  301A               	movlw	26
  1327  02AE  0021               	movlb	1	; select bank1
  1328  02AF  00A9               	movwf	(??_main^(0+128)+1)
  1329  02B0  30F8               	movlw	248
  1330  02B1  00A8               	movwf	??_main^(0+128)
  1331  02B2                     u2667:	
  1332  02B2  0BA8               	decfsz	??_main^(0+128),f
  1333  02B3  2AB2               	goto	u2667
  1334  02B4  0BA9               	decfsz	(??_main^(0+128)+1),f
  1335  02B5  2AB2               	goto	u2667
  1336  02B6  0000               	nop
  1337  02B7                     l2035:	
  1338                           
  1339                           ;main.c: 378: }
  1340                           ;main.c: 382: if ( (PORTBbits.RB3 == 0) && (PORTBbits.RB4 == 0 ) && ( START == 0 )){
  1341  02B7  0020               	movlb	0	; select bank0
  1342  02B8  1D8D               	btfss	13,3	;volatile
  1343  02B9  1A0D               	btfsc	13,4	;volatile
  1344  02BA  2B01               	goto	l2049
  1345  02BB  0836               	movf	_START,w	;volatile
  1346  02BC  1D03               	btfss	3,2
  1347  02BD  2B01               	goto	l2049
  1348                           
  1349                           ;main.c: 383: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1350  02BE  300B               	movlw	11
  1351  02BF  0021               	movlb	1	; select bank1
  1352  02C0  00AA               	movwf	(??_main^(0+128)+2)
  1353  02C1  3026               	movlw	38
  1354  02C2  00A9               	movwf	(??_main^(0+128)+1)
  1355  02C3  3066               	movlw	102
  1356  02C4  00A8               	movwf	??_main^(0+128)
  1357  02C5                     u2677:	
  1358  02C5  0BA8               	decfsz	??_main^(0+128),f
  1359  02C6  2AC5               	goto	u2677
  1360  02C7  0BA9               	decfsz	(??_main^(0+128)+1),f
  1361  02C8  2AC5               	goto	u2677
  1362  02C9  0BAA               	decfsz	(??_main^(0+128)+2),f
  1363  02CA  2AC5               	goto	u2677
  1364  02CB  3200               	nop2
  1365  02CC  0064               	clrwdt	;# 
  1366                           
  1367                           ;main.c: 385: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1368  02CD  300B               	movlw	11
  1369  02CE  0021               	movlb	1	; select bank1
  1370  02CF  00AA               	movwf	(??_main^(0+128)+2)
  1371  02D0  3026               	movlw	38
  1372  02D1  00A9               	movwf	(??_main^(0+128)+1)
  1373  02D2  3066               	movlw	102
  1374  02D3  00A8               	movwf	??_main^(0+128)
  1375  02D4                     u2687:	
  1376  02D4  0BA8               	decfsz	??_main^(0+128),f
  1377  02D5  2AD4               	goto	u2687
  1378  02D6  0BA9               	decfsz	(??_main^(0+128)+1),f
  1379  02D7  2AD4               	goto	u2687
  1380  02D8  0BAA               	decfsz	(??_main^(0+128)+2),f
  1381  02D9  2AD4               	goto	u2687
  1382  02DA  3200               	nop2
  1383  02DB  0064               	clrwdt	;# 
  1384                           
  1385                           ;main.c: 387: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1386  02DC  300B               	movlw	11
  1387  02DD  0021               	movlb	1	; select bank1
  1388  02DE  00AA               	movwf	(??_main^(0+128)+2)
  1389  02DF  3026               	movlw	38
  1390  02E0  00A9               	movwf	(??_main^(0+128)+1)
  1391  02E1  3066               	movlw	102
  1392  02E2  00A8               	movwf	??_main^(0+128)
  1393  02E3                     u2697:	
  1394  02E3  0BA8               	decfsz	??_main^(0+128),f
  1395  02E4  2AE3               	goto	u2697
  1396  02E5  0BA9               	decfsz	(??_main^(0+128)+1),f
  1397  02E6  2AE3               	goto	u2697
  1398  02E7  0BAA               	decfsz	(??_main^(0+128)+2),f
  1399  02E8  2AE3               	goto	u2697
  1400  02E9  3200               	nop2
  1401  02EA  0064               	clrwdt	;# 
  1402                           
  1403                           ;main.c: 389: if ( (PORTBbits.RB3 == 0) && (PORTBbits.RB4 == 0 )){
  1404  02EB  0020               	movlb	0	; select bank0
  1405  02EC  1D8D               	btfss	13,3	;volatile
  1406  02ED  1A0D               	btfsc	13,4	;volatile
  1407  02EE  2AF3               	goto	l190
  1408                           
  1409                           ;main.c: 390: czas_s = czas_s_reset;
  1410  02EF  0868               	movf	_czas_s_reset+1,w	;volatile
  1411  02F0  00A9               	movwf	_czas_s+1	;volatile
  1412  02F1  0867               	movf	_czas_s_reset,w	;volatile
  1413  02F2  00A8               	movwf	_czas_s	;volatile
  1414  02F3                     l190:	
  1415                           
  1416                           ;main.c: 391: }
  1417                           ;main.c: 392: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1418  02F3  300B               	movlw	11
  1419  02F4  0021               	movlb	1	; select bank1
  1420  02F5  00AA               	movwf	(??_main^(0+128)+2)
  1421  02F6  3026               	movlw	38
  1422  02F7  00A9               	movwf	(??_main^(0+128)+1)
  1423  02F8  3066               	movlw	102
  1424  02F9  00A8               	movwf	??_main^(0+128)
  1425  02FA                     u2707:	
  1426  02FA  0BA8               	decfsz	??_main^(0+128),f
  1427  02FB  2AFA               	goto	u2707
  1428  02FC  0BA9               	decfsz	(??_main^(0+128)+1),f
  1429  02FD  2AFA               	goto	u2707
  1430  02FE  0BAA               	decfsz	(??_main^(0+128)+2),f
  1431  02FF  2AFA               	goto	u2707
  1432  0300  3200               	nop2
  1433  0301                     l2049:	
  1434                           
  1435                           ;main.c: 393: }
  1436                           ;main.c: 397: if ( (PORTBbits.RB5 == 0)) {
  1437  0301  0020               	movlb	0	; select bank0
  1438  0302  1A8D               	btfsc	13,5	;volatile
  1439  0303  2B19               	goto	l2061
  1440                           
  1441                           ;main.c: 398: if (timer8 == 0) {
  1442  0304  0834               	movf	_timer8,w	;volatile
  1443  0305  0435               	iorwf	_timer8+1,w	;volatile
  1444  0306  1D03               	btfss	3,2
  1445  0307  2B1D               	goto	l2063
  1446                           
  1447                           ;main.c: 399: timer8 = 10000;
  1448  0308  3010               	movlw	16
  1449  0309  00B4               	movwf	_timer8	;volatile
  1450  030A  3027               	movlw	39
  1451  030B  00B5               	movwf	_timer8+1	;volatile
  1452                           
  1453                           ;main.c: 400: if (moc == 166) {
  1454  030C  30A6               	movlw	166
  1455  030D  0646               	xorwf	_moc,w	;volatile
  1456  030E  1D03               	btfss	3,2
  1457  030F  2B12               	goto	l2059
  1458                           
  1459                           ;main.c: 401: moc = 0;
  1460  0310  01C6               	clrf	_moc	;volatile
  1461                           
  1462                           ;main.c: 402: }else{
  1463  0311  2B1D               	goto	l2063
  1464  0312                     l2059:	
  1465                           
  1466                           ;main.c: 403: moc = 166;
  1467  0312  30A6               	movlw	166
  1468  0313  0021               	movlb	1	; select bank1
  1469  0314  00A8               	movwf	??_main^(0+128)
  1470  0315  0828               	movf	??_main^(0+128),w
  1471  0316  0020               	movlb	0	; select bank0
  1472  0317  00C6               	movwf	_moc	;volatile
  1473                           
  1474                           ;main.c: 404: }
  1475                           ;main.c: 405: }
  1476                           ;main.c: 406: }else{
  1477  0318  2B1D               	goto	l2063
  1478  0319                     l2061:	
  1479                           
  1480                           ;main.c: 407: timer8 = 10000;
  1481  0319  3010               	movlw	16
  1482  031A  00B4               	movwf	_timer8	;volatile
  1483  031B  3027               	movlw	39
  1484  031C  00B5               	movwf	_timer8+1	;volatile
  1485  031D                     l2063:	
  1486                           
  1487                           ;main.c: 408: }
  1488                           ;main.c: 410: if (moc == 0) {
  1489  031D  0846               	movf	_moc,w	;volatile
  1490  031E  1D03               	btfss	3,2
  1491  031F  2B22               	goto	l2067
  1492                           
  1493                           ;main.c: 411: czas_przerwa_ms = 150;
  1494  0320  3096               	movlw	150
  1495  0321  2B23               	goto	L1
  1496  0322                     l2067:	
  1497                           ;main.c: 412: }else{
  1498                           
  1499                           
  1500                           ;main.c: 413: czas_przerwa_ms = 50;
  1501  0322  3032               	movlw	50
  1502  0323                     L1:	
  1503  0323  0021               	movlb	1	; select bank1
  1504  0324  00A8               	movwf	??_main^(0+128)
  1505  0325  0828               	movf	??_main^(0+128),w
  1506  0326  0020               	movlb	0	; select bank0
  1507  0327  00BD               	movwf	_czas_przerwa_ms	;volatile
  1508                           
  1509                           ;main.c: 414: }
  1510                           ;main.c: 421: if ( ( (czas_s!= czas_flash) || (flash_moc!= moc) ) && (PORTBbits.RB3 ==1)
      +                           && (PORTBbits.RB4 == 1) ) {
  1511  0328  0827               	movf	_czas_flash+1,w	;volatile
  1512  0329  0629               	xorwf	_czas_s+1,w	;volatile
  1513  032A  1D03               	skipz
  1514  032B  2B2E               	goto	u2425
  1515  032C  0826               	movf	_czas_flash,w	;volatile
  1516  032D  0628               	xorwf	_czas_s,w	;volatile
  1517  032E                     u2425:	
  1518  032E  1D03               	skipz
  1519  032F  2B34               	goto	l200
  1520  0330  0841               	movf	_flash_moc,w	;volatile
  1521  0331  0646               	xorwf	_moc,w	;volatile
  1522  0332  1903               	skipnz
  1523  0333  2BCD               	goto	l2103
  1524  0334                     l200:	
  1525  0334  198D               	btfsc	13,3	;volatile
  1526  0335  1E0D               	btfss	13,4	;volatile
  1527  0336  2BCD               	goto	l2103
  1528                           
  1529                           ;main.c: 423: if (timer7<4000) {
  1530  0337  300F               	movlw	15
  1531  0338  0233               	subwf	_timer7+1,w	;volatile
  1532  0339  30A0               	movlw	160
  1533  033A  1903               	skipnz
  1534  033B  0232               	subwf	_timer7,w	;volatile
  1535  033C  1803               	skipnc
  1536  033D  2B47               	goto	l2077
  1537                           
  1538                           ;main.c: 424: kro_1 = 1;
  1539  033E  3001               	movlw	1
  1540  033F  0021               	movlb	1	; select bank1
  1541  0340  00A8               	movwf	??_main^(0+128)
  1542  0341  0828               	movf	??_main^(0+128),w
  1543  0342  00AC               	movwf	_kro_1^(0+128)	;volatile
  1544                           
  1545                           ;main.c: 425: kro_2 = 1;
  1546  0343  3001               	movlw	1
  1547  0344  00A8               	movwf	??_main^(0+128)
  1548  0345  0828               	movf	??_main^(0+128),w
  1549  0346  00AD               	movwf	_kro_2^(0+128)	;volatile
  1550  0347                     l2077:	
  1551                           
  1552                           ;main.c: 426: }
  1553                           ;main.c: 429: if (timer7 == 0 ) {
  1554  0347  0020               	movlb	0	; select bank0
  1555  0348  0832               	movf	_timer7,w	;volatile
  1556  0349  0433               	iorwf	_timer7+1,w	;volatile
  1557  034A  1D03               	btfss	3,2
  1558  034B  2BD1               	goto	l2105
  1559                           
  1560                           ;main.c: 433: unsigned char tmp;
  1561                           ;main.c: 434: tmp = (czas_s & 0x00ff);
  1562  034C  0828               	movf	_czas_s,w	;volatile
  1563  034D  0021               	movlb	1	; select bank1
  1564  034E  00A8               	movwf	??_main^(0+128)
  1565  034F  0828               	movf	??_main^(0+128),w
  1566  0350  0020               	movlb	0	; select bank0
  1567  0351  00E0               	movwf	main@tmp
  1568                           
  1569                           ;main.c: 435: erase_flash(adr_hi, adr_low);
  1570  0352  086D               	movf	_adr_low,w	;volatile
  1571  0353  0021               	movlb	1	; select bank1
  1572  0354  00A8               	movwf	??_main^(0+128)
  1573  0355  0828               	movf	??_main^(0+128),w
  1574  0356  0020               	movlb	0	; select bank0
  1575  0357  00CB               	movwf	erase_flash@adr_lo
  1576  0358  086C               	movf	_adr_hi,w	;volatile
  1577  0359  3186  26BB  3181   	fcall	_erase_flash
  1578                           
  1579                           ;main.c: 436: write_flash(adr_hi, adr_low, tmp );
  1580  035C  0020               	movlb	0	; select bank0
  1581  035D  086D               	movf	_adr_low,w	;volatile
  1582  035E  0021               	movlb	1	; select bank1
  1583  035F  00A8               	movwf	??_main^(0+128)
  1584  0360  0828               	movf	??_main^(0+128),w
  1585  0361  0020               	movlb	0	; select bank0
  1586  0362  00CB               	movwf	write_flash@adr_lo
  1587  0363  0860               	movf	main@tmp,w
  1588  0364  0021               	movlb	1	; select bank1
  1589  0365  00A9               	movwf	(??_main+1)^(0+128)
  1590  0366  0829               	movf	(??_main+1)^(0+128),w
  1591  0367  0020               	movlb	0	; select bank0
  1592  0368  00CC               	movwf	write_flash@data_lo
  1593  0369  086C               	movf	_adr_hi,w	;volatile
  1594  036A  3186  2694  3181   	fcall	_write_flash
  1595                           
  1596                           ;main.c: 437: tmp = ((czas_s >>8)&0x00ff);
  1597  036D  0020               	movlb	0	; select bank0
  1598  036E  0829               	movf	_czas_s+1,w	;volatile
  1599  036F  0021               	movlb	1	; select bank1
  1600  0370  00A8               	movwf	??_main^(0+128)
  1601  0371  0828               	movf	??_main^(0+128),w
  1602  0372  0020               	movlb	0	; select bank0
  1603  0373  00E0               	movwf	main@tmp
  1604                           
  1605                           ;main.c: 438: write_flash(adr_hi, adr_low2, tmp);
  1606  0374  086E               	movf	_adr_low2,w	;volatile
  1607  0375  0021               	movlb	1	; select bank1
  1608  0376  00A8               	movwf	??_main^(0+128)
  1609  0377  0828               	movf	??_main^(0+128),w
  1610  0378  0020               	movlb	0	; select bank0
  1611  0379  00CB               	movwf	write_flash@adr_lo
  1612  037A  0860               	movf	main@tmp,w
  1613  037B  0021               	movlb	1	; select bank1
  1614  037C  00A9               	movwf	(??_main+1)^(0+128)
  1615  037D  0829               	movf	(??_main+1)^(0+128),w
  1616  037E  0020               	movlb	0	; select bank0
  1617  037F  00CC               	movwf	write_flash@data_lo
  1618  0380  086C               	movf	_adr_hi,w	;volatile
  1619  0381  3186  2694  3181   	fcall	_write_flash
  1620                           
  1621                           ;main.c: 440: write_flash(adr_hi, adr_moc, moc);
  1622  0384  0020               	movlb	0	; select bank0
  1623  0385  086F               	movf	_adr_moc,w	;volatile
  1624  0386  0021               	movlb	1	; select bank1
  1625  0387  00A8               	movwf	??_main^(0+128)
  1626  0388  0828               	movf	??_main^(0+128),w
  1627  0389  0020               	movlb	0	; select bank0
  1628  038A  00CB               	movwf	write_flash@adr_lo
  1629  038B  0846               	movf	_moc,w	;volatile
  1630  038C  0021               	movlb	1	; select bank1
  1631  038D  00A9               	movwf	(??_main+1)^(0+128)
  1632  038E  0829               	movf	(??_main+1)^(0+128),w
  1633  038F  0020               	movlb	0	; select bank0
  1634  0390  00CC               	movwf	write_flash@data_lo
  1635  0391  086C               	movf	_adr_hi,w	;volatile
  1636  0392  3186  2694  3181   	fcall	_write_flash
  1637                           
  1638                           ;main.c: 445: flash_low = read_flash(adr_hi, adr_low);
  1639  0395  0020               	movlb	0	; select bank0
  1640  0396  086D               	movf	_adr_low,w	;volatile
  1641  0397  0021               	movlb	1	; select bank1
  1642  0398  00A8               	movwf	??_main^(0+128)
  1643  0399  0828               	movf	??_main^(0+128),w
  1644  039A  0020               	movlb	0	; select bank0
  1645  039B  00CB               	movwf	read_flash@adrs_lo
  1646  039C  086C               	movf	_adr_hi,w	;volatile
  1647  039D  3186  26DB  3181   	fcall	_read_flash
  1648  03A0  0021               	movlb	1	; select bank1
  1649  03A1  00A9               	movwf	(??_main+1)^(0+128)
  1650  03A2  0829               	movf	(??_main+1)^(0+128),w
  1651  03A3  0020               	movlb	0	; select bank0
  1652  03A4  00C0               	movwf	_flash_low	;volatile
  1653                           
  1654                           ;main.c: 446: flash_hi = (read_flash(adr_hi, adr_low2) );
  1655  03A5  086E               	movf	_adr_low2,w	;volatile
  1656  03A6  0021               	movlb	1	; select bank1
  1657  03A7  00A8               	movwf	??_main^(0+128)
  1658  03A8  0828               	movf	??_main^(0+128),w
  1659  03A9  0020               	movlb	0	; select bank0
  1660  03AA  00CB               	movwf	read_flash@adrs_lo
  1661  03AB  086C               	movf	_adr_hi,w	;volatile
  1662  03AC  3186  26DB  3181   	fcall	_read_flash
  1663  03AF  0021               	movlb	1	; select bank1
  1664  03B0  00A9               	movwf	(??_main+1)^(0+128)
  1665  03B1  0829               	movf	(??_main+1)^(0+128),w
  1666  03B2  0020               	movlb	0	; select bank0
  1667  03B3  00BF               	movwf	_flash_hi	;volatile
  1668                           
  1669                           ;main.c: 448: flash_moc = read_flash(adr_hi, adr_moc);
  1670  03B4  086F               	movf	_adr_moc,w	;volatile
  1671  03B5  0021               	movlb	1	; select bank1
  1672  03B6  00A8               	movwf	??_main^(0+128)
  1673  03B7  0828               	movf	??_main^(0+128),w
  1674  03B8  0020               	movlb	0	; select bank0
  1675  03B9  00CB               	movwf	read_flash@adrs_lo
  1676  03BA  086C               	movf	_adr_hi,w	;volatile
  1677  03BB  3186  26DB  3181   	fcall	_read_flash
  1678  03BE  0021               	movlb	1	; select bank1
  1679  03BF  00A9               	movwf	(??_main+1)^(0+128)
  1680  03C0  0829               	movf	(??_main+1)^(0+128),w
  1681  03C1  0020               	movlb	0	; select bank0
  1682  03C2  00C1               	movwf	_flash_moc	;volatile
  1683                           
  1684                           ;main.c: 451: flash_moc = moc;
  1685  03C3  0846               	movf	_moc,w	;volatile
  1686  03C4  0021               	movlb	1	; select bank1
  1687  03C5  00A8               	movwf	??_main^(0+128)
  1688  03C6  0828               	movf	??_main^(0+128),w
  1689  03C7  0020               	movlb	0	; select bank0
  1690  03C8  00C1               	movwf	_flash_moc	;volatile
  1691                           
  1692                           ;main.c: 452: czas_flash = czas_s;
  1693  03C9  0829               	movf	_czas_s+1,w	;volatile
  1694  03CA  00A7               	movwf	_czas_flash+1	;volatile
  1695  03CB  0828               	movf	_czas_s,w	;volatile
  1696  03CC  00A6               	movwf	_czas_flash	;volatile
  1697  03CD                     l2103:	
  1698                           ;main.c: 454: }
  1699                           ;main.c: 455: }else{
  1700                           
  1701                           ;main.c: 453: timer7 = 5000;
  1702                           
  1703                           
  1704                           ;main.c: 456: timer7 = 5000;
  1705  03CD  3088               	movlw	136
  1706  03CE  00B2               	movwf	_timer7	;volatile
  1707  03CF  3013               	movlw	19
  1708  03D0  00B3               	movwf	_timer7+1	;volatile
  1709  03D1                     l2105:	
  1710                           
  1711                           ;main.c: 457: }
  1712                           ;main.c: 470: if ( (PORTBbits.RB5 == 0) ) {
  1713  03D1  1A8D               	btfsc	13,5	;volatile
  1714  03D2  2BF5               	goto	l2119
  1715                           
  1716                           ;main.c: 471: if ( (START_Fl ==0) && (timer3<10) ) {
  1717  03D3  0837               	movf	_START_Fl,w	;volatile
  1718  03D4  1D03               	btfss	3,2
  1719  03D5  2BFA               	goto	l2123
  1720  03D6  3000               	movlw	0
  1721  03D7  022D               	subwf	_timer3+1,w	;volatile
  1722  03D8  300A               	movlw	10
  1723  03D9  1903               	skipnz
  1724  03DA  022C               	subwf	_timer3,w	;volatile
  1725  03DB  1803               	skipnc
  1726  03DC  2BFA               	goto	l2123
  1727                           
  1728                           ;main.c: 472: if (START == 0 ) {
  1729  03DD  0836               	movf	_START,w	;volatile
  1730  03DE  1D03               	btfss	3,2
  1731  03DF  2BED               	goto	l2115
  1732                           
  1733                           ;main.c: 473: START = 1;
  1734  03E0  3001               	movlw	1
  1735  03E1  0021               	movlb	1	; select bank1
  1736  03E2  00A8               	movwf	??_main^(0+128)
  1737  03E3  0828               	movf	??_main^(0+128),w
  1738  03E4  0020               	movlb	0	; select bank0
  1739  03E5  00B6               	movwf	_START	;volatile
  1740                           
  1741                           ;main.c: 474: grzalka_numer = 1;
  1742  03E6  3001               	movlw	1
  1743  03E7  0021               	movlb	1	; select bank1
  1744  03E8  00A8               	movwf	??_main^(0+128)
  1745  03E9  0828               	movf	??_main^(0+128),w
  1746  03EA  0020               	movlb	0	; select bank0
  1747  03EB  00EB               	movwf	_grzalka_numer	;volatile
  1748                           
  1749                           ;main.c: 475: }else{
  1750  03EC  2BEE               	goto	l2117
  1751  03ED                     l2115:	
  1752                           
  1753                           ;main.c: 476: START = 0;
  1754  03ED  01B6               	clrf	_START	;volatile
  1755  03EE                     l2117:	
  1756                           
  1757                           ;main.c: 477: }
  1758                           ;main.c: 478: START_Fl = 1;
  1759  03EE  3001               	movlw	1
  1760  03EF  0021               	movlb	1	; select bank1
  1761  03F0  00A8               	movwf	??_main^(0+128)
  1762  03F1  0828               	movf	??_main^(0+128),w
  1763  03F2  0020               	movlb	0	; select bank0
  1764  03F3  00B7               	movwf	_START_Fl	;volatile
  1765                           
  1766                           ;main.c: 479: }
  1767                           ;main.c: 480: }else{
  1768  03F4  2BFA               	goto	l2123
  1769  03F5                     l2119:	
  1770                           
  1771                           ;main.c: 481: START_Fl = 0;
  1772  03F5  01B7               	clrf	_START_Fl	;volatile
  1773                           
  1774                           ;main.c: 482: timer3 = 60;
  1775  03F6  303C               	movlw	60
  1776  03F7  00AC               	movwf	_timer3	;volatile
  1777  03F8  3000               	movlw	0
  1778  03F9  00AD               	movwf	_timer3+1	;volatile
  1779  03FA                     l2123:	
  1780                           
  1781                           ;main.c: 483: }
  1782                           ;main.c: 486: if (czas_s < 1) {
  1783  03FA  0828               	movf	_czas_s,w	;volatile
  1784  03FB  0429               	iorwf	_czas_s+1,w	;volatile
  1785  03FC  1D03               	btfss	3,2
  1786  03FD  2C02               	goto	l2127
  1787                           
  1788                           ;main.c: 487: czas_s = 1;
  1789  03FE  3001               	movlw	1
  1790  03FF  00A8               	movwf	_czas_s	;volatile
  1791  0400  3000               	movlw	0
  1792  0401  00A9               	movwf	_czas_s+1	;volatile
  1793  0402                     l2127:	
  1794                           
  1795                           ;main.c: 488: }
  1796                           ;main.c: 489: czas_ms = czas_s *1000UL;
  1797  0402  0828               	movf	_czas_s,w	;volatile
  1798  0403  00CB               	movwf	___lmul@multiplier
  1799  0404  0829               	movf	_czas_s+1,w	;volatile
  1800  0405  00CC               	movwf	___lmul@multiplier+1
  1801  0406  01CD               	clrf	___lmul@multiplier+2
  1802  0407  01CE               	clrf	___lmul@multiplier+3
  1803  0408  3000               	movlw	0
  1804  0409  00D2               	movwf	___lmul@multiplicand+3
  1805  040A  3000               	movlw	0
  1806  040B  00D1               	movwf	___lmul@multiplicand+2
  1807  040C  3003               	movlw	3
  1808  040D  00D0               	movwf	___lmul@multiplicand+1
  1809  040E  30E8               	movlw	232
  1810  040F  00CF               	movwf	___lmul@multiplicand
  1811  0410  3186  2637  3181   	fcall	___lmul
  1812  0413  0020               	movlb	0	; select bank0
  1813  0414  084E               	movf	?___lmul+3,w
  1814  0415  0021               	movlb	1	; select bank1
  1815  0416  00A3               	movwf	(_czas_ms+3)^(0+128)	;volatile
  1816  0417  0020               	movlb	0	; select bank0
  1817  0418  084D               	movf	?___lmul+2,w
  1818  0419  0021               	movlb	1	; select bank1
  1819  041A  00A2               	movwf	(_czas_ms+2)^(0+128)	;volatile
  1820  041B  0020               	movlb	0	; select bank0
  1821  041C  084C               	movf	?___lmul+1,w
  1822  041D  0021               	movlb	1	; select bank1
  1823  041E  00A1               	movwf	(_czas_ms+1)^(0+128)	;volatile
  1824  041F  0020               	movlb	0	; select bank0
  1825  0420  084B               	movf	?___lmul,w
  1826  0421  0021               	movlb	1	; select bank1
  1827  0422  00A0               	movwf	_czas_ms^(0+128)	;volatile
  1828                           
  1829                           ;main.c: 490: if (grzalka_numer>6) {
  1830  0423  3007               	movlw	7
  1831  0424  0020               	movlb	0	; select bank0
  1832  0425  026B               	subwf	_grzalka_numer,w	;volatile
  1833  0426  1C03               	skipc
  1834  0427  2C2E               	goto	l2133
  1835                           
  1836                           ;main.c: 491: grzalka_numer =1;
  1837  0428  3001               	movlw	1
  1838  0429  0021               	movlb	1	; select bank1
  1839  042A  00A8               	movwf	??_main^(0+128)
  1840  042B  0828               	movf	??_main^(0+128),w
  1841  042C  0020               	movlb	0	; select bank0
  1842  042D  00EB               	movwf	_grzalka_numer	;volatile
  1843  042E                     l2133:	
  1844                           
  1845                           ;main.c: 492: }
  1846                           ;main.c: 493: if ( (START == 1) && (timer5 ==0) ) {
  1847  042E  0336               	decf	_START,w	;volatile
  1848  042F  1D03               	btfss	3,2
  1849  0430  2C8C               	goto	l211
  1850  0431  0866               	movf	_timer5+3,w	;volatile
  1851  0432  0465               	iorwf	_timer5+2,w	;volatile
  1852  0433  0464               	iorwf	_timer5+1,w	;volatile
  1853  0434  0463               	iorwf	_timer5,w	;volatile
  1854  0435  1D03               	skipz
  1855  0436  2C8C               	goto	l211
  1856                           
  1857                           ;main.c: 494: timer5 = czas_ms;
  1858  0437  0021               	movlb	1	; select bank1
  1859  0438  0823               	movf	(_czas_ms+3)^(0+128),w	;volatile
  1860  0439  0020               	movlb	0	; select bank0
  1861  043A  00E6               	movwf	_timer5+3	;volatile
  1862  043B  0021               	movlb	1	; select bank1
  1863  043C  0822               	movf	(_czas_ms+2)^(0+128),w	;volatile
  1864  043D  0020               	movlb	0	; select bank0
  1865  043E  00E5               	movwf	_timer5+2	;volatile
  1866  043F  0021               	movlb	1	; select bank1
  1867  0440  0821               	movf	(_czas_ms+1)^(0+128),w	;volatile
  1868  0441  0020               	movlb	0	; select bank0
  1869  0442  00E4               	movwf	_timer5+1	;volatile
  1870  0443  0021               	movlb	1	; select bank1
  1871  0444  0820               	movf	_czas_ms^(0+128),w	;volatile
  1872  0445  0020               	movlb	0	; select bank0
  1873  0446  00E3               	movwf	_timer5	;volatile
  1874                           
  1875                           ;main.c: 496: switch (grzalka_numer) {
  1876  0447  2C71               	goto	l2165
  1877  0448                     l213:	
  1878                           ;main.c: 497: case 1:
  1879                           
  1880                           
  1881                           ;main.c: 498: LATAbits.LATA0 = 1;
  1882  0448  0022               	movlb	2	; select bank2
  1883  0449  140C               	bsf	12,0	;volatile
  1884  044A  2C6E               	goto	L4
  1885  044B                     l2139:	
  1886                           ;main.c: 502: case 2:
  1887                           
  1888                           ;main.c: 501: break;
  1889                           
  1890                           ;main.c: 500: LATAbits.LATA2 = 0;
  1891                           
  1892                           ;main.c: 499: LATAbits.LATA1 = 0;
  1893                           
  1894  044B  2C56               	goto	l2155
  1895  044C                     l216:	
  1896                           ;main.c: 508: case 3:
  1897                           
  1898                           ;main.c: 507: break;
  1899                           
  1900                           ;main.c: 506: LATAbits.LATA2 = 0;
  1901                           
  1902                           ;main.c: 505: LATAbits.LATA1 = 0;
  1903                           
  1904                           ;main.c: 504: LATAbits.LATA0 = 0;
  1905                           
  1906                           ;main.c: 503: timer5 = czas_przerwa_ms;
  1907                           
  1908                           
  1909                           ;main.c: 509: LATAbits.LATA0 = 0;
  1910  044C  0022               	movlb	2	; select bank2
  1911  044D  100C               	bcf	12,0	;volatile
  1912                           
  1913                           ;main.c: 510: LATAbits.LATA1 = 1;
  1914  044E  148C               	bsf	12,1	;volatile
  1915  044F  2C6F               	goto	l2161
  1916  0450                     l2147:	
  1917                           ;main.c: 513: case 4:
  1918                           
  1919                           ;main.c: 512: break;
  1920                           
  1921                           ;main.c: 511: LATAbits.LATA2 = 0;
  1922                           
  1923  0450  2C56               	goto	l2155
  1924  0451                     l218:	
  1925                           ;main.c: 519: case 5:
  1926                           
  1927                           ;main.c: 518: break;
  1928                           
  1929                           ;main.c: 517: LATAbits.LATA2 = 0;
  1930                           
  1931                           ;main.c: 516: LATAbits.LATA1 = 0;
  1932                           
  1933                           ;main.c: 515: LATAbits.LATA0 = 0;
  1934                           
  1935                           ;main.c: 514: timer5 = czas_przerwa_ms;
  1936                           
  1937                           
  1938                           ;main.c: 520: LATAbits.LATA0 = 0;
  1939  0451  0022               	movlb	2	; select bank2
  1940  0452  100C               	bcf	12,0	;volatile
  1941                           
  1942                           ;main.c: 521: LATAbits.LATA1 = 0;
  1943  0453  108C               	bcf	12,1	;volatile
  1944                           
  1945                           ;main.c: 522: LATAbits.LATA2 = 1;
  1946  0454  150C               	bsf	12,2	;volatile
  1947                           
  1948                           ;main.c: 523: break;
  1949  0455  2C86               	goto	l2167
  1950  0456                     l2155:	
  1951                           ;main.c: 524: case 6:
  1952                           
  1953                           
  1954                           ;main.c: 525: timer5 = czas_przerwa_ms;
  1955  0456  0020               	movlb	0	; select bank0
  1956  0457  083D               	movf	_czas_przerwa_ms,w	;volatile
  1957  0458  0021               	movlb	1	; select bank1
  1958  0459  00A8               	movwf	??_main^(0+128)
  1959  045A  01A9               	clrf	(??_main^(0+128)+1)
  1960  045B  01AA               	clrf	(??_main^(0+128)+2)
  1961  045C  01AB               	clrf	(??_main^(0+128)+3)
  1962  045D  082B               	movf	(??_main+3)^(0+128),w
  1963  045E  0020               	movlb	0	; select bank0
  1964  045F  00E6               	movwf	_timer5+3	;volatile
  1965  0460  0021               	movlb	1	; select bank1
  1966  0461  082A               	movf	(??_main+2)^(0+128),w
  1967  0462  0020               	movlb	0	; select bank0
  1968  0463  00E5               	movwf	_timer5+2	;volatile
  1969  0464  0021               	movlb	1	; select bank1
  1970  0465  0829               	movf	(??_main+1)^(0+128),w
  1971  0466  0020               	movlb	0	; select bank0
  1972  0467  00E4               	movwf	_timer5+1	;volatile
  1973  0468  0021               	movlb	1	; select bank1
  1974  0469  0828               	movf	??_main^(0+128),w
  1975  046A  0020               	movlb	0	; select bank0
  1976  046B  00E3               	movwf	_timer5	;volatile
  1977                           
  1978                           ;main.c: 526: LATAbits.LATA0 = 0;
  1979  046C  0022               	movlb	2	; select bank2
  1980  046D  100C               	bcf	12,0	;volatile
  1981  046E                     L4:	
  1982                           
  1983                           ;main.c: 527: LATAbits.LATA1 = 0;
  1984  046E  108C               	bcf	12,1	;volatile
  1985  046F                     l2161:	
  1986                           
  1987                           ;main.c: 528: LATAbits.LATA2 = 0;
  1988  046F  110C               	bcf	12,2	;volatile
  1989                           
  1990                           ;main.c: 530: }
  1991                           
  1992                           ;main.c: 529: break;
  1993  0470  2C86               	goto	l2167
  1994  0471                     l2165:	
  1995  0471  0020               	movlb	0	; select bank0
  1996  0472  086B               	movf	_grzalka_numer,w	;volatile
  1997                           
  1998                           ; Switch size 1, requested type "space"
  1999                           ; Number of cases is 6, Range of values is 1 to 6
  2000                           ; switch strategies available:
  2001                           ; Name         Instructions Cycles
  2002                           ; simple_byte           19    10 (average)
  2003                           ; direct_byte           21     9 (fixed)
  2004                           ; jumptable            263     9 (fixed)
  2005                           ;	Chosen strategy is simple_byte
  2006  0473  3A01               	xorlw	1	; case 1
  2007  0474  1903               	skipnz
  2008  0475  2C48               	goto	l213
  2009  0476  3A03               	xorlw	3	; case 2
  2010  0477  1903               	skipnz
  2011  0478  2C4B               	goto	l2139
  2012  0479  3A01               	xorlw	1	; case 3
  2013  047A  1903               	skipnz
  2014  047B  2C4C               	goto	l216
  2015  047C  3A07               	xorlw	7	; case 4
  2016  047D  1903               	skipnz
  2017  047E  2C50               	goto	l2147
  2018  047F  3A01               	xorlw	1	; case 5
  2019  0480  1903               	skipnz
  2020  0481  2C51               	goto	l218
  2021  0482  3A03               	xorlw	3	; case 6
  2022  0483  1903               	skipnz
  2023  0484  2C56               	goto	l2155
  2024  0485  2C86               	goto	l2167
  2025  0486                     l2167:	
  2026                           
  2027                           ;main.c: 531: grzalka_numer++;
  2028  0486  3001               	movlw	1
  2029  0487  0021               	movlb	1	; select bank1
  2030  0488  00A8               	movwf	??_main^(0+128)
  2031  0489  0828               	movf	??_main^(0+128),w
  2032  048A  0020               	movlb	0	; select bank0
  2033  048B  07EB               	addwf	_grzalka_numer,f	;volatile
  2034  048C                     l211:	
  2035                           
  2036                           ;main.c: 532: }
  2037                           ;main.c: 534: if (START == 1) {
  2038  048C  0336               	decf	_START,w	;volatile
  2039  048D  1D03               	btfss	3,2
  2040  048E  2CAC               	goto	l2175
  2041                           
  2042                           ;main.c: 535: if (timer4 ==0) {
  2043  048F  082E               	movf	_timer4,w	;volatile
  2044  0490  042F               	iorwf	_timer4+1,w	;volatile
  2045  0491  1D03               	btfss	3,2
  2046  0492  2CAC               	goto	l2175
  2047                           
  2048                           ;main.c: 536: timer4 =200;
  2049  0493  30C8               	movlw	200
  2050  0494  00AE               	movwf	_timer4	;volatile
  2051  0495  3000               	movlw	0
  2052  0496  00AF               	movwf	_timer4+1	;volatile
  2053                           
  2054                           ;main.c: 537: LATAbits.LATA3 ^= 1;
  2055  0497  0022               	movlb	2	; select bank2
  2056  0498  0C0C               	rrf	12,w	;volatile
  2057  0499  0021               	movlb	1	; select bank1
  2058  049A  00A8               	movwf	??_main^(0+128)
  2059  049B  0CA8               	rrf	??_main^(0+128),f
  2060  049C  0C28               	rrf	??_main^(0+128),w
  2061  049D  3901               	andlw	1
  2062  049E  00A8               	movwf	??_main^(0+128)
  2063  049F  3001               	movlw	1
  2064  04A0  06A8               	xorwf	??_main^(0+128),f
  2065  04A1  0DA8               	rlf	??_main^(0+128),f
  2066  04A2  0DA8               	rlf	??_main^(0+128),f
  2067  04A3  0DA8               	rlf	??_main^(0+128),f
  2068  04A4  0022               	movlb	2	; select bank2
  2069  04A5  080C               	movf	12,w	;volatile
  2070  04A6  0021               	movlb	1	; select bank1
  2071  04A7  0628               	xorwf	??_main^(0+128),w
  2072  04A8  39F7               	andlw	-9
  2073  04A9  0628               	xorwf	??_main^(0+128),w
  2074  04AA  0022               	movlb	2	; select bank2
  2075  04AB  008C               	movwf	12	;volatile
  2076  04AC                     l2175:	
  2077                           
  2078                           ;main.c: 538: }
  2079                           ;main.c: 539: }
  2080                           ;main.c: 542: if (START == 0) {
  2081  04AC  0020               	movlb	0	; select bank0
  2082  04AD  0836               	movf	_START,w	;volatile
  2083  04AE  1D03               	btfss	3,2
  2084  04AF  2CBE               	goto	l2181
  2085                           
  2086                           ;main.c: 543: LATAbits.LATA0 = 0;
  2087  04B0  0022               	movlb	2	; select bank2
  2088  04B1  100C               	bcf	12,0	;volatile
  2089                           
  2090                           ;main.c: 544: LATAbits.LATA1 = 0;
  2091  04B2  108C               	bcf	12,1	;volatile
  2092                           
  2093                           ;main.c: 545: LATAbits.LATA2 = 0;
  2094  04B3  110C               	bcf	12,2	;volatile
  2095                           
  2096                           ;main.c: 546: LATAbits.LATA3 = 0;
  2097  04B4  118C               	bcf	12,3	;volatile
  2098                           
  2099                           ;main.c: 547: timer5 = 0;
  2100  04B5  3000               	movlw	0
  2101  04B6  0020               	movlb	0	; select bank0
  2102  04B7  00E6               	movwf	_timer5+3	;volatile
  2103  04B8  3000               	movlw	0
  2104  04B9  00E5               	movwf	_timer5+2	;volatile
  2105  04BA  3000               	movlw	0
  2106  04BB  00E4               	movwf	_timer5+1	;volatile
  2107  04BC  3000               	movlw	0
  2108  04BD  00E3               	movwf	_timer5	;volatile
  2109  04BE                     l2181:	
  2110                           
  2111                           ;main.c: 548: }
  2112                           ;main.c: 555: if (START ==1) {
  2113  04BE  0336               	decf	_START,w	;volatile
  2114  04BF  1D03               	btfss	3,2
  2115  04C0  2CE0               	goto	l2185
  2116                           
  2117                           ;main.c: 556: volatile unsigned int liczba_tmp;
  2118                           ;main.c: 557: liczba_tmp = timer5/1000;
  2119  04C1  3000               	movlw	0
  2120  04C2  00CE               	movwf	___lldiv@divisor+3
  2121  04C3  3000               	movlw	0
  2122  04C4  00CD               	movwf	___lldiv@divisor+2
  2123  04C5  3003               	movlw	3
  2124  04C6  00CC               	movwf	___lldiv@divisor+1
  2125  04C7  30E8               	movlw	232
  2126  04C8  00CB               	movwf	___lldiv@divisor
  2127  04C9  0866               	movf	_timer5+3,w	;volatile
  2128  04CA  00D2               	movwf	___lldiv@dividend+3
  2129  04CB  0865               	movf	_timer5+2,w	;volatile
  2130  04CC  00D1               	movwf	___lldiv@dividend+2
  2131  04CD  0864               	movf	_timer5+1,w	;volatile
  2132  04CE  00D0               	movwf	___lldiv@dividend+1
  2133  04CF  0863               	movf	_timer5,w	;volatile
  2134  04D0  00CF               	movwf	___lldiv@dividend
  2135  04D1  3185  25AF  3181   	fcall	___lldiv
  2136  04D4  0020               	movlb	0	; select bank0
  2137  04D5  084C               	movf	?___lldiv+1,w
  2138  04D6  00E2               	movwf	main@liczba_tmp+1	;volatile
  2139  04D7  084B               	movf	?___lldiv,w
  2140  04D8  00E1               	movwf	main@liczba_tmp	;volatile
  2141                           
  2142                           ;main.c: 558: wyswietl( liczba_tmp +1 );
  2143  04D9  0861               	movf	main@liczba_tmp,w	;volatile
  2144  04DA  3E01               	addlw	1
  2145  04DB  00D9               	movwf	wyswietl@liczba
  2146  04DC  3000               	movlw	0
  2147  04DD  3D62               	addwfc	main@liczba_tmp+1,w	;volatile
  2148  04DE  00DA               	movwf	wyswietl@liczba+1
  2149  04DF  2CE5               	goto	L3
  2150  04E0                     l2185:	
  2151                           ;main.c: 559: }else{
  2152                           
  2153                           
  2154                           ;main.c: 560: wyswietl(czas_s);
  2155  04E0  0020               	movlb	0	; select bank0
  2156  04E1  0829               	movf	_czas_s+1,w	;volatile
  2157  04E2  00DA               	movwf	wyswietl@liczba+1
  2158  04E3  0828               	movf	_czas_s,w	;volatile
  2159  04E4  00D9               	movwf	wyswietl@liczba
  2160  04E5                     L3:	
  2161  04E5  3184  24FD  3181   	fcall	_wyswietl
  2162                           
  2163                           ;main.c: 562: }
  2164                           ;main.c: 566: if (START == 0) {
  2165  04E8  0020               	movlb	0	; select bank0
  2166  04E9  0836               	movf	_START,w	;volatile
  2167  04EA  1D03               	btfss	3,2
  2168  04EB  2CF5               	goto	l2191
  2169                           
  2170                           ;main.c: 567: timer2 = 1800000;
  2171  04EC  3000               	movlw	0
  2172  04ED  00A3               	movwf	_timer2+3	;volatile
  2173  04EE  301B               	movlw	27
  2174  04EF  00A2               	movwf	_timer2+2	;volatile
  2175  04F0  3077               	movlw	119
  2176  04F1  00A1               	movwf	_timer2+1	;volatile
  2177  04F2  3040               	movlw	64
  2178  04F3  00A0               	movwf	_timer2	;volatile
  2179                           
  2180                           ;main.c: 568: }else{
  2181  04F4  2CFB               	goto	l226
  2182  04F5                     l2191:	
  2183                           
  2184                           ;main.c: 569: if (timer2 == 0) {
  2185  04F5  0823               	movf	_timer2+3,w	;volatile
  2186  04F6  0422               	iorwf	_timer2+2,w	;volatile
  2187  04F7  0421               	iorwf	_timer2+1,w	;volatile
  2188  04F8  0420               	iorwf	_timer2,w	;volatile
  2189  04F9  1903               	btfsc	3,2
  2190                           
  2191                           ;main.c: 570: START =0;
  2192  04FA  01B6               	clrf	_START	;volatile
  2193  04FB                     l226:	
  2194  04FB  0064               	clrwdt	;# 
  2195  04FC  2A26               	goto	l176
  2196  04FD                     __end_of_main:	
  2197                           ;main.c: 575: }
  2198                           ;main.c: 577: return (0);
  2199                           ;	Return value of _main is never used
  2200                           
  2201                           
  2202                           	psect	text1
  2203  04FD                     __ptext1:	
  2204 ;; *************** function _wyswietl *****************
  2205 ;; Defined at:
  2206 ;;		line 582 in file "main.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  liczba          2   14[BANK0 ] unsigned int 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;		None
  2211 ;; Return value:  Size  Location     Type
  2212 ;;		None               void
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0, pclath, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2220 ;;      Params:         0       2       0       0       0       0       0       0
  2221 ;;      Locals:         0       0       0       0       0       0       0       0
  2222 ;;      Temps:          0       1       0       0       0       0       0       0
  2223 ;;      Totals:         0       3       0       0       0       0       0       0
  2224 ;;Total ram usage:        3 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    2
  2227 ;; This function calls:
  2228 ;;		___lwdiv
  2229 ;;		___lwmod
  2230 ;; This function is called by:
  2231 ;;		_main
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           
  2236                           ;psect for function _wyswietl
  2237  04FD                     _wyswietl:	
  2238                           
  2239                           ;main.c: 586: if ( liczba > 599 ) {
  2240                           
  2241                           ;incstack = 0
  2242                           ; Regs used in _wyswietl: [wreg+status,2+status,0+pclath+cstack]
  2243  04FD  3002               	movlw	2
  2244  04FE  0020               	movlb	0	; select bank0
  2245  04FF  025A               	subwf	wyswietl@liczba+1,w
  2246  0500  3058               	movlw	88
  2247  0501  1903               	skipnz
  2248  0502  0259               	subwf	wyswietl@liczba,w
  2249  0503  1C03               	skipc
  2250  0504  2D3D               	goto	l1833
  2251                           
  2252                           ;main.c: 587: liczba = liczba/60;
  2253  0505  303C               	movlw	60
  2254  0506  00D1               	movwf	___lwdiv@divisor
  2255  0507  3000               	movlw	0
  2256  0508  00D2               	movwf	___lwdiv@divisor+1
  2257  0509  085A               	movf	wyswietl@liczba+1,w
  2258  050A  00D4               	movwf	___lwdiv@dividend+1
  2259  050B  0859               	movf	wyswietl@liczba,w
  2260  050C  00D3               	movwf	___lwdiv@dividend
  2261  050D  3186  2602  3184   	fcall	___lwdiv
  2262  0510  0020               	movlb	0	; select bank0
  2263  0511  0852               	movf	?___lwdiv+1,w
  2264  0512  00DA               	movwf	wyswietl@liczba+1
  2265  0513  0851               	movf	?___lwdiv,w
  2266  0514  00D9               	movwf	wyswietl@liczba
  2267                           
  2268                           ;main.c: 588: cyf_1 = liczba/10;
  2269  0515  300A               	movlw	10
  2270  0516  00D1               	movwf	___lwdiv@divisor
  2271  0517  3000               	movlw	0
  2272  0518  00D2               	movwf	___lwdiv@divisor+1
  2273  0519  085A               	movf	wyswietl@liczba+1,w
  2274  051A  00D4               	movwf	___lwdiv@dividend+1
  2275  051B  0859               	movf	wyswietl@liczba,w
  2276  051C  00D3               	movwf	___lwdiv@dividend
  2277  051D  3186  2602  3184   	fcall	___lwdiv
  2278  0520  0020               	movlb	0	; select bank0
  2279  0521  0851               	movf	?___lwdiv,w
  2280  0522  00DB               	movwf	??_wyswietl
  2281  0523  085B               	movf	??_wyswietl,w
  2282  0524  00E9               	movwf	_cyf_1	;volatile
  2283                           
  2284                           ;main.c: 589: cyf_2 = liczba%10;
  2285  0525  300A               	movlw	10
  2286  0526  00CB               	movwf	___lwmod@divisor
  2287  0527  3000               	movlw	0
  2288  0528  00CC               	movwf	___lwmod@divisor+1
  2289  0529  085A               	movf	wyswietl@liczba+1,w
  2290  052A  00CE               	movwf	___lwmod@dividend+1
  2291  052B  0859               	movf	wyswietl@liczba,w
  2292  052C  00CD               	movwf	___lwmod@dividend
  2293  052D  3186  2667         	fcall	___lwmod
  2294  052F  0020               	movlb	0	; select bank0
  2295  0530  084B               	movf	?___lwmod,w
  2296  0531  00DB               	movwf	??_wyswietl
  2297  0532  085B               	movf	??_wyswietl,w
  2298  0533  00EA               	movwf	_cyf_2	;volatile
  2299                           
  2300                           ;main.c: 590: kro_1 = 0;
  2301  0534  0021               	movlb	1	; select bank1
  2302  0535  01AC               	clrf	_kro_1^(0+128)	;volatile
  2303                           
  2304                           ;main.c: 591: kro_2 = 1;
  2305  0536  3001               	movlw	1
  2306  0537  0020               	movlb	0	; select bank0
  2307  0538  00DB               	movwf	??_wyswietl
  2308  0539  085B               	movf	??_wyswietl,w
  2309  053A  0021               	movlb	1	; select bank1
  2310  053B  00AD               	movwf	_kro_2^(0+128)	;volatile
  2311                           
  2312                           ;main.c: 592: }else if( liczba > 99 ){
  2313  053C  0008               	return
  2314  053D                     l1833:	
  2315  053D  3000               	movlw	0
  2316  053E  0020               	movlb	0	; select bank0
  2317  053F  025A               	subwf	wyswietl@liczba+1,w
  2318  0540  3064               	movlw	100
  2319  0541  1903               	skipnz
  2320  0542  0259               	subwf	wyswietl@liczba,w
  2321  0543  1C03               	skipc
  2322  0544  2D78               	goto	l1843
  2323                           
  2324                           ;main.c: 593: cyf_1 = liczba/60;
  2325  0545  303C               	movlw	60
  2326  0546  00D1               	movwf	___lwdiv@divisor
  2327  0547  3000               	movlw	0
  2328  0548  00D2               	movwf	___lwdiv@divisor+1
  2329  0549  085A               	movf	wyswietl@liczba+1,w
  2330  054A  00D4               	movwf	___lwdiv@dividend+1
  2331  054B  0859               	movf	wyswietl@liczba,w
  2332  054C  00D3               	movwf	___lwdiv@dividend
  2333  054D  3186  2602  3184   	fcall	___lwdiv
  2334  0550  0020               	movlb	0	; select bank0
  2335  0551  0851               	movf	?___lwdiv,w
  2336  0552  00DB               	movwf	??_wyswietl
  2337  0553  085B               	movf	??_wyswietl,w
  2338  0554  00E9               	movwf	_cyf_1	;volatile
  2339                           
  2340                           ;main.c: 594: kro_1 = 1;
  2341  0555  3001               	movlw	1
  2342  0556  00DB               	movwf	??_wyswietl
  2343  0557  085B               	movf	??_wyswietl,w
  2344  0558  0021               	movlb	1	; select bank1
  2345  0559  00AC               	movwf	_kro_1^(0+128)	;volatile
  2346                           
  2347                           ;main.c: 595: kro_2 = 0;
  2348  055A  01AD               	clrf	_kro_2^(0+128)	;volatile
  2349                           
  2350                           ;main.c: 596: cyf_2 = (liczba%60)/10;
  2351  055B  300A               	movlw	10
  2352  055C  0020               	movlb	0	; select bank0
  2353  055D  00D1               	movwf	___lwdiv@divisor
  2354  055E  3000               	movlw	0
  2355  055F  00D2               	movwf	___lwdiv@divisor+1
  2356  0560  085A               	movf	wyswietl@liczba+1,w
  2357  0561  00CE               	movwf	___lwmod@dividend+1
  2358  0562  0859               	movf	wyswietl@liczba,w
  2359  0563  00CD               	movwf	___lwmod@dividend
  2360  0564  303C               	movlw	60
  2361  0565  00CB               	movwf	___lwmod@divisor
  2362  0566  3000               	movlw	0
  2363  0567  00CC               	movwf	___lwmod@divisor+1
  2364  0568  3186  2667  3184   	fcall	___lwmod
  2365  056B  0020               	movlb	0	; select bank0
  2366  056C  084C               	movf	?___lwmod+1,w
  2367  056D  00D4               	movwf	___lwdiv@dividend+1
  2368  056E  084B               	movf	?___lwmod,w
  2369  056F  00D3               	movwf	___lwdiv@dividend
  2370  0570  3186  2602         	fcall	___lwdiv
  2371  0572  0020               	movlb	0	; select bank0
  2372  0573  0851               	movf	?___lwdiv,w
  2373  0574  00DB               	movwf	??_wyswietl
  2374  0575  085B               	movf	??_wyswietl,w
  2375  0576  00EA               	movwf	_cyf_2	;volatile
  2376                           
  2377                           ;main.c: 597: }else if (liczba > 9) {
  2378  0577  0008               	return
  2379  0578                     l1843:	
  2380  0578  3000               	movlw	0
  2381  0579  025A               	subwf	wyswietl@liczba+1,w
  2382  057A  300A               	movlw	10
  2383  057B  1903               	skipnz
  2384  057C  0259               	subwf	wyswietl@liczba,w
  2385  057D  1C03               	skipc
  2386  057E  2DA2               	goto	l1851
  2387                           
  2388                           ;main.c: 598: cyf_1 = liczba/10;
  2389  057F  300A               	movlw	10
  2390  0580  00D1               	movwf	___lwdiv@divisor
  2391  0581  3000               	movlw	0
  2392  0582  00D2               	movwf	___lwdiv@divisor+1
  2393  0583  085A               	movf	wyswietl@liczba+1,w
  2394  0584  00D4               	movwf	___lwdiv@dividend+1
  2395  0585  0859               	movf	wyswietl@liczba,w
  2396  0586  00D3               	movwf	___lwdiv@dividend
  2397  0587  3186  2602  3184   	fcall	___lwdiv
  2398  058A  0020               	movlb	0	; select bank0
  2399  058B  0851               	movf	?___lwdiv,w
  2400  058C  00DB               	movwf	??_wyswietl
  2401  058D  085B               	movf	??_wyswietl,w
  2402  058E  00E9               	movwf	_cyf_1	;volatile
  2403                           
  2404                           ;main.c: 599: cyf_2 = liczba%10;
  2405  058F  300A               	movlw	10
  2406  0590  00CB               	movwf	___lwmod@divisor
  2407  0591  3000               	movlw	0
  2408  0592  00CC               	movwf	___lwmod@divisor+1
  2409  0593  085A               	movf	wyswietl@liczba+1,w
  2410  0594  00CE               	movwf	___lwmod@dividend+1
  2411  0595  0859               	movf	wyswietl@liczba,w
  2412  0596  00CD               	movwf	___lwmod@dividend
  2413  0597  3186  2667         	fcall	___lwmod
  2414  0599  0020               	movlb	0	; select bank0
  2415  059A  084B               	movf	?___lwmod,w
  2416  059B  00DB               	movwf	??_wyswietl
  2417  059C  085B               	movf	??_wyswietl,w
  2418  059D  00EA               	movwf	_cyf_2	;volatile
  2419                           
  2420                           ;main.c: 600: kro_1 = 0;
  2421  059E  0021               	movlb	1	; select bank1
  2422  059F  01AC               	clrf	_kro_1^(0+128)	;volatile
  2423                           
  2424                           ;main.c: 601: kro_2 = 0;
  2425  05A0  01AD               	clrf	_kro_2^(0+128)	;volatile
  2426                           
  2427                           ;main.c: 602: }else{
  2428  05A1  0008               	return
  2429  05A2                     l1851:	
  2430                           
  2431                           ;main.c: 603: cyf_1 = 10;
  2432  05A2  300A               	movlw	10
  2433  05A3  0020               	movlb	0	; select bank0
  2434  05A4  00DB               	movwf	??_wyswietl
  2435  05A5  085B               	movf	??_wyswietl,w
  2436  05A6  00E9               	movwf	_cyf_1	;volatile
  2437                           
  2438                           ;main.c: 604: cyf_2 = liczba;
  2439  05A7  0859               	movf	wyswietl@liczba,w
  2440  05A8  00DB               	movwf	??_wyswietl
  2441  05A9  085B               	movf	??_wyswietl,w
  2442  05AA  00EA               	movwf	_cyf_2	;volatile
  2443                           
  2444                           ;main.c: 605: kro_1 = 0;
  2445  05AB  0021               	movlb	1	; select bank1
  2446  05AC  01AC               	clrf	_kro_1^(0+128)	;volatile
  2447                           
  2448                           ;main.c: 606: kro_2 = 0;
  2449  05AD  01AD               	clrf	_kro_2^(0+128)	;volatile
  2450  05AE  0008               	return
  2451  05AF                     __end_of_wyswietl:	
  2452                           
  2453                           	psect	text2
  2454  0667                     __ptext2:	
  2455 ;; *************** function ___lwmod *****************
  2456 ;; Defined at:
  2457 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  divisor         2    0[BANK0 ] unsigned int 
  2460 ;;  dividend        2    2[BANK0 ] unsigned int 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  counter         1    5[BANK0 ] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  2    0[BANK0 ] unsigned int 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2472 ;;      Params:         0       4       0       0       0       0       0       0
  2473 ;;      Locals:         0       1       0       0       0       0       0       0
  2474 ;;      Temps:          0       1       0       0       0       0       0       0
  2475 ;;      Totals:         0       6       0       0       0       0       0       0
  2476 ;;Total ram usage:        6 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    1
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_wyswietl
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           
  2487                           ;psect for function ___lwmod
  2488  0667                     ___lwmod:	
  2489                           
  2490                           ;incstack = 0
  2491                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2492  0667  0020               	movlb	0	; select bank0
  2493  0668  084B               	movf	___lwmod@divisor,w
  2494  0669  044C               	iorwf	___lwmod@divisor+1,w
  2495  066A  1903               	btfsc	3,2
  2496  066B  2E8F               	goto	l1771
  2497  066C  01D0               	clrf	___lwmod@counter
  2498  066D  0AD0               	incf	___lwmod@counter,f
  2499  066E                     l1761:	
  2500  066E  1BCC               	btfsc	___lwmod@divisor+1,7
  2501  066F  2E7A               	goto	l1763
  2502  0670  3001               	movlw	1
  2503  0671                     u1925:	
  2504  0671  35CB               	lslf	___lwmod@divisor,f
  2505  0672  0DCC               	rlf	___lwmod@divisor+1,f
  2506  0673  0B89               	decfsz	9,f
  2507  0674  2E71               	goto	u1925
  2508  0675  3001               	movlw	1
  2509  0676  00CF               	movwf	??___lwmod
  2510  0677  084F               	movf	??___lwmod,w
  2511  0678  07D0               	addwf	___lwmod@counter,f
  2512  0679  2E6E               	goto	l1761
  2513  067A                     l1763:	
  2514  067A  084C               	movf	___lwmod@divisor+1,w
  2515  067B  024E               	subwf	___lwmod@dividend+1,w
  2516  067C  1D03               	skipz
  2517  067D  2E80               	goto	u1945
  2518  067E  084B               	movf	___lwmod@divisor,w
  2519  067F  024D               	subwf	___lwmod@dividend,w
  2520  0680                     u1945:	
  2521  0680  1C03               	skipc
  2522  0681  2E86               	goto	l1767
  2523  0682  084B               	movf	___lwmod@divisor,w
  2524  0683  02CD               	subwf	___lwmod@dividend,f
  2525  0684  084C               	movf	___lwmod@divisor+1,w
  2526  0685  3BCE               	subwfb	___lwmod@dividend+1,f
  2527  0686                     l1767:	
  2528  0686  3001               	movlw	1
  2529  0687                     u1955:	
  2530  0687  36CC               	lsrf	___lwmod@divisor+1,f
  2531  0688  0CCB               	rrf	___lwmod@divisor,f
  2532  0689  0B89               	decfsz	9,f
  2533  068A  2E87               	goto	u1955
  2534  068B  3001               	movlw	1
  2535  068C  02D0               	subwf	___lwmod@counter,f
  2536  068D  1D03               	btfss	3,2
  2537  068E  2E7A               	goto	l1763
  2538  068F                     l1771:	
  2539  068F  084E               	movf	___lwmod@dividend+1,w
  2540  0690  00CC               	movwf	?___lwmod+1
  2541  0691  084D               	movf	___lwmod@dividend,w
  2542  0692  00CB               	movwf	?___lwmod
  2543  0693  0008               	return
  2544  0694                     __end_of___lwmod:	
  2545                           
  2546                           	psect	text3
  2547  0602                     __ptext3:	
  2548 ;; *************** function ___lwdiv *****************
  2549 ;; Defined at:
  2550 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  divisor         2    6[BANK0 ] unsigned int 
  2553 ;;  dividend        2    8[BANK0 ] unsigned int 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  quotient        2   11[BANK0 ] unsigned int 
  2556 ;;  counter         1   13[BANK0 ] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  2    6[BANK0 ] unsigned int 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2566 ;;      Params:         0       4       0       0       0       0       0       0
  2567 ;;      Locals:         0       3       0       0       0       0       0       0
  2568 ;;      Temps:          0       1       0       0       0       0       0       0
  2569 ;;      Totals:         0       8       0       0       0       0       0       0
  2570 ;;Total ram usage:        8 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    1
  2573 ;; This function calls:
  2574 ;;		Nothing
  2575 ;; This function is called by:
  2576 ;;		_wyswietl
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           
  2581                           ;psect for function ___lwdiv
  2582  0602                     ___lwdiv:	
  2583                           
  2584                           ;incstack = 0
  2585                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2586  0602  0020               	movlb	0	; select bank0
  2587  0603  01D6               	clrf	___lwdiv@quotient
  2588  0604  01D7               	clrf	___lwdiv@quotient+1
  2589  0605  0851               	movf	___lwdiv@divisor,w
  2590  0606  0452               	iorwf	___lwdiv@divisor+1,w
  2591  0607  1903               	btfsc	3,2
  2592  0608  2E32               	goto	l1227
  2593  0609  01D8               	clrf	___lwdiv@counter
  2594  060A  0AD8               	incf	___lwdiv@counter,f
  2595  060B                     l1215:	
  2596  060B  1BD2               	btfsc	___lwdiv@divisor+1,7
  2597  060C  2E17               	goto	l1217
  2598  060D  3001               	movlw	1
  2599  060E                     u975:	
  2600  060E  35D1               	lslf	___lwdiv@divisor,f
  2601  060F  0DD2               	rlf	___lwdiv@divisor+1,f
  2602  0610  0B89               	decfsz	9,f
  2603  0611  2E0E               	goto	u975
  2604  0612  3001               	movlw	1
  2605  0613  00D5               	movwf	??___lwdiv
  2606  0614  0855               	movf	??___lwdiv,w
  2607  0615  07D8               	addwf	___lwdiv@counter,f
  2608  0616  2E0B               	goto	l1215
  2609  0617                     l1217:	
  2610  0617  3001               	movlw	1
  2611  0618                     u995:	
  2612  0618  35D6               	lslf	___lwdiv@quotient,f
  2613  0619  0DD7               	rlf	___lwdiv@quotient+1,f
  2614  061A  0B89               	decfsz	9,f
  2615  061B  2E18               	goto	u995
  2616  061C  0852               	movf	___lwdiv@divisor+1,w
  2617  061D  0254               	subwf	___lwdiv@dividend+1,w
  2618  061E  1D03               	skipz
  2619  061F  2E22               	goto	u1005
  2620  0620  0851               	movf	___lwdiv@divisor,w
  2621  0621  0253               	subwf	___lwdiv@dividend,w
  2622  0622                     u1005:	
  2623  0622  1C03               	skipc
  2624  0623  2E29               	goto	l1223
  2625  0624  0851               	movf	___lwdiv@divisor,w
  2626  0625  02D3               	subwf	___lwdiv@dividend,f
  2627  0626  0852               	movf	___lwdiv@divisor+1,w
  2628  0627  3BD4               	subwfb	___lwdiv@dividend+1,f
  2629  0628  1456               	bsf	___lwdiv@quotient,0
  2630  0629                     l1223:	
  2631  0629  3001               	movlw	1
  2632  062A                     u1015:	
  2633  062A  36D2               	lsrf	___lwdiv@divisor+1,f
  2634  062B  0CD1               	rrf	___lwdiv@divisor,f
  2635  062C  0B89               	decfsz	9,f
  2636  062D  2E2A               	goto	u1015
  2637  062E  3001               	movlw	1
  2638  062F  02D8               	subwf	___lwdiv@counter,f
  2639  0630  1D03               	btfss	3,2
  2640  0631  2E17               	goto	l1217
  2641  0632                     l1227:	
  2642  0632  0857               	movf	___lwdiv@quotient+1,w
  2643  0633  00D2               	movwf	?___lwdiv+1
  2644  0634  0856               	movf	___lwdiv@quotient,w
  2645  0635  00D1               	movwf	?___lwdiv
  2646  0636  0008               	return
  2647  0637                     __end_of___lwdiv:	
  2648                           
  2649                           	psect	text4
  2650  0694                     __ptext4:	
  2651 ;; *************** function _write_flash *****************
  2652 ;; Defined at:
  2653 ;;		line 645 in file "main.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  adr_hi          1    wreg     unsigned char 
  2656 ;;  adr_lo          1    0[BANK0 ] unsigned char 
  2657 ;;  data_lo         1    1[BANK0 ] unsigned char 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  adr_hi          1    4[BANK0 ] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;		None               void
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0, pclath, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2669 ;;      Params:         0       2       0       0       0       0       0       0
  2670 ;;      Locals:         0       1       0       0       0       0       0       0
  2671 ;;      Temps:          0       2       0       0       0       0       0       0
  2672 ;;      Totals:         0       5       0       0       0       0       0       0
  2673 ;;Total ram usage:        5 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; Hardware stack levels required when called:    2
  2676 ;; This function calls:
  2677 ;;		_unlock_flash
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           
  2684                           ;psect for function _write_flash
  2685  0694                     _write_flash:	
  2686                           
  2687                           ;incstack = 0
  2688                           ; Regs used in _write_flash: [wreg+status,2+status,0+pclath+cstack]
  2689                           ;write_flash@adr_hi stored from wreg
  2690  0694  0020               	movlb	0	; select bank0
  2691  0695  00CF               	movwf	write_flash@adr_hi
  2692                           
  2693                           ;main.c: 647: INTCONbits.GIE = 0;
  2694  0696  138B               	bcf	11,7	;volatile
  2695                           
  2696                           ;main.c: 648: PMCON1bits.CFGS=0;
  2697  0697  0023               	movlb	3	; select bank3
  2698  0698  1315               	bcf	21,6	;volatile
  2699                           
  2700                           ;main.c: 650: PMADRH=adr_hi;
  2701  0699  0020               	movlb	0	; select bank0
  2702  069A  084F               	movf	write_flash@adr_hi,w
  2703  069B  0023               	movlb	3	; select bank3
  2704  069C  0092               	movwf	18	;volatile
  2705                           
  2706                           ;main.c: 651: PMADRL=adr_lo;
  2707  069D  0020               	movlb	0	; select bank0
  2708  069E  084B               	movf	write_flash@adr_lo,w
  2709  069F  0023               	movlb	3	; select bank3
  2710  06A0  0091               	movwf	17	;volatile
  2711                           
  2712                           ;main.c: 653: PMCON1bits.FREE = 0;
  2713  06A1  1215               	bcf	21,4	;volatile
  2714                           
  2715                           ;main.c: 654: PMCON1bits.LWLO=1;
  2716  06A2  1695               	bsf	21,5	;volatile
  2717                           
  2718                           ;main.c: 655: PMCON1bits.WREN=1;
  2719  06A3  1515               	bsf	21,2	;volatile
  2720                           
  2721                           ;main.c: 657: PMDATL=data_lo;
  2722  06A4  0020               	movlb	0	; select bank0
  2723  06A5  084C               	movf	write_flash@data_lo,w
  2724  06A6  0023               	movlb	3	; select bank3
  2725  06A7  0093               	movwf	19	;volatile
  2726                           
  2727                           ;main.c: 658: PMDATH = 0;
  2728  06A8  0194               	clrf	20	;volatile
  2729                           
  2730                           ;main.c: 661: PMCON1bits.LWLO = 0;
  2731  06A9  1295               	bcf	21,5	;volatile
  2732                           
  2733                           ;main.c: 662: unlock_flash();
  2734  06AA  3187  271D  3186   	fcall	_unlock_flash
  2735                           
  2736                           ;main.c: 663: _delay((unsigned long)((3)*(8000000/4000.0)));
  2737  06AD  3008               	movlw	8
  2738  06AE  0020               	movlb	0	; select bank0
  2739  06AF  00CE               	movwf	??_write_flash+1
  2740  06B0  30C9               	movlw	201
  2741  06B1  00CD               	movwf	??_write_flash
  2742  06B2                     u2717:	
  2743  06B2  0BCD               	decfsz	??_write_flash,f
  2744  06B3  2EB2               	goto	u2717
  2745  06B4  0BCE               	decfsz	??_write_flash+1,f
  2746  06B5  2EB2               	goto	u2717
  2747  06B6  3200               	nop2
  2748                           
  2749                           ;main.c: 664: PMCON1bits.WREN = 0;
  2750  06B7  0023               	movlb	3	; select bank3
  2751  06B8  1115               	bcf	21,2	;volatile
  2752                           
  2753                           ;main.c: 666: INTCONbits.GIE = 1;
  2754  06B9  178B               	bsf	11,7	;volatile
  2755  06BA  0008               	return
  2756  06BB                     __end_of_write_flash:	
  2757                           
  2758                           	psect	text5
  2759  06DB                     __ptext5:	
  2760 ;; *************** function _read_flash *****************
  2761 ;; Defined at:
  2762 ;;		line 613 in file "main.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  adrs_hi         1    wreg     unsigned char 
  2765 ;;  adrs_lo         1    0[BANK0 ] unsigned char 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  adrs_hi         1    1[BANK0 ] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      unsigned char 
  2770 ;; Registers used:
  2771 ;;		wreg
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2777 ;;      Params:         0       1       0       0       0       0       0       0
  2778 ;;      Locals:         0       1       0       0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0
  2780 ;;      Totals:         0       2       0       0       0       0       0       0
  2781 ;;Total ram usage:        2 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    1
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_main
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           
  2792                           ;psect for function _read_flash
  2793  06DB                     _read_flash:	
  2794                           
  2795                           ;incstack = 0
  2796                           ; Regs used in _read_flash: [wreg]
  2797                           ;read_flash@adrs_hi stored from wreg
  2798  06DB  0020               	movlb	0	; select bank0
  2799  06DC  00CC               	movwf	read_flash@adrs_hi
  2800                           
  2801                           ;main.c: 617: PMCON1bits.CFGS=0;
  2802  06DD  0023               	movlb	3	; select bank3
  2803  06DE  1315               	bcf	21,6	;volatile
  2804                           
  2805                           ;main.c: 618: PMADRL=adrs_lo ;
  2806  06DF  0020               	movlb	0	; select bank0
  2807  06E0  084B               	movf	read_flash@adrs_lo,w
  2808  06E1  0023               	movlb	3	; select bank3
  2809  06E2  0091               	movwf	17	;volatile
  2810                           
  2811                           ;main.c: 619: PMADRH=adrs_hi;
  2812  06E3  0020               	movlb	0	; select bank0
  2813  06E4  084C               	movf	read_flash@adrs_hi,w
  2814  06E5  0023               	movlb	3	; select bank3
  2815  06E6  0092               	movwf	18	;volatile
  2816                           
  2817                           ;main.c: 621: PMCON1bits.RD = 1;
  2818  06E7  1415               	bsf	21,0	;volatile
  2819                           
  2820                           ;main.c: 622: __nop();
  2821  06E8  0000               	nop
  2822                           
  2823                           ;main.c: 623: __nop();
  2824  06E9  0000               	nop
  2825                           
  2826                           ;main.c: 625: return PMDATL;
  2827  06EA  0023               	movlb	3	; select bank3
  2828  06EB  0813               	movf	19,w	;volatile
  2829  06EC  0008               	return
  2830  06ED                     __end_of_read_flash:	
  2831                           
  2832                           	psect	text6
  2833  06BB                     __ptext6:	
  2834 ;; *************** function _erase_flash *****************
  2835 ;; Defined at:
  2836 ;;		line 670 in file "main.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  adr_hi          1    wreg     unsigned char 
  2839 ;;  adr_lo          1    0[BANK0 ] unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  adr_hi          1    3[BANK0 ] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;		None               void
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, pclath, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2851 ;;      Params:         0       1       0       0       0       0       0       0
  2852 ;;      Locals:         0       1       0       0       0       0       0       0
  2853 ;;      Temps:          0       2       0       0       0       0       0       0
  2854 ;;      Totals:         0       4       0       0       0       0       0       0
  2855 ;;Total ram usage:        4 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    2
  2858 ;; This function calls:
  2859 ;;		_unlock_flash
  2860 ;; This function is called by:
  2861 ;;		_main
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function _erase_flash
  2867  06BB                     _erase_flash:	
  2868                           
  2869                           ;incstack = 0
  2870                           ; Regs used in _erase_flash: [wreg+status,2+status,0+pclath+cstack]
  2871                           ;erase_flash@adr_hi stored from wreg
  2872  06BB  0020               	movlb	0	; select bank0
  2873  06BC  00CE               	movwf	erase_flash@adr_hi
  2874                           
  2875                           ;main.c: 672: INTCONbits.GIE = 0;
  2876  06BD  138B               	bcf	11,7	;volatile
  2877                           
  2878                           ;main.c: 673: PMCON1bits.CFGS=0;
  2879  06BE  0023               	movlb	3	; select bank3
  2880  06BF  1315               	bcf	21,6	;volatile
  2881                           
  2882                           ;main.c: 675: PMADRH=adr_hi;
  2883  06C0  0020               	movlb	0	; select bank0
  2884  06C1  084E               	movf	erase_flash@adr_hi,w
  2885  06C2  0023               	movlb	3	; select bank3
  2886  06C3  0092               	movwf	18	;volatile
  2887                           
  2888                           ;main.c: 676: PMADRL=adr_lo;
  2889  06C4  0020               	movlb	0	; select bank0
  2890  06C5  084B               	movf	erase_flash@adr_lo,w
  2891  06C6  0023               	movlb	3	; select bank3
  2892  06C7  0091               	movwf	17	;volatile
  2893                           
  2894                           ;main.c: 678: PMCON1bits.FREE = 1;
  2895  06C8  1615               	bsf	21,4	;volatile
  2896                           
  2897                           ;main.c: 679: PMCON1bits.WREN=1;
  2898  06C9  1515               	bsf	21,2	;volatile
  2899                           
  2900                           ;main.c: 680: unlock_flash();
  2901  06CA  3187  271D  3186   	fcall	_unlock_flash
  2902                           
  2903                           ;main.c: 681: _delay((unsigned long)((3)*(8000000/4000.0)));
  2904  06CD  3008               	movlw	8
  2905  06CE  0020               	movlb	0	; select bank0
  2906  06CF  00CD               	movwf	??_erase_flash+1
  2907  06D0  30C9               	movlw	201
  2908  06D1  00CC               	movwf	??_erase_flash
  2909  06D2                     u2727:	
  2910  06D2  0BCC               	decfsz	??_erase_flash,f
  2911  06D3  2ED2               	goto	u2727
  2912  06D4  0BCD               	decfsz	??_erase_flash+1,f
  2913  06D5  2ED2               	goto	u2727
  2914  06D6  3200               	nop2
  2915                           
  2916                           ;main.c: 682: PMCON1bits.WREN = 0;
  2917  06D7  0023               	movlb	3	; select bank3
  2918  06D8  1115               	bcf	21,2	;volatile
  2919                           
  2920                           ;main.c: 684: INTCONbits.GIE = 1;
  2921  06D9  178B               	bsf	11,7	;volatile
  2922  06DA  0008               	return
  2923  06DB                     __end_of_erase_flash:	
  2924                           
  2925                           	psect	text7
  2926  071D                     __ptext7:	
  2927 ;; *************** function _unlock_flash *****************
  2928 ;; Defined at:
  2929 ;;		line 632 in file "main.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;		None
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;		None
  2934 ;; Return value:  Size  Location     Type
  2935 ;;		None               void
  2936 ;; Registers used:
  2937 ;;		wreg
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2943 ;;      Params:         0       0       0       0       0       0       0       0
  2944 ;;      Locals:         0       0       0       0       0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0       0       0       0
  2946 ;;      Totals:         0       0       0       0       0       0       0       0
  2947 ;;Total ram usage:        0 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    1
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_write_flash
  2954 ;;		_erase_flash
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           
  2959                           ;psect for function _unlock_flash
  2960  071D                     _unlock_flash:	
  2961                           
  2962                           ;main.c: 634: PMCON2=0x55;
  2963                           
  2964                           ;incstack = 0
  2965                           ; Regs used in _unlock_flash: [wreg]
  2966  071D  3055               	movlw	85
  2967  071E  0023               	movlb	3	; select bank3
  2968  071F  0096               	movwf	22	;volsfr
  2969                           
  2970                           ;main.c: 635: PMCON2=0xAA;
  2971  0720  30AA               	movlw	170
  2972  0721  0096               	movwf	22	;volsfr
  2973                           
  2974                           ;main.c: 636: PMCON1bits.WR=1;
  2975  0722  1495               	bsf	21,1	;volatile
  2976                           
  2977                           ;main.c: 637: __nop();
  2978  0723  0000               	nop
  2979                           
  2980                           ;main.c: 638: __nop();
  2981  0724  0000               	nop
  2982  0725  0008               	return
  2983  0726                     __end_of_unlock_flash:	
  2984                           
  2985                           	psect	text8
  2986  0637                     __ptext8:	
  2987 ;; *************** function ___lmul *****************
  2988 ;; Defined at:
  2989 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2992 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  product         4    8[BANK0 ] unsigned long 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  4    0[BANK0 ] unsigned long 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3004 ;;      Params:         0       8       0       0       0       0       0       0
  3005 ;;      Locals:         0       4       0       0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0
  3007 ;;      Totals:         0      12       0       0       0       0       0       0
  3008 ;;Total ram usage:       12 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    1
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_main
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function ___lmul
  3020  0637                     ___lmul:	
  3021                           
  3022                           ;incstack = 0
  3023                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3024  0637  3000               	movlw	0
  3025  0638  0020               	movlb	0	; select bank0
  3026  0639  00D6               	movwf	___lmul@product+3
  3027  063A  3000               	movlw	0
  3028  063B  00D5               	movwf	___lmul@product+2
  3029  063C  3000               	movlw	0
  3030  063D  00D4               	movwf	___lmul@product+1
  3031  063E  3000               	movlw	0
  3032  063F  00D3               	movwf	___lmul@product
  3033  0640                     l1859:	
  3034  0640  1C4B               	btfss	___lmul@multiplier,0
  3035  0641  2E4A               	goto	l1863
  3036  0642  084F               	movf	___lmul@multiplicand,w
  3037  0643  07D3               	addwf	___lmul@product,f
  3038  0644  0850               	movf	___lmul@multiplicand+1,w
  3039  0645  3DD4               	addwfc	___lmul@product+1,f
  3040  0646  0851               	movf	___lmul@multiplicand+2,w
  3041  0647  3DD5               	addwfc	___lmul@product+2,f
  3042  0648  0852               	movf	___lmul@multiplicand+3,w
  3043  0649  3DD6               	addwfc	___lmul@product+3,f
  3044  064A                     l1863:	
  3045  064A  3001               	movlw	1
  3046  064B                     u2015:	
  3047  064B  35CF               	lslf	___lmul@multiplicand,f
  3048  064C  0DD0               	rlf	___lmul@multiplicand+1,f
  3049  064D  0DD1               	rlf	___lmul@multiplicand+2,f
  3050  064E  0DD2               	rlf	___lmul@multiplicand+3,f
  3051  064F  0B89               	decfsz	9,f
  3052  0650  2E4B               	goto	u2015
  3053  0651  3001               	movlw	1
  3054  0652                     u2025:	
  3055  0652  36CE               	lsrf	___lmul@multiplier+3,f
  3056  0653  0CCD               	rrf	___lmul@multiplier+2,f
  3057  0654  0CCC               	rrf	___lmul@multiplier+1,f
  3058  0655  0CCB               	rrf	___lmul@multiplier,f
  3059  0656  0B89               	decfsz	9,f
  3060  0657  2E52               	goto	u2025
  3061  0658  084E               	movf	___lmul@multiplier+3,w
  3062  0659  044D               	iorwf	___lmul@multiplier+2,w
  3063  065A  044C               	iorwf	___lmul@multiplier+1,w
  3064  065B  044B               	iorwf	___lmul@multiplier,w
  3065  065C  1D03               	skipz
  3066  065D  2E40               	goto	l1859
  3067  065E  0856               	movf	___lmul@product+3,w
  3068  065F  00CE               	movwf	?___lmul+3
  3069  0660  0855               	movf	___lmul@product+2,w
  3070  0661  00CD               	movwf	?___lmul+2
  3071  0662  0854               	movf	___lmul@product+1,w
  3072  0663  00CC               	movwf	?___lmul+1
  3073  0664  0853               	movf	___lmul@product,w
  3074  0665  00CB               	movwf	?___lmul
  3075  0666  0008               	return
  3076  0667                     __end_of___lmul:	
  3077                           
  3078                           	psect	text9
  3079  05AF                     __ptext9:	
  3080 ;; *************** function ___lldiv *****************
  3081 ;; Defined at:
  3082 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  divisor         4    0[BANK0 ] unsigned long 
  3085 ;;  dividend        4    4[BANK0 ] unsigned long 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  quotient        4    9[BANK0 ] unsigned long 
  3088 ;;  counter         1   13[BANK0 ] unsigned char 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  4    0[BANK0 ] unsigned long 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3098 ;;      Params:         0       8       0       0       0       0       0       0
  3099 ;;      Locals:         0       5       0       0       0       0       0       0
  3100 ;;      Temps:          0       1       0       0       0       0       0       0
  3101 ;;      Totals:         0      14       0       0       0       0       0       0
  3102 ;;Total ram usage:       14 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    1
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_main
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           
  3113                           ;psect for function ___lldiv
  3114  05AF                     ___lldiv:	
  3115                           
  3116                           ;incstack = 0
  3117                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3118  05AF  3000               	movlw	0
  3119  05B0  0020               	movlb	0	; select bank0
  3120  05B1  00D7               	movwf	___lldiv@quotient+3
  3121  05B2  3000               	movlw	0
  3122  05B3  00D6               	movwf	___lldiv@quotient+2
  3123  05B4  3000               	movlw	0
  3124  05B5  00D5               	movwf	___lldiv@quotient+1
  3125  05B6  3000               	movlw	0
  3126  05B7  00D4               	movwf	___lldiv@quotient
  3127  05B8  084E               	movf	___lldiv@divisor+3,w
  3128  05B9  044D               	iorwf	___lldiv@divisor+2,w
  3129  05BA  044C               	iorwf	___lldiv@divisor+1,w
  3130  05BB  044B               	iorwf	___lldiv@divisor,w
  3131  05BC  1903               	skipnz
  3132  05BD  2DF9               	goto	l1891
  3133  05BE  01D8               	clrf	___lldiv@counter
  3134  05BF  0AD8               	incf	___lldiv@counter,f
  3135  05C0                     l1877:	
  3136  05C0  1BCE               	btfsc	___lldiv@divisor+3,7
  3137  05C1  2DCE               	goto	l1879
  3138  05C2  3001               	movlw	1
  3139  05C3                     u2055:	
  3140  05C3  35CB               	lslf	___lldiv@divisor,f
  3141  05C4  0DCC               	rlf	___lldiv@divisor+1,f
  3142  05C5  0DCD               	rlf	___lldiv@divisor+2,f
  3143  05C6  0DCE               	rlf	___lldiv@divisor+3,f
  3144  05C7  0B89               	decfsz	9,f
  3145  05C8  2DC3               	goto	u2055
  3146  05C9  3001               	movlw	1
  3147  05CA  00D3               	movwf	??___lldiv
  3148  05CB  0853               	movf	??___lldiv,w
  3149  05CC  07D8               	addwf	___lldiv@counter,f
  3150  05CD  2DC0               	goto	l1877
  3151  05CE                     l1879:	
  3152  05CE  3001               	movlw	1
  3153  05CF                     u2075:	
  3154  05CF  35D4               	lslf	___lldiv@quotient,f
  3155  05D0  0DD5               	rlf	___lldiv@quotient+1,f
  3156  05D1  0DD6               	rlf	___lldiv@quotient+2,f
  3157  05D2  0DD7               	rlf	___lldiv@quotient+3,f
  3158  05D3  0B89               	decfsz	9,f
  3159  05D4  2DCF               	goto	u2075
  3160  05D5  084E               	movf	___lldiv@divisor+3,w
  3161  05D6  0252               	subwf	___lldiv@dividend+3,w
  3162  05D7  1D03               	skipz
  3163  05D8  2DE3               	goto	u2085
  3164  05D9  084D               	movf	___lldiv@divisor+2,w
  3165  05DA  0251               	subwf	___lldiv@dividend+2,w
  3166  05DB  1D03               	skipz
  3167  05DC  2DE3               	goto	u2085
  3168  05DD  084C               	movf	___lldiv@divisor+1,w
  3169  05DE  0250               	subwf	___lldiv@dividend+1,w
  3170  05DF  1D03               	skipz
  3171  05E0  2DE3               	goto	u2085
  3172  05E1  084B               	movf	___lldiv@divisor,w
  3173  05E2  024F               	subwf	___lldiv@dividend,w
  3174  05E3                     u2085:	
  3175  05E3  1C03               	skipc
  3176  05E4  2DEE               	goto	l1887
  3177  05E5  084B               	movf	___lldiv@divisor,w
  3178  05E6  02CF               	subwf	___lldiv@dividend,f
  3179  05E7  084C               	movf	___lldiv@divisor+1,w
  3180  05E8  3BD0               	subwfb	___lldiv@dividend+1,f
  3181  05E9  084D               	movf	___lldiv@divisor+2,w
  3182  05EA  3BD1               	subwfb	___lldiv@dividend+2,f
  3183  05EB  084E               	movf	___lldiv@divisor+3,w
  3184  05EC  3BD2               	subwfb	___lldiv@dividend+3,f
  3185  05ED  1454               	bsf	___lldiv@quotient,0
  3186  05EE                     l1887:	
  3187  05EE  3001               	movlw	1
  3188  05EF                     u2095:	
  3189  05EF  36CE               	lsrf	___lldiv@divisor+3,f
  3190  05F0  0CCD               	rrf	___lldiv@divisor+2,f
  3191  05F1  0CCC               	rrf	___lldiv@divisor+1,f
  3192  05F2  0CCB               	rrf	___lldiv@divisor,f
  3193  05F3  0B89               	decfsz	9,f
  3194  05F4  2DEF               	goto	u2095
  3195  05F5  3001               	movlw	1
  3196  05F6  02D8               	subwf	___lldiv@counter,f
  3197  05F7  1D03               	btfss	3,2
  3198  05F8  2DCE               	goto	l1879
  3199  05F9                     l1891:	
  3200  05F9  0857               	movf	___lldiv@quotient+3,w
  3201  05FA  00CE               	movwf	?___lldiv+3
  3202  05FB  0856               	movf	___lldiv@quotient+2,w
  3203  05FC  00CD               	movwf	?___lldiv+2
  3204  05FD  0855               	movf	___lldiv@quotient+1,w
  3205  05FE  00CC               	movwf	?___lldiv+1
  3206  05FF  0854               	movf	___lldiv@quotient,w
  3207  0600  00CB               	movwf	?___lldiv
  3208  0601  0008               	return
  3209  0602                     __end_of___lldiv:	
  3210                           
  3211                           	psect	intentry
  3212  0004                     __pintentry:	
  3213 ;; *************** function _ISR *****************
  3214 ;; Defined at:
  3215 ;;		line 690 in file "main.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;		None
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;		None
  3220 ;; Return value:  Size  Location     Type
  3221 ;;		None               void
  3222 ;; Registers used:
  3223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3229 ;;      Params:         0       0       0       0       0       0       0       0
  3230 ;;      Locals:         0       0       0       0       0       0       0       0
  3231 ;;      Temps:          5       0       0       0       0       0       0       0
  3232 ;;      Totals:         5       0       0       0       0       0       0       0
  3233 ;;Total ram usage:        5 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		Interrupt level 1
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242  0004                     _ISR:	
  3243                           
  3244                           ;incstack = 0
  3245                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  3246  0004  3180               	pagesel	$
  3247  0005  0020               	movlb	0	; select bank0
  3248  0006  087F               	movf	127,w
  3249  0007  00F9               	movwf	??_ISR+4
  3250                           
  3251                           ;main.c: 693: if ( INTCONbits.TMR0IF == 1 ) {
  3252  0008  1D0B               	btfss	11,2	;volatile
  3253  0009  28DE               	goto	i1l273
  3254                           
  3255                           ;main.c: 695: if (multi>1) {
  3256  000A  3002               	movlw	2
  3257  000B  0273               	subwf	_multi,w	;volatile
  3258  000C  1C03               	skipc
  3259  000D  287C               	goto	i1l1713
  3260                           
  3261                           ;main.c: 697: LATB |= 0b00000011;
  3262  000E  3003               	movlw	3
  3263  000F  00F5               	movwf	??_ISR
  3264  0010  0875               	movf	??_ISR,w
  3265  0011  0022               	movlb	2	; select bank2
  3266  0012  048D               	iorwf	13,f	;volatile
  3267                           
  3268                           ;main.c: 698: LATC = 255;
  3269  0013  30FF               	movlw	255
  3270  0014  008E               	movwf	14	;volatile
  3271                           
  3272                           ;main.c: 700: if(idx==0){
  3273  0015  0871               	movf	_idx,w	;volatile
  3274  0016  1D03               	btfss	3,2
  3275  0017  2844               	goto	i1l1695
  3276                           
  3277                           ;main.c: 701: if (kro_1 == 1) {
  3278  0018  0021               	movlb	1	; select bank1
  3279  0019  032C               	decf	_kro_1^(0+128),w	;volatile
  3280  001A  1D03               	btfss	3,2
  3281  001B  2827               	goto	i1l1689
  3282                           
  3283                           ;main.c: 702: LATC = ~(cyfry[cyf_1] | (1<<7));
  3284  001C  0020               	movlb	0	; select bank0
  3285  001D  0869               	movf	_cyf_1,w	;volatile
  3286  001E  3E00               	addlw	low (_cyfry| (0+32768))
  3287  001F  0084               	movwf	4
  3288  0020  3087               	movlw	high (_cyfry| (0+32768))
  3289  0021  1803               	skipnc
  3290  0022  3E01               	addlw	1
  3291  0023  0085               	movwf	5
  3292  0024  0800               	movf	0,w	;code access
  3293  0025  3880               	iorlw	128
  3294  0026  2835               	goto	L5
  3295  0027                     i1l1689:	
  3296                           ;main.c: 704: }else if( cyf_1 != 10 ){
  3297                           
  3298                           ;main.c: 703: LATB &= ~an[idx] ;
  3299                           
  3300  0027  300A               	movlw	10
  3301  0028  0020               	movlb	0	; select bank0
  3302  0029  0669               	xorwf	_cyf_1,w	;volatile
  3303  002A  1903               	btfsc	3,2
  3304  002B  2844               	goto	i1l1695
  3305                           
  3306                           ;main.c: 705: LATC = ~(cyfry[cyf_1] & ~(1<<7));
  3307  002C  0869               	movf	_cyf_1,w	;volatile
  3308  002D  3E00               	addlw	low (_cyfry| (0+32768))
  3309  002E  0084               	movwf	4
  3310  002F  3087               	movlw	high (_cyfry| (0+32768))
  3311  0030  1803               	skipnc
  3312  0031  3E01               	addlw	1
  3313  0032  0085               	movwf	5
  3314  0033  0800               	movf	0,w	;code access
  3315  0034  397F               	andlw	127
  3316  0035                     L5:	
  3317  0035  3AFF               	xorlw	255
  3318  0036  0022               	movlb	2	; select bank2
  3319  0037  008E               	movwf	14	;volatile
  3320                           
  3321                           ;main.c: 706: LATB &= ~an[idx] ;
  3322  0038  0871               	movf	_idx,w	;volatile
  3323  0039  3E0F               	addlw	low (_an| (0+32768))
  3324  003A  0084               	movwf	4
  3325  003B  3087               	movlw	high (_an| (0+32768))
  3326  003C  1803               	skipnc
  3327  003D  3E01               	addlw	1
  3328  003E  0085               	movwf	5
  3329  003F  0800               	movf	0,w	;code access
  3330  0040  3AFF               	xorlw	255
  3331  0041  00F5               	movwf	??_ISR
  3332  0042  0875               	movf	??_ISR,w
  3333  0043  058D               	andwf	13,f	;volatile
  3334  0044                     i1l1695:	
  3335                           
  3336                           ;main.c: 707: }
  3337                           ;main.c: 708: }
  3338                           ;main.c: 710: if(idx==1){
  3339  0044  0371               	decf	_idx,w	;volatile
  3340  0045  1D03               	btfss	3,2
  3341  0046  2873               	goto	i1l1709
  3342                           
  3343                           ;main.c: 711: if (kro_2 == 1) {
  3344  0047  0021               	movlb	1	; select bank1
  3345  0048  032D               	decf	_kro_2^(0+128),w	;volatile
  3346  0049  1D03               	btfss	3,2
  3347  004A  2856               	goto	i1l1703
  3348                           
  3349                           ;main.c: 712: LATC = ~(cyfry[cyf_2] | (1<<7));
  3350  004B  0020               	movlb	0	; select bank0
  3351  004C  086A               	movf	_cyf_2,w	;volatile
  3352  004D  3E00               	addlw	low (_cyfry| (0+32768))
  3353  004E  0084               	movwf	4
  3354  004F  3087               	movlw	high (_cyfry| (0+32768))
  3355  0050  1803               	skipnc
  3356  0051  3E01               	addlw	1
  3357  0052  0085               	movwf	5
  3358  0053  0800               	movf	0,w	;code access
  3359  0054  3880               	iorlw	128
  3360  0055  2864               	goto	L6
  3361  0056                     i1l1703:	
  3362                           ;main.c: 714: }else if( cyf_2 != 10 ){
  3363                           
  3364                           ;main.c: 713: LATB &= ~an[idx] ;
  3365                           
  3366  0056  300A               	movlw	10
  3367  0057  0020               	movlb	0	; select bank0
  3368  0058  066A               	xorwf	_cyf_2,w	;volatile
  3369  0059  1903               	btfsc	3,2
  3370  005A  2873               	goto	i1l1709
  3371                           
  3372                           ;main.c: 715: LATC = ~(cyfry[cyf_2] & ~(1<<7));
  3373  005B  086A               	movf	_cyf_2,w	;volatile
  3374  005C  3E00               	addlw	low (_cyfry| (0+32768))
  3375  005D  0084               	movwf	4
  3376  005E  3087               	movlw	high (_cyfry| (0+32768))
  3377  005F  1803               	skipnc
  3378  0060  3E01               	addlw	1
  3379  0061  0085               	movwf	5
  3380  0062  0800               	movf	0,w	;code access
  3381  0063  397F               	andlw	127
  3382  0064                     L6:	
  3383  0064  3AFF               	xorlw	255
  3384  0065  0022               	movlb	2	; select bank2
  3385  0066  008E               	movwf	14	;volatile
  3386                           
  3387                           ;main.c: 716: LATB &= ~an[idx] ;
  3388  0067  0871               	movf	_idx,w	;volatile
  3389  0068  3E0F               	addlw	low (_an| (0+32768))
  3390  0069  0084               	movwf	4
  3391  006A  3087               	movlw	high (_an| (0+32768))
  3392  006B  1803               	skipnc
  3393  006C  3E01               	addlw	1
  3394  006D  0085               	movwf	5
  3395  006E  0800               	movf	0,w	;code access
  3396  006F  3AFF               	xorlw	255
  3397  0070  00F5               	movwf	??_ISR
  3398  0071  0875               	movf	??_ISR,w
  3399  0072  058D               	andwf	13,f	;volatile
  3400  0073                     i1l1709:	
  3401                           
  3402                           ;main.c: 717: }
  3403                           ;main.c: 718: }
  3404                           ;main.c: 721: if(++idx>1) idx=0;
  3405  0073  3001               	movlw	1
  3406  0074  00F5               	movwf	??_ISR
  3407  0075  0875               	movf	??_ISR,w
  3408  0076  07F1               	addwf	_idx,f	;volatile
  3409  0077  3002               	movlw	2
  3410  0078  0271               	subwf	_idx,w	;volatile
  3411  0079  1803               	btfsc	3,0
  3412  007A  01F1               	clrf	_idx	;volatile
  3413                           
  3414                           ;main.c: 722: multi =0;
  3415  007B  01F3               	clrf	_multi	;volatile
  3416  007C                     i1l1713:	
  3417                           
  3418                           ;main.c: 723: }
  3419                           ;main.c: 724: multi++;
  3420  007C  3001               	movlw	1
  3421  007D  00F5               	movwf	??_ISR
  3422  007E  0875               	movf	??_ISR,w
  3423  007F  07F3               	addwf	_multi,f	;volatile
  3424                           
  3425                           ;main.c: 728: if (timer1 >0) {
  3426  0080  0020               	movlb	0	; select bank0
  3427  0081  082A               	movf	_timer1,w	;volatile
  3428  0082  042B               	iorwf	_timer1+1,w	;volatile
  3429  0083  1903               	btfsc	3,2
  3430  0084  2889               	goto	i1l265
  3431                           
  3432                           ;main.c: 729: timer1--;
  3433  0085  3001               	movlw	1
  3434  0086  02AA               	subwf	_timer1,f	;volatile
  3435  0087  3000               	movlw	0
  3436  0088  3BAB               	subwfb	_timer1+1,f	;volatile
  3437  0089                     i1l265:	
  3438                           
  3439                           ;main.c: 730: }
  3440                           ;main.c: 732: if (timer2 >0) {
  3441  0089  0823               	movf	_timer2+3,w	;volatile
  3442  008A  0422               	iorwf	_timer2+2,w	;volatile
  3443  008B  0421               	iorwf	_timer2+1,w	;volatile
  3444  008C  0420               	iorwf	_timer2,w	;volatile
  3445  008D  1903               	skipnz
  3446  008E  289F               	goto	i1l1721
  3447                           
  3448                           ;main.c: 733: timer2--;
  3449  008F  3001               	movlw	1
  3450  0090  00F5               	movwf	??_ISR
  3451  0091  3000               	movlw	0
  3452  0092  00F6               	movwf	??_ISR+1
  3453  0093  3000               	movlw	0
  3454  0094  00F7               	movwf	??_ISR+2
  3455  0095  3000               	movlw	0
  3456  0096  00F8               	movwf	??_ISR+3
  3457  0097  0875               	movf	??_ISR,w
  3458  0098  02A0               	subwf	_timer2,f	;volatile
  3459  0099  0876               	movf	??_ISR+1,w
  3460  009A  3BA1               	subwfb	_timer2+1,f	;volatile
  3461  009B  0877               	movf	??_ISR+2,w
  3462  009C  3BA2               	subwfb	_timer2+2,f	;volatile
  3463  009D  0878               	movf	??_ISR+3,w
  3464  009E  3BA3               	subwfb	_timer2+3,f	;volatile
  3465  009F                     i1l1721:	
  3466                           
  3467                           ;main.c: 734: }
  3468                           ;main.c: 736: if (timer3 >0) {
  3469  009F  082C               	movf	_timer3,w	;volatile
  3470  00A0  042D               	iorwf	_timer3+1,w	;volatile
  3471  00A1  1903               	btfsc	3,2
  3472  00A2  28A7               	goto	i1l1725
  3473                           
  3474                           ;main.c: 737: timer3--;
  3475  00A3  3001               	movlw	1
  3476  00A4  02AC               	subwf	_timer3,f	;volatile
  3477  00A5  3000               	movlw	0
  3478  00A6  3BAD               	subwfb	_timer3+1,f	;volatile
  3479  00A7                     i1l1725:	
  3480                           
  3481                           ;main.c: 738: }
  3482                           ;main.c: 740: if (timer4 >0) {
  3483  00A7  082E               	movf	_timer4,w	;volatile
  3484  00A8  042F               	iorwf	_timer4+1,w	;volatile
  3485  00A9  1903               	btfsc	3,2
  3486  00AA  28AF               	goto	i1l268
  3487                           
  3488                           ;main.c: 741: timer4--;
  3489  00AB  3001               	movlw	1
  3490  00AC  02AE               	subwf	_timer4,f	;volatile
  3491  00AD  3000               	movlw	0
  3492  00AE  3BAF               	subwfb	_timer4+1,f	;volatile
  3493  00AF                     i1l268:	
  3494                           
  3495                           ;main.c: 742: }
  3496                           ;main.c: 744: if (timer5 >0) {
  3497  00AF  0866               	movf	_timer5+3,w	;volatile
  3498  00B0  0465               	iorwf	_timer5+2,w	;volatile
  3499  00B1  0464               	iorwf	_timer5+1,w	;volatile
  3500  00B2  0463               	iorwf	_timer5,w	;volatile
  3501  00B3  1903               	skipnz
  3502  00B4  28C5               	goto	i1l1731
  3503                           
  3504                           ;main.c: 745: timer5--;
  3505  00B5  3001               	movlw	1
  3506  00B6  00F5               	movwf	??_ISR
  3507  00B7  3000               	movlw	0
  3508  00B8  00F6               	movwf	??_ISR+1
  3509  00B9  3000               	movlw	0
  3510  00BA  00F7               	movwf	??_ISR+2
  3511  00BB  3000               	movlw	0
  3512  00BC  00F8               	movwf	??_ISR+3
  3513  00BD  0875               	movf	??_ISR,w
  3514  00BE  02E3               	subwf	_timer5,f	;volatile
  3515  00BF  0876               	movf	??_ISR+1,w
  3516  00C0  3BE4               	subwfb	_timer5+1,f	;volatile
  3517  00C1  0877               	movf	??_ISR+2,w
  3518  00C2  3BE5               	subwfb	_timer5+2,f	;volatile
  3519  00C3  0878               	movf	??_ISR+3,w
  3520  00C4  3BE6               	subwfb	_timer5+3,f	;volatile
  3521  00C5                     i1l1731:	
  3522                           
  3523                           ;main.c: 746: }
  3524                           ;main.c: 748: if (timer6 >0) {
  3525  00C5  0830               	movf	_timer6,w	;volatile
  3526  00C6  0431               	iorwf	_timer6+1,w	;volatile
  3527  00C7  1903               	btfsc	3,2
  3528  00C8  28CD               	goto	i1l1735
  3529                           
  3530                           ;main.c: 749: timer6--;
  3531  00C9  3001               	movlw	1
  3532  00CA  02B0               	subwf	_timer6,f	;volatile
  3533  00CB  3000               	movlw	0
  3534  00CC  3BB1               	subwfb	_timer6+1,f	;volatile
  3535  00CD                     i1l1735:	
  3536                           
  3537                           ;main.c: 750: }
  3538                           ;main.c: 752: if (timer7 >0) {
  3539  00CD  0832               	movf	_timer7,w	;volatile
  3540  00CE  0433               	iorwf	_timer7+1,w	;volatile
  3541  00CF  1903               	btfsc	3,2
  3542  00D0  28D5               	goto	i1l1739
  3543                           
  3544                           ;main.c: 753: timer7--;
  3545  00D1  3001               	movlw	1
  3546  00D2  02B2               	subwf	_timer7,f	;volatile
  3547  00D3  3000               	movlw	0
  3548  00D4  3BB3               	subwfb	_timer7+1,f	;volatile
  3549  00D5                     i1l1739:	
  3550                           
  3551                           ;main.c: 754: }
  3552                           ;main.c: 756: if (timer8 >0) {
  3553  00D5  0834               	movf	_timer8,w	;volatile
  3554  00D6  0435               	iorwf	_timer8+1,w	;volatile
  3555  00D7  1903               	btfsc	3,2
  3556  00D8  28DD               	goto	i1l1743
  3557                           
  3558                           ;main.c: 757: timer8--;
  3559  00D9  3001               	movlw	1
  3560  00DA  02B4               	subwf	_timer8,f	;volatile
  3561  00DB  3000               	movlw	0
  3562  00DC  3BB5               	subwfb	_timer8+1,f	;volatile
  3563  00DD                     i1l1743:	
  3564                           
  3565                           ;main.c: 758: }
  3566                           ;main.c: 759: INTCONbits.TMR0IF = 0;
  3567  00DD  110B               	bcf	11,2	;volatile
  3568  00DE                     i1l273:	
  3569  00DE  0879               	movf	??_ISR+4,w
  3570  00DF  00FF               	movwf	127
  3571  00E0  0009               	retfie
  3572  00E1                     __end_of_ISR:	
  3573  007E                     btemp	set	126	;btemp
  3574  007E                     wtemp	set	126
  3575  007E                     wtemp0	set	126
  3576  0080                     wtemp1	set	128
  3577  0082                     wtemp2	set	130
  3578  0084                     wtemp3	set	132
  3579  0086                     wtemp4	set	134
  3580  0088                     wtemp5	set	136
  3581  007F                     wtemp6	set	127
  3582  007E                     ttemp	set	126
  3583  007E                     ttemp0	set	126
  3584  0081                     ttemp1	set	129
  3585  0084                     ttemp2	set	132
  3586  0087                     ttemp3	set	135
  3587  007F                     ttemp4	set	127
  3588  007E                     ltemp	set	126
  3589  007E                     ltemp0	set	126
  3590  0082                     ltemp1	set	130
  3591  0086                     ltemp2	set	134
  3592  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    17
    Data        4
    BSS         56
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     24      80
    BANK1            80      4      14
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            76      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_wyswietl
    _wyswietl->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11     7      4    3214
                                             17 BANK0      7     3      4
                                              0 BANK1      4     4      0
                            ___lldiv
                             ___lmul
                        _erase_flash
                         _read_flash
                        _write_flash
                           _wyswietl
 ---------------------------------------------------------------------------------
 (1) _wyswietl                                             3     1      2    1600
                                             14 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     556
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     592
                                              6 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _write_flash                                          5     3      2     417
                                              0 BANK0      5     3      2
                       _unlock_flash
 ---------------------------------------------------------------------------------
 (1) _read_flash                                           2     1      1     386
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _erase_flash                                          4     3      1     116
                                              0 BANK0      4     3      1
                       _unlock_flash
 ---------------------------------------------------------------------------------
 (2) _unlock_flash                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     349
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
   ___lmul
   _erase_flash
     _unlock_flash
   _read_flash
   _write_flash
     _unlock_flash
   _wyswietl
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      68       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     18      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      4       E       8       17.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               4C      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      68      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Nov 04 21:47:44 2015

             __CFG_CP$ON 0000                        _x 004A                       _an 070F  
  __size_of_unlock_flash 0009              __CFG_LVP$ON 0000                      l200 0334  
                    l211 048C                      l213 0448                      l216 044C  
                    l226 04FB                      l218 0451                      l190 02F3  
                    l176 0226             ?_erase_flash 004B                      _ISR 0004  
                    u975 060E                      u995 0618                      _PWM 0070  
                    _adc 0024                      _idx 0071                      _moc 0046  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_IESO$ON 0000  
                   ?_ISR 0075                     l2003 0263                     l1223 0629  
                   l1215 060B                     l2103 03CD                     l1217 0617  
                   l2105 03D1                     l2025 029D                     l2009 0278  
                   l1227 0632                     l2115 03ED                     l2123 03FA  
                   l2035 02B7                     l2019 028C                     l2133 042E  
                   l2117 03EE                     l2061 0319                     l2029 02A2  
                   l2127 0402                     l2119 03F5                     l2063 031D  
                   l2161 046F                     l2049 0301                     l2155 0456  
                   l2147 0450                     l2139 044B                     l2067 0322  
                   l2059 0312                     l2181 04BE                     l2165 0471  
                   l2077 0347                     l2191 04F5                     l2175 04AC  
                   l2167 0486                     l2185 04E0                     l1761 066E  
                   l1833 053D                     l1763 067A                     l1771 068F  
                   l1851 05A2                     l1843 0578                     l1863 064A  
                   l1767 0686                     l1891 05F9                     l1859 0640  
                   l1971 01F9                     l1963 01E8                     l1877 05C0  
                   l1973 021E                     l1965 01EE                     l1887 05EE  
                   l1879 05CE                     l1983 023A                     l1993 024D  
                   l1979 0232                     l1999 025E             __CFG_WDTE$ON 0000  
                   u1005 0622                     u1015 062A                     u2015 064B  
                   u2025 0652                     _LATB 010D                     u2055 05C3  
                   _LATC 010E                     u2075 05CF                     u2085 05E3  
                   u2095 05EF                     u2425 032E                     u2707 02FA  
                   u2627 01AC                     u2717 06B2                     u1925 0671  
                   u2637 0248                     u2727 06D2                     u2647 0273  
                   u1945 0680                     u2657 0287                     u1955 0687  
                   u2667 02B2                     u2677 02C5                     u2687 02D4  
                   u2697 02E3             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 011A                     _temp 00A4                     fsr0h 0005  
                   fsr0l 0004                     indf0 0000                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 00E1  
                   ttemp 007E                     wtemp 007E            __CFG_MCLRE$ON 0000  
           _unlock_flash 071D                    ??_ISR 0075                    ?_main 005C  
        __end_of___lldiv 0602          __end_of___lwdiv 0637                    i1l265 0089  
                  i1l273 00DE          __end_of___lwmod 0694                    i1l268 00AF  
                  _START 0036                    _TRISC 008E              _write_flash 0694  
    ___lmul@multiplicand 004F                    _cyf_1 0069                    _cyf_2 006A  
                  _cyf_3 003B                    _kro_1 00AC                    _kro_2 00AD  
                  _kro_3 0044                    _cyfry 0700                    _multi 0073  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F        erase_flash@adr_hi 004E  
      erase_flash@adr_lo 004B          __initialization 00E3             __end_of_main 04FD  
         __CFG_LPBOR$OFF 0000                   ??_main 00A8                   _ADCON1 009E  
                 _ANSELC 018E                   i1l1703 0056                   i1l1721 009F  
                 i1l1713 007C                   i1l1731 00C5                   i1l1725 00A7  
                 i1l1709 0073                   i1l1743 00DD                   i1l1735 00CD  
                 i1l1739 00D5                   i1l1695 0044                   i1l1689 0027  
                 _PMADRH 0192                   _PMADRL 0191                   _PMDATH 0194  
                 _PMDATL 0193                   _PMCON2 0196           __CFG_PWRTE$OFF 0000  
                 ___lmul 0637                   _adr_hi 006C           __CFG_STVREN$ON 0000  
              ??___lldiv 0053                ??___lwdiv 0055                ??___lwmod 004F  
                 _czas_s 0028              _wyswietlacz 0074                   _timer1 002A  
                 _timer2 0020                   _timer3 002C                   _timer4 002E  
                 _timer5 0063                   _timer6 0030                   _timer7 0032  
                 _timer8 0034     __size_of_erase_flash 0020  __end_of__initialization 0117  
       __end_of_wyswietl 05AF           __pcstackCOMMON 0075             __pidataBANK0 0726  
          __end_of_cyfry 070F               __end_of_an 0711           _OPTION_REGbits 0095  
             __pbssBANK0 0020               __pbssBANK1 00A0      _przycisk_minus_flag 0047  
        __CFG_VCAPEN$OFF 0000               __pmaintext 011A                  ?___lmul 004B  
             __pintentry 0004           ___lmul@product 0053               _flaga_temp 003E  
           ?_write_flash 004B           main@liczba_tmp 0061               _czas_flash 0026  
        __size_of___lmul 0030                  ___lldiv 05AF                  ___lwdiv 0602  
                ___lwmod 0667                  _adr_moc 006F                  _adr_low 006D  
             _read_flash 06DB                  __ptext1 04FD                  __ptext2 0667  
                __ptext3 0602                  __ptext4 0694                  __ptext5 06DB  
                __ptext6 06BB                  __ptext7 071D                  __ptext8 0637  
                __ptext9 05AF             __size_of_ISR 00DD                  _czas_ms 00A0  
                _licznik 0072                  _temp_sr 00A6                ?_wyswietl 0059  
                clrloop0 0712                  main@tmp 0060     end_of_initialization 0117  
       _case_wyswietlacz 0038          ___lldiv@divisor 004B          ___lldiv@counter 0058  
     write_flash@data_lo 004C             __pstringtext 0700            _grzalka_numer 006B  
              _PORTBbits 000D               _test_index 0049         __CFG_FOSC$INTOSC 0000  
              _TRISAbits 008C                _TRISBbits 008D               ??_wyswietl 005B  
         __end_of___lmul 0667              ?_read_flash 004B            ??_erase_flash 004C  
    start_initialization 00E3              __end_of_ISR 00E1     __size_of_write_flash 0027  
           _czas_s_reset 0067            ?_unlock_flash 0075                 ??___lmul 0053  
            __pdataBANK0 006C              __pbssBIGRAM 218C              __pbssCOMMON 0070  
              ___latbits 0002            __pcstackBANK0 004B            __pcstackBANK1 00A8  
    __end_of_erase_flash 06DB      __size_of_read_flash 0012                __pnvBANK0 0063  
              __pnvBANK1 00AC           ??_unlock_flash 004B         ___lwdiv@dividend 0053  
               ?___lldiv 004B                 ?___lwdiv 0051                 ?___lwmod 004B  
     _przycisk_plus_flag 0048                _cyf_1_tmp 0039                _cyf_2_tmp 003A  
              _cyf_3_tmp 003C                _flash_moc 0041                _flash_low 0040  
       ___lwdiv@quotient 0056                _kro_1_tmp 0042                _kro_2_tmp 0043  
              _kro_3_tmp 0045        __size_of_wyswietl 00B2                 _LATAbits 010C  
               _LATBbits 010D                clear_ram0 0711        write_flash@adr_hi 004F  
      write_flash@adr_lo 004B                 _START_Fl 0037               _ADCON0bits 009D  
            _erase_flash 06BB                 _WPUBbits 020D        ___lmul@multiplier 004B  
        _czas_przerwa_ms 003D         __size_of___lldiv 0053         __size_of___lwdiv 0035  
       __size_of___lwmod 002D             ??_read_flash 004C               _ANSELAbits 018C  
             _ANSELBbits 018D                 _adr_low2 006E     __end_of_unlock_flash 0726  
        ___lwdiv@divisor 0051          ___lwdiv@counter 0058                 _flash_hi 003F  
          __size_of_main 03E3       __end_of_read_flash 06ED                 main@argc 005C  
               main@argv 005E        read_flash@adrs_hi 004C        read_flash@adrs_lo 004B  
             _INTCONbits 000B            ??_write_flash 004D               _FVRCONbits 0117  
               _wyswietl 04FD                 intlevel1 0000               _PMCON1bits 0195  
       ___lwmod@dividend 004D         ___lldiv@dividend 004F        __CFG_CLKOUTEN$OFF 0000  
             _OSCCONbits 0099              _temp_tabela 218C         ___lldiv@quotient 0054  
        ___lwmod@divisor 004B          ___lwmod@counter 0050           wyswietl@liczba 0059  
             _WDTCONbits 0097      __end_of_write_flash 06BB  
