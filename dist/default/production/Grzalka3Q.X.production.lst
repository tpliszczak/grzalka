

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Nov 04 22:17:49 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1516
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	dabs	1,0x320,16
    29                           	dabs	1,0x2A0,80
    30                           	dabs	1,0x26C,4
    31                           	dabs	1,0x218C,0,_temp_tabela
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  0010                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0015                     	;# 
    52  0016                     	;# 
    53  0016                     	;# 
    54  0017                     	;# 
    55  0018                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001C                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  0090                     	;# 
    64  0091                     	;# 
    65  0092                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0097                     	;# 
    69  0099                     	;# 
    70  009A                     	;# 
    71  009B                     	;# 
    72  009B                     	;# 
    73  009C                     	;# 
    74  009D                     	;# 
    75  009E                     	;# 
    76  010C                     	;# 
    77  010D                     	;# 
    78  010E                     	;# 
    79  0116                     	;# 
    80  0117                     	;# 
    81  011D                     	;# 
    82  018C                     	;# 
    83  018D                     	;# 
    84  018E                     	;# 
    85  0191                     	;# 
    86  0191                     	;# 
    87  0192                     	;# 
    88  0193                     	;# 
    89  0193                     	;# 
    90  0194                     	;# 
    91  0195                     	;# 
    92  0196                     	;# 
    93  0197                     	;# 
    94  0199                     	;# 
    95  019A                     	;# 
    96  019B                     	;# 
    97  019B                     	;# 
    98  019B                     	;# 
    99  019B                     	;# 
   100  019C                     	;# 
   101  019C                     	;# 
   102  019D                     	;# 
   103  019E                     	;# 
   104  019F                     	;# 
   105  020D                     	;# 
   106  0210                     	;# 
   107  0211                     	;# 
   108  0211                     	;# 
   109  0212                     	;# 
   110  0212                     	;# 
   111  0213                     	;# 
   112  0213                     	;# 
   113  0214                     	;# 
   114  0214                     	;# 
   115  0215                     	;# 
   116  0215                     	;# 
   117  0215                     	;# 
   118  0216                     	;# 
   119  0216                     	;# 
   120  0217                     	;# 
   121  0217                     	;# 
   122  0291                     	;# 
   123  0291                     	;# 
   124  0292                     	;# 
   125  0293                     	;# 
   126  0298                     	;# 
   127  0298                     	;# 
   128  0299                     	;# 
   129  029A                     	;# 
   130  0394                     	;# 
   131  0395                     	;# 
   132  0396                     	;# 
   133  0FE4                     	;# 
   134  0FE5                     	;# 
   135  0FE6                     	;# 
   136  0FE7                     	;# 
   137  0FE8                     	;# 
   138  0FE9                     	;# 
   139  0FEA                     	;# 
   140  0FEB                     	;# 
   141  0FED                     	;# 
   142  0FEE                     	;# 
   143  0FEF                     	;_temp_tabela
   144                           
   145                           	psect	idataBANK0
   146  07C3                     __pidataBANK0:	
   147                           
   148                           ;initializer for _adr_hi
   149  07C3  341F               	retlw	31
   150                           
   151                           ;initializer for _adr_low
   152  07C4  34FD               	retlw	253
   153                           
   154                           ;initializer for _adr_low2
   155  07C5  34FE               	retlw	254
   156                           
   157                           ;initializer for _adr_moc
   158  07C6  34FF               	retlw	255
   159                           
   160                           	psect	stringtext
   161  0800                     __pstringtext:	
   162  0800                     _cyfry:	
   163  0800  343F               	retlw	63
   164  0801  3406               	retlw	6
   165  0802  345B               	retlw	91
   166  0803  344F               	retlw	79
   167  0804  3466               	retlw	102
   168  0805  346D               	retlw	109
   169  0806  347D               	retlw	125
   170  0807  3407               	retlw	7
   171  0808  347F               	retlw	127
   172  0809  346F               	retlw	111
   173  080A  3400               	retlw	0
   174  080B  3440               	retlw	64
   175  080C  3463               	retlw	99
   176  080D  341C               	retlw	28
   177  080E  3440               	retlw	64
   178  080F                     __end_of_cyfry:	
   179  080F                     _an:	
   180  080F  3401               	retlw	1
   181  0810  3402               	retlw	2
   182  0811                     __end_of_an:	
   183                           
   184                           	psect	nvBANK0
   185  0064                     __pnvBANK0:	
   186  0064                     _timer5:	
   187  0064                     	ds	4
   188  0068                     _cyf_1:	
   189  0068                     	ds	1
   190  0069                     _cyf_2:	
   191  0069                     	ds	1
   192  006A                     _czas_przerwa_ms:	
   193  006A                     	ds	1
   194  006B                     _grzalka_numer:	
   195  006B                     	ds	1
   196                           
   197                           	psect	nvBANK1
   198  00A8                     __pnvBANK1:	
   199  00A8                     _czas_s_reset:	
   200  00A8                     	ds	2
   201  00AA                     _kro_1:	
   202  00AA                     	ds	1
   203  00AB                     _kro_2:	
   204  00AB                     	ds	1
   205  000B                     _INTCONbits	set	11
   206  000D                     _PORTBbits	set	13
   207  009D                     _ADCON0bits	set	157
   208  009E                     _ADCON1	set	158
   209  0095                     _OPTION_REGbits	set	149
   210  0099                     _OSCCONbits	set	153
   211  008C                     _TRISAbits	set	140
   212  008D                     _TRISBbits	set	141
   213  008E                     _TRISC	set	142
   214  0097                     _WDTCONbits	set	151
   215  0117                     _FVRCONbits	set	279
   216  010C                     _LATAbits	set	268
   217  010D                     _LATB	set	269
   218  010D                     _LATBbits	set	269
   219  010E                     _LATC	set	270
   220  018C                     _ANSELAbits	set	396
   221  018D                     _ANSELBbits	set	397
   222  018E                     _ANSELC	set	398
   223  0192                     _PMADRH	set	402
   224  0191                     _PMADRL	set	401
   225  0195                     _PMCON1bits	set	405
   226  0196                     _PMCON2	set	406
   227  0194                     _PMDATH	set	404
   228  0193                     _PMDATL	set	403
   229  020D                     _WPUBbits	set	525
   230                           
   231                           ; #config settings
   232  0000                     
   233                           	psect	cinit
   234  00E3                     start_initialization:	
   235  00E3                     __initialization:		;BIGRAM
   236                           
   237                           ; Clear objects allocated to BIGRAM
   238  00E3  308C               	movlw	low (0+8588)
   239  00E4  0084               	movwf	4
   240  00E5  3021               	movlw	high (0+8588)
   241  00E6  0085               	movwf	5
   242  00E7  3064               	movlw	100
   243  00E8  00FE               	movwf	btemp
   244  00E9  3000               	movlw	0
   245  00EA  00FF               	movwf	btemp+1
   246  00EB  3187  27AE  3180   	fcall	clear_ram0
   247                           
   248                           ; Clear objects allocated to COMMON
   249  00EE  01F0               	clrf	__pbssCOMMON& (0+127)
   250  00EF  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   251  00F0  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   252  00F1  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   253  00F2  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   254                           
   255                           ; Clear objects allocated to BANK0
   256  00F3  3020               	movlw	low __pbssBANK0
   257  00F4  0084               	movwf	4
   258  00F5  3000               	movlw	high __pbssBANK0
   259  00F6  0085               	movwf	5
   260  00F7  302C               	movlw	44
   261  00F8  00FE               	movwf	btemp
   262  00F9  3000               	movlw	0
   263  00FA  00FF               	movwf	btemp+1
   264  00FB  3187  27AE  3180   	fcall	clear_ram0
   265                           
   266                           ; Clear objects allocated to BANK1
   267  00FE  0021               	movlb	1	; select bank1
   268  00FF  01A0               	clrf	__pbssBANK1& (0+127)
   269  0100  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   270  0101  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   271  0102  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   272  0103  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   273  0104  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   274  0105  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   275  0106  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   276                           
   277                           ; Initialize objects allocated to BANK0
   278  0107  0020               	movlb	0	; select bank0
   279  0108  3187  27C3  3180   	fcall	__pidataBANK0	;fetch initializer
   280  010B  00EC               	movwf	__pdataBANK0& (0+127)
   281  010C  3187  27C4  3180   	fcall	__pidataBANK0+1	;fetch initializer
   282  010F  00ED               	movwf	(__pdataBANK0+1)& (0+127)
   283  0110  3187  27C5  3180   	fcall	__pidataBANK0+2	;fetch initializer
   284  0113  00EE               	movwf	(__pdataBANK0+2)& (0+127)
   285  0114  3187  27C6         	fcall	__pidataBANK0+3	;fetch initializer
   286  0116  00EF               	movwf	(__pdataBANK0+3)& (0+127)
   287  0117                     end_of_initialization:	
   288                           ;End of C runtime variable initialization code
   289                           
   290  0117                     __end_of__initialization:	
   291  0117  0020               	movlb	0
   292  0118  3181  291A         	ljmp	_main	;jump to C main() function
   293                           
   294                           	psect	bssCOMMON
   295  0070                     __pbssCOMMON:	
   296  0070                     _PWM:	
   297  0070                     	ds	1
   298  0071                     _idx:	
   299  0071                     	ds	1
   300  0072                     _licznik:	
   301  0072                     	ds	1
   302  0073                     _multi:	
   303  0073                     	ds	1
   304  0074                     _wyswietlacz:	
   305  0074                     	ds	1
   306                           
   307                           	psect	bssBANK0
   308  0020                     __pbssBANK0:	
   309  0020                     _czas_ms:	
   310  0020                     	ds	4
   311  0024                     _timer2:	
   312  0024                     	ds	4
   313  0028                     _czas_flash:	
   314  0028                     	ds	2
   315  002A                     _czas_s:	
   316  002A                     	ds	2
   317  002C                     _timer1:	
   318  002C                     	ds	2
   319  002E                     _timer3:	
   320  002E                     	ds	2
   321  0030                     _timer4:	
   322  0030                     	ds	2
   323  0032                     _timer6:	
   324  0032                     	ds	2
   325  0034                     _timer7:	
   326  0034                     	ds	2
   327  0036                     _timer8:	
   328  0036                     	ds	2
   329  0038                     _START:	
   330  0038                     	ds	1
   331  0039                     _START_Fl:	
   332  0039                     	ds	1
   333  003A                     _case_wyswietlacz:	
   334  003A                     	ds	1
   335  003B                     _cyf_1_tmp:	
   336  003B                     	ds	1
   337  003C                     _cyf_2_tmp:	
   338  003C                     	ds	1
   339  003D                     _cyf_3:	
   340  003D                     	ds	1
   341  003E                     _cyf_3_tmp:	
   342  003E                     	ds	1
   343  003F                     _flaga_temp:	
   344  003F                     	ds	1
   345  0040                     _flash_hi:	
   346  0040                     	ds	1
   347  0041                     _flash_low:	
   348  0041                     	ds	1
   349  0042                     _flash_moc:	
   350  0042                     	ds	1
   351  0043                     _kro_1_tmp:	
   352  0043                     	ds	1
   353  0044                     _kro_2_tmp:	
   354  0044                     	ds	1
   355  0045                     _kro_3:	
   356  0045                     	ds	1
   357  0046                     _kro_3_tmp:	
   358  0046                     	ds	1
   359  0047                     _moc:	
   360  0047                     	ds	1
   361  0048                     _przycisk_minus_flag:	
   362  0048                     	ds	1
   363  0049                     _przycisk_plus_flag:	
   364  0049                     	ds	1
   365  004A                     _test_index:	
   366  004A                     	ds	1
   367  004B                     _x:	
   368  004B                     	ds	1
   369                           
   370                           	psect	dataBANK0
   371  006C                     __pdataBANK0:	
   372  006C                     _adr_hi:	
   373  006C                     	ds	1
   374  006D                     _adr_low:	
   375  006D                     	ds	1
   376  006E                     _adr_low2:	
   377  006E                     	ds	1
   378  006F                     _adr_moc:	
   379  006F                     	ds	1
   380                           
   381                           	psect	bssBANK1
   382  00A0                     __pbssBANK1:	
   383  00A0                     _adc:	
   384  00A0                     	ds	2
   385  00A2                     _ledBlink_time:	
   386  00A2                     	ds	2
   387  00A4                     _temp:	
   388  00A4                     	ds	2
   389  00A6                     _temp_sr:	
   390  00A6                     	ds	2
   391                           
   392                           	psect	clrtext
   393  07AE                     clear_ram0:	
   394                           ;	Called with FSR0 containing the base address, and
   395                           ;	btemp/btemp+1 has the size to clear
   396                           
   397  07AE  0064               	clrwdt	;clear the watchdog before getting into this loop
   398  07AF                     clrloop0:	
   399  07AF  0180               	clrf	0	;clear RAM location pointed to by FSR
   400  07B0  3101               	addfsr 0,1
   401  07B1  3001               	movlw	1
   402  07B2  02FE               	subwf	126,f
   403  07B3  3000               	movlw	0
   404  07B4  3BFF               	subwfb	127,f
   405  07B5  087F               	movf	127,w
   406  07B6  047E               	iorwf	126,w
   407  07B7  1903               	btfsc	3,2
   408  07B8  3400               	retlw	0	;all done for this memory range, return
   409  07B9  2FAF               	goto	clrloop0	;have we reached the end yet?
   410                           
   411                           	psect	cstackBANK1
   412  00AC                     __pcstackBANK1:	
   413  00AC                     ??_main:	
   414                           
   415                           ; 0 bytes @ 0x0
   416  00AC                     	ds	4
   417                           
   418                           	psect	cstackCOMMON
   419  0075                     __pcstackCOMMON:	
   420  0075                     ?_unlock_flash:	
   421  0075                     ?_ISR:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0075                     ??_ISR:	
   425                           ; 0 bytes @ 0x0
   426                           
   427                           
   428                           ; 0 bytes @ 0x0
   429  0075                     	ds	5
   430                           
   431                           	psect	cstackBANK0
   432  004C                     __pcstackBANK0:	
   433  004C                     ?_erase_flash:	
   434  004C                     ?_write_flash:	
   435                           ; 0 bytes @ 0x0
   436                           
   437  004C                     ??_unlock_flash:	
   438                           ; 0 bytes @ 0x0
   439                           
   440  004C                     ?_read_flash:	
   441                           ; 0 bytes @ 0x0
   442                           
   443  004C                     ?___lwmod:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  004C                     ?___lmul:	
   447                           ; 2 bytes @ 0x0
   448                           
   449  004C                     ?___lldiv:	
   450                           ; 4 bytes @ 0x0
   451                           
   452  004C                     read_flash@adrs_lo:	
   453                           ; 4 bytes @ 0x0
   454                           
   455  004C                     write_flash@adr_lo:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  004C                     erase_flash@adr_lo:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  004C                     ___lwmod@divisor:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  004C                     ___lmul@multiplier:	
   465                           ; 2 bytes @ 0x0
   466                           
   467  004C                     ___lldiv@divisor:	
   468                           ; 4 bytes @ 0x0
   469                           
   470                           
   471                           ; 4 bytes @ 0x0
   472  004C                     	ds	1
   473  004D                     ??_read_flash:	
   474  004D                     ??_erase_flash:	
   475                           ; 0 bytes @ 0x1
   476                           
   477  004D                     read_flash@adrs_hi:	
   478                           ; 0 bytes @ 0x1
   479                           
   480  004D                     write_flash@data_lo:	
   481                           ; 1 bytes @ 0x1
   482                           
   483                           
   484                           ; 1 bytes @ 0x1
   485  004D                     	ds	1
   486  004E                     ??_write_flash:	
   487  004E                     ___lwmod@dividend:	
   488                           ; 0 bytes @ 0x2
   489                           
   490                           
   491                           ; 2 bytes @ 0x2
   492  004E                     	ds	1
   493  004F                     erase_flash@adr_hi:	
   494                           
   495                           ; 1 bytes @ 0x3
   496  004F                     	ds	1
   497  0050                     ??___lwmod:	
   498  0050                     write_flash@adr_hi:	
   499                           ; 0 bytes @ 0x4
   500                           
   501  0050                     ___lmul@multiplicand:	
   502                           ; 1 bytes @ 0x4
   503                           
   504  0050                     ___lldiv@dividend:	
   505                           ; 4 bytes @ 0x4
   506                           
   507                           
   508                           ; 4 bytes @ 0x4
   509  0050                     	ds	1
   510  0051                     ___lwmod@counter:	
   511                           
   512                           ; 1 bytes @ 0x5
   513  0051                     	ds	1
   514  0052                     ?___lwdiv:	
   515  0052                     ___lwdiv@divisor:	
   516                           ; 2 bytes @ 0x6
   517                           
   518                           
   519                           ; 2 bytes @ 0x6
   520  0052                     	ds	2
   521  0054                     ??___lmul:	
   522  0054                     ??___lldiv:	
   523                           ; 0 bytes @ 0x8
   524                           
   525  0054                     ___lwdiv@dividend:	
   526                           ; 0 bytes @ 0x8
   527                           
   528  0054                     ___lmul@product:	
   529                           ; 2 bytes @ 0x8
   530                           
   531                           
   532                           ; 4 bytes @ 0x8
   533  0054                     	ds	1
   534  0055                     ___lldiv@quotient:	
   535                           
   536                           ; 4 bytes @ 0x9
   537  0055                     	ds	1
   538  0056                     ??___lwdiv:	
   539                           
   540                           ; 0 bytes @ 0xA
   541  0056                     	ds	1
   542  0057                     ___lwdiv@quotient:	
   543                           
   544                           ; 2 bytes @ 0xB
   545  0057                     	ds	2
   546  0059                     ___lldiv@counter:	
   547  0059                     ___lwdiv@counter:	
   548                           ; 1 bytes @ 0xD
   549                           
   550                           
   551                           ; 1 bytes @ 0xD
   552  0059                     	ds	1
   553  005A                     ?_wyswietl:	
   554  005A                     wyswietl@liczba:	
   555                           ; 0 bytes @ 0xE
   556                           
   557                           
   558                           ; 2 bytes @ 0xE
   559  005A                     	ds	2
   560  005C                     ??_wyswietl:	
   561                           
   562                           ; 0 bytes @ 0x10
   563  005C                     	ds	1
   564  005D                     ?_main:	
   565  005D                     main@argc:	
   566                           ; 2 bytes @ 0x11
   567                           
   568                           
   569                           ; 2 bytes @ 0x11
   570  005D                     	ds	2
   571  005F                     main@argv:	
   572                           
   573                           ; 2 bytes @ 0x13
   574  005F                     	ds	2
   575  0061                     main@tmp:	
   576                           
   577                           ; 1 bytes @ 0x15
   578  0061                     	ds	1
   579  0062                     main@liczba_tmp:	
   580                           
   581                           ; 2 bytes @ 0x16
   582  0062                     	ds	2
   583                           
   584                           	psect	maintext
   585  011A                     __pmaintext:	
   586 ;;
   587 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   588 ;;
   589 ;; *************** function _main *****************
   590 ;; Defined at:
   591 ;;		line 160 in file "main.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  argc            2   17[BANK0 ] int 
   594 ;;  argv            2   19[BANK0 ] PTR PTR unsigned char 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  tmp             1   21[BANK0 ] unsigned char 
   597 ;;  liczba_tmp      2   22[BANK0 ] volatile unsigned int 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  2   17[BANK0 ] int 
   600 ;; Registers used:
   601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : B1F/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   607 ;;      Params:         0       4       0       0       0       0       0       0
   608 ;;      Locals:         0       3       0       0       0       0       0       0
   609 ;;      Temps:          0       0       4       0       0       0       0       0
   610 ;;      Totals:         0       7       4       0       0       0       0       0
   611 ;;Total ram usage:       11 bytes
   612 ;; Hardware stack levels required when called:    3
   613 ;; This function calls:
   614 ;;		___lldiv
   615 ;;		___lmul
   616 ;;		_erase_flash
   617 ;;		_read_flash
   618 ;;		_write_flash
   619 ;;		_wyswietl
   620 ;; This function is called by:
   621 ;;		Startup code after reset
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           
   626                           ;psect for function _main
   627  011A                     _main:	
   628                           
   629                           ;main.c: 163: OSCCONbits.IRCF0 = 0;
   630                           
   631                           ;incstack = 0
   632                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   633  011A  0021               	movlb	1	; select bank1
   634  011B  1199               	bcf	25,3	;volatile
   635                           
   636                           ;main.c: 164: OSCCONbits.IRCF1 = 1;
   637  011C  1619               	bsf	25,4	;volatile
   638                           
   639                           ;main.c: 165: OSCCONbits.IRCF2 = 1;
   640  011D  1699               	bsf	25,5	;volatile
   641                           
   642                           ;main.c: 166: OSCCONbits.IRCF3 = 1;
   643  011E  1719               	bsf	25,6	;volatile
   644                           
   645                           ;main.c: 170: WDTCONbits.WDTPS0=0;
   646  011F  1097               	bcf	23,1	;volatile
   647                           
   648                           ;main.c: 171: WDTCONbits.WDTPS1=0;
   649  0120  1117               	bcf	23,2	;volatile
   650                           
   651                           ;main.c: 172: WDTCONbits.WDTPS2=1;
   652  0121  1597               	bsf	23,3	;volatile
   653                           
   654                           ;main.c: 173: WDTCONbits.WDTPS3=1;
   655  0122  1617               	bsf	23,4	;volatile
   656                           
   657                           ;main.c: 174: WDTCONbits.WDTPS4=0;
   658  0123  1297               	bcf	23,5	;volatile
   659                           
   660                           ;main.c: 178: OPTION_REGbits.PS0=0;
   661  0124  1015               	bcf	21,0	;volatile
   662                           
   663                           ;main.c: 179: OPTION_REGbits.PS1=1;
   664  0125  1495               	bsf	21,1	;volatile
   665                           
   666                           ;main.c: 180: OPTION_REGbits.PS2=0;
   667  0126  1115               	bcf	21,2	;volatile
   668                           
   669                           ;main.c: 181: OPTION_REGbits.TMR0CS = 0;
   670  0127  1295               	bcf	21,5	;volatile
   671                           
   672                           ;main.c: 182: OPTION_REGbits.PSA = 0;
   673  0128  1195               	bcf	21,3	;volatile
   674                           
   675                           ;main.c: 184: INTCONbits.TMR0IE = 1;
   676  0129  168B               	bsf	11,5	;volatile
   677                           
   678                           ;main.c: 185: INTCONbits.GIE = 1;
   679  012A  178B               	bsf	11,7	;volatile
   680                           
   681                           ;main.c: 192: ANSELAbits.ANSA0 = 0;
   682  012B  0023               	movlb	3	; select bank3
   683  012C  100C               	bcf	12,0	;volatile
   684                           
   685                           ;main.c: 193: ANSELAbits.ANSA1 = 0;
   686  012D  108C               	bcf	12,1	;volatile
   687                           
   688                           ;main.c: 194: ANSELAbits.ANSA2 = 0;
   689  012E  110C               	bcf	12,2	;volatile
   690                           
   691                           ;main.c: 195: ANSELAbits.ANSA3 = 0;
   692  012F  118C               	bcf	12,3	;volatile
   693                           
   694                           ;main.c: 196: ANSELAbits.ANSA5 = 0;
   695  0130  128C               	bcf	12,5	;volatile
   696                           
   697                           ;main.c: 199: TRISAbits.TRISA0 = 0;
   698  0131  0021               	movlb	1	; select bank1
   699  0132  100C               	bcf	12,0	;volatile
   700                           
   701                           ;main.c: 200: TRISAbits.TRISA1 = 0;
   702  0133  108C               	bcf	12,1	;volatile
   703                           
   704                           ;main.c: 201: TRISAbits.TRISA2 = 0;
   705  0134  110C               	bcf	12,2	;volatile
   706                           
   707                           ;main.c: 202: TRISAbits.TRISA3 = 0;
   708  0135  118C               	bcf	12,3	;volatile
   709                           
   710                           ;main.c: 203: TRISAbits.TRISA4 = 0;
   711  0136  120C               	bcf	12,4	;volatile
   712                           
   713                           ;main.c: 204: TRISAbits.TRISA5 = 0;
   714  0137  128C               	bcf	12,5	;volatile
   715                           
   716                           ;main.c: 205: TRISAbits.TRISA6 = 0;
   717  0138  130C               	bcf	12,6	;volatile
   718                           
   719                           ;main.c: 206: TRISAbits.TRISA7 = 0;
   720  0139  138C               	bcf	12,7	;volatile
   721                           
   722                           ;main.c: 209: LATAbits.LATA0 = 0;
   723  013A  0022               	movlb	2	; select bank2
   724  013B  100C               	bcf	12,0	;volatile
   725                           
   726                           ;main.c: 210: LATAbits.LATA1 = 0;
   727  013C  108C               	bcf	12,1	;volatile
   728                           
   729                           ;main.c: 211: LATAbits.LATA2 = 0;
   730  013D  110C               	bcf	12,2	;volatile
   731                           
   732                           ;main.c: 212: LATAbits.LATA3 = 0;
   733  013E  118C               	bcf	12,3	;volatile
   734                           
   735                           ;main.c: 213: LATAbits.LATA4 = 0;
   736  013F  120C               	bcf	12,4	;volatile
   737                           
   738                           ;main.c: 214: LATAbits.LATA5 = 0;
   739  0140  128C               	bcf	12,5	;volatile
   740                           
   741                           ;main.c: 215: LATAbits.LATA6 = 0;
   742  0141  130C               	bcf	12,6	;volatile
   743                           
   744                           ;main.c: 216: LATAbits.LATA7 = 0;
   745  0142  138C               	bcf	12,7	;volatile
   746                           
   747                           ;main.c: 221: ANSELBbits.ANSB0 = 0;
   748  0143  0023               	movlb	3	; select bank3
   749  0144  100D               	bcf	13,0	;volatile
   750                           
   751                           ;main.c: 222: ANSELBbits.ANSB1 = 0;
   752  0145  108D               	bcf	13,1	;volatile
   753                           
   754                           ;main.c: 225: TRISBbits.TRISB0 = 0;
   755  0146  0021               	movlb	1	; select bank1
   756  0147  100D               	bcf	13,0	;volatile
   757                           
   758                           ;main.c: 226: TRISBbits.TRISB1 = 0;
   759  0148  108D               	bcf	13,1	;volatile
   760                           
   761                           ;main.c: 228: LATBbits.LATB0 = 0;
   762  0149  0022               	movlb	2	; select bank2
   763  014A  100D               	bcf	13,0	;volatile
   764                           
   765                           ;main.c: 229: LATBbits.LATB1 = 0;
   766  014B  108D               	bcf	13,1	;volatile
   767                           
   768                           ;main.c: 233: ANSELBbits.ANSB2 = 0;
   769  014C  0023               	movlb	3	; select bank3
   770  014D  110D               	bcf	13,2	;volatile
   771                           
   772                           ;main.c: 234: ANSELBbits.ANSB3 = 0;
   773  014E  118D               	bcf	13,3	;volatile
   774                           
   775                           ;main.c: 235: ANSELBbits.ANSB4 = 0;
   776  014F  120D               	bcf	13,4	;volatile
   777                           
   778                           ;main.c: 236: ANSELBbits.ANSB5 = 0;
   779  0150  128D               	bcf	13,5	;volatile
   780                           
   781                           ;main.c: 238: TRISBbits.TRISB4 = 0;
   782  0151  0021               	movlb	1	; select bank1
   783  0152  120D               	bcf	13,4	;volatile
   784                           
   785                           ;main.c: 241: TRISBbits.TRISB2 = 1;
   786  0153  150D               	bsf	13,2	;volatile
   787                           
   788                           ;main.c: 242: TRISBbits.TRISB3 = 1;
   789  0154  158D               	bsf	13,3	;volatile
   790                           
   791                           ;main.c: 243: TRISBbits.TRISB4 = 1;
   792  0155  160D               	bsf	13,4	;volatile
   793                           
   794                           ;main.c: 244: TRISBbits.TRISB5 = 1;
   795  0156  168D               	bsf	13,5	;volatile
   796                           
   797                           ;main.c: 245: TRISBbits.TRISB6 = 1;
   798  0157  170D               	bsf	13,6	;volatile
   799                           
   800                           ;main.c: 246: TRISBbits.TRISB7 = 1;
   801  0158  178D               	bsf	13,7	;volatile
   802                           
   803                           ;main.c: 249: OPTION_REGbits.nWPUEN = 0;
   804  0159  1395               	bcf	21,7	;volatile
   805                           
   806                           ;main.c: 250: WPUBbits.WPUB3 = 1;
   807  015A  0024               	movlb	4	; select bank4
   808  015B  158D               	bsf	13,3	;volatile
   809                           
   810                           ;main.c: 251: WPUBbits.WPUB4 = 1;
   811  015C  160D               	bsf	13,4	;volatile
   812                           
   813                           ;main.c: 255: TRISC = 0;
   814  015D  0021               	movlb	1	; select bank1
   815  015E  018E               	clrf	14	;volatile
   816                           
   817                           ;main.c: 256: LATC = 0;
   818  015F  0022               	movlb	2	; select bank2
   819  0160  018E               	clrf	14	;volatile
   820                           
   821                           ;main.c: 257: ANSELC = 0;
   822  0161  0023               	movlb	3	; select bank3
   823  0162  018E               	clrf	14	;volatile
   824                           
   825                           ;main.c: 260: ANSELAbits.ANSA5 = 0;
   826  0163  128C               	bcf	12,5	;volatile
   827                           
   828                           ;main.c: 261: TRISAbits.TRISA5 = 0;
   829  0164  0021               	movlb	1	; select bank1
   830  0165  128C               	bcf	12,5	;volatile
   831                           
   832                           ;main.c: 262: LATAbits.LATA5 = 0;
   833  0166  0022               	movlb	2	; select bank2
   834  0167  128C               	bcf	12,5	;volatile
   835                           
   836                           ;main.c: 265: FVRCONbits.TSEN = 1;
   837  0168  1697               	bsf	23,5	;volatile
   838                           
   839                           ;main.c: 266: FVRCONbits.FVREN = 0;
   840  0169  1397               	bcf	23,7	;volatile
   841                           
   842                           ;main.c: 267: FVRCONbits.TSRNG = 1;
   843  016A  1617               	bsf	23,4	;volatile
   844                           
   845                           ;main.c: 269: ADCON0bits.ADON = 1;
   846  016B  0021               	movlb	1	; select bank1
   847  016C  141D               	bsf	29,0	;volatile
   848                           
   849                           ;main.c: 270: ADCON0bits.CHS = 0b11110;
   850  016D  081D               	movf	29,w	;volatile
   851  016E  3983               	andlw	-125
   852  016F  3878               	iorlw	120
   853  0170  009D               	movwf	29	;volatile
   854                           
   855                           ;main.c: 271: ADCON1 |= 0b10000000;
   856  0171  179E               	bsf	30,7	;volatile
   857                           
   858                           ;main.c: 274: x=0;
   859  0172  0020               	movlb	0	; select bank0
   860  0173  01CB               	clrf	_x	;volatile
   861                           
   862                           ;main.c: 275: flaga_temp = 0;
   863  0174  01BF               	clrf	_flaga_temp	;volatile
   864                           
   865                           ;main.c: 277: cyf_1 = 0;
   866  0175  01E8               	clrf	_cyf_1	;volatile
   867                           
   868                           ;main.c: 278: cyf_2 = 0;
   869  0176  01E9               	clrf	_cyf_2	;volatile
   870                           
   871                           ;main.c: 279: cyf_3 = 0;
   872  0177  01BD               	clrf	_cyf_3	;volatile
   873                           
   874                           ;main.c: 280: kro_1 = 0;
   875  0178  0021               	movlb	1	; select bank1
   876  0179  01AA               	clrf	_kro_1^(0+128)	;volatile
   877                           
   878                           ;main.c: 281: kro_2 = 0;
   879  017A  01AB               	clrf	_kro_2^(0+128)	;volatile
   880                           
   881                           ;main.c: 282: kro_3 = 0;
   882  017B  0020               	movlb	0	; select bank0
   883  017C  01C5               	clrf	_kro_3	;volatile
   884                           
   885                           ;main.c: 284: timer5 = 5000;
   886  017D  3000               	movlw	0
   887  017E  00E7               	movwf	_timer5+3	;volatile
   888  017F  3000               	movlw	0
   889  0180  00E6               	movwf	_timer5+2	;volatile
   890  0181  3013               	movlw	19
   891  0182  00E5               	movwf	_timer5+1	;volatile
   892  0183  3088               	movlw	136
   893  0184  00E4               	movwf	_timer5	;volatile
   894                           
   895                           ;main.c: 286: START = 0;
   896  0185  01B8               	clrf	_START	;volatile
   897                           
   898                           ;main.c: 287: czas_s_reset = 10;
   899  0186  300A               	movlw	10
   900  0187  0021               	movlb	1	; select bank1
   901  0188  00A8               	movwf	_czas_s_reset^(0+128)	;volatile
   902  0189  3000               	movlw	0
   903  018A  00A9               	movwf	(_czas_s_reset^(0+128)+1)	;volatile
   904                           
   905                           ;main.c: 288: czas_przerwa_ms = 100;
   906  018B  3064               	movlw	100
   907  018C  00AC               	movwf	??_main^(0+128)
   908  018D  082C               	movf	??_main^(0+128),w
   909  018E  0020               	movlb	0	; select bank0
   910  018F  00EA               	movwf	_czas_przerwa_ms	;volatile
   911                           
   912                           ;main.c: 292: grzalka_numer = 1;
   913  0190  3001               	movlw	1
   914  0191  0021               	movlb	1	; select bank1
   915  0192  00AC               	movwf	??_main^(0+128)
   916  0193  082C               	movf	??_main^(0+128),w
   917  0194  0020               	movlb	0	; select bank0
   918  0195  00EB               	movwf	_grzalka_numer	;volatile
   919                           
   920                           ;main.c: 293: START_Fl = 0;
   921  0196  01B9               	clrf	_START_Fl	;volatile
   922                           
   923                           ;main.c: 296: cyf_1 = 14;
   924  0197  300E               	movlw	14
   925  0198  0021               	movlb	1	; select bank1
   926  0199  00AC               	movwf	??_main^(0+128)
   927  019A  082C               	movf	??_main^(0+128),w
   928  019B  0020               	movlb	0	; select bank0
   929  019C  00E8               	movwf	_cyf_1	;volatile
   930                           
   931                           ;main.c: 297: cyf_2 = 14;
   932  019D  300E               	movlw	14
   933  019E  0021               	movlb	1	; select bank1
   934  019F  00AC               	movwf	??_main^(0+128)
   935  01A0  082C               	movf	??_main^(0+128),w
   936  01A1  0020               	movlb	0	; select bank0
   937  01A2  00E9               	movwf	_cyf_2	;volatile
   938                           
   939                           ;main.c: 298: kro_1 = 1;
   940  01A3  3001               	movlw	1
   941  01A4  0021               	movlb	1	; select bank1
   942  01A5  00AC               	movwf	??_main^(0+128)
   943  01A6  082C               	movf	??_main^(0+128),w
   944  01A7  00AA               	movwf	_kro_1^(0+128)	;volatile
   945                           
   946                           ;main.c: 299: kro_2 = 1;
   947  01A8  3001               	movlw	1
   948  01A9  00AC               	movwf	??_main^(0+128)
   949  01AA  082C               	movf	??_main^(0+128),w
   950  01AB  00AB               	movwf	_kro_2^(0+128)	;volatile
   951                           
   952                           ;main.c: 300: _delay((unsigned long)((1000)*(8000000/4000.0)));
   953  01AC  300B               	movlw	11
   954  01AD  00AE               	movwf	(??_main^(0+128)+2)
   955  01AE  3026               	movlw	38
   956  01AF  00AD               	movwf	(??_main^(0+128)+1)
   957  01B0  3066               	movlw	102
   958  01B1  00AC               	movwf	??_main^(0+128)
   959  01B2                     u2777:	
   960  01B2  0BAC               	decfsz	??_main^(0+128),f
   961  01B3  29B2               	goto	u2777
   962  01B4  0BAD               	decfsz	(??_main^(0+128)+1),f
   963  01B5  29B2               	goto	u2777
   964  01B6  0BAE               	decfsz	(??_main^(0+128)+2),f
   965  01B7  29B2               	goto	u2777
   966  01B8  3200               	nop2
   967                           
   968                           ;main.c: 302: flash_low = read_flash(adr_hi, adr_low);
   969  01B9  0020               	movlb	0	; select bank0
   970  01BA  086D               	movf	_adr_low,w	;volatile
   971  01BB  0021               	movlb	1	; select bank1
   972  01BC  00AC               	movwf	??_main^(0+128)
   973  01BD  082C               	movf	??_main^(0+128),w
   974  01BE  0020               	movlb	0	; select bank0
   975  01BF  00CC               	movwf	read_flash@adrs_lo
   976  01C0  086C               	movf	_adr_hi,w	;volatile
   977  01C1  3187  279C  3181   	fcall	_read_flash
   978  01C4  0021               	movlb	1	; select bank1
   979  01C5  00AD               	movwf	(??_main+1)^(0+128)
   980  01C6  082D               	movf	(??_main+1)^(0+128),w
   981  01C7  0020               	movlb	0	; select bank0
   982  01C8  00C1               	movwf	_flash_low	;volatile
   983                           
   984                           ;main.c: 303: flash_hi = (read_flash(adr_hi, adr_low2) & 0x3fff );
   985  01C9  086E               	movf	_adr_low2,w	;volatile
   986  01CA  0021               	movlb	1	; select bank1
   987  01CB  00AC               	movwf	??_main^(0+128)
   988  01CC  082C               	movf	??_main^(0+128),w
   989  01CD  0020               	movlb	0	; select bank0
   990  01CE  00CC               	movwf	read_flash@adrs_lo
   991  01CF  086C               	movf	_adr_hi,w	;volatile
   992  01D0  3187  279C  3181   	fcall	_read_flash
   993  01D3  0021               	movlb	1	; select bank1
   994  01D4  00AD               	movwf	(??_main+1)^(0+128)
   995  01D5  082D               	movf	(??_main+1)^(0+128),w
   996  01D6  0020               	movlb	0	; select bank0
   997  01D7  00C0               	movwf	_flash_hi	;volatile
   998                           
   999                           ;main.c: 305: flash_moc = read_flash(adr_hi, adr_moc);
  1000  01D8  086F               	movf	_adr_moc,w	;volatile
  1001  01D9  0021               	movlb	1	; select bank1
  1002  01DA  00AC               	movwf	??_main^(0+128)
  1003  01DB  082C               	movf	??_main^(0+128),w
  1004  01DC  0020               	movlb	0	; select bank0
  1005  01DD  00CC               	movwf	read_flash@adrs_lo
  1006  01DE  086C               	movf	_adr_hi,w	;volatile
  1007  01DF  3187  279C  3181   	fcall	_read_flash
  1008  01E2  0021               	movlb	1	; select bank1
  1009  01E3  00AD               	movwf	(??_main+1)^(0+128)
  1010  01E4  082D               	movf	(??_main+1)^(0+128),w
  1011  01E5  0020               	movlb	0	; select bank0
  1012  01E6  00C2               	movwf	_flash_moc	;volatile
  1013                           
  1014                           ;main.c: 306: if (flash_moc!=166) {
  1015  01E7  30A6               	movlw	166
  1016  01E8  0642               	xorwf	_flash_moc,w	;volatile
  1017  01E9  1903               	btfsc	3,2
  1018  01EA  29EE               	goto	l2069
  1019                           
  1020                           ;main.c: 307: moc = 0;
  1021  01EB  01C7               	clrf	_moc	;volatile
  1022                           
  1023                           ;main.c: 308: flash_moc = 0;
  1024  01EC  01C2               	clrf	_flash_moc	;volatile
  1025                           
  1026                           ;main.c: 309: }else{
  1027  01ED  29F4               	goto	l2071
  1028  01EE                     l2069:	
  1029                           
  1030                           ;main.c: 310: moc=166;
  1031  01EE  30A6               	movlw	166
  1032  01EF  0021               	movlb	1	; select bank1
  1033  01F0  00AC               	movwf	??_main^(0+128)
  1034  01F1  082C               	movf	??_main^(0+128),w
  1035  01F2  0020               	movlb	0	; select bank0
  1036  01F3  00C7               	movwf	_moc	;volatile
  1037  01F4                     l2071:	
  1038                           
  1039                           ;main.c: 311: }
  1040                           ;main.c: 315: if ( (flash_low == 0xFF) && (flash_hi == 0xFF)) {
  1041  01F4  0A41               	incf	_flash_low,w	;volatile
  1042  01F5  1D03               	btfss	3,2
  1043  01F6  29FF               	goto	l2077
  1044  01F7  0A40               	incf	_flash_hi,w	;volatile
  1045  01F8  1D03               	btfss	3,2
  1046  01F9  29FF               	goto	l2077
  1047                           
  1048                           ;main.c: 316: flash_low = 0;
  1049  01FA  01C1               	clrf	_flash_low	;volatile
  1050                           
  1051                           ;main.c: 317: flash_hi = 0;
  1052  01FB  01C0               	clrf	_flash_hi	;volatile
  1053                           
  1054                           ;main.c: 318: czas_flash = 0;
  1055  01FC  01A8               	clrf	_czas_flash	;volatile
  1056  01FD  01A9               	clrf	_czas_flash+1	;volatile
  1057                           
  1058                           ;main.c: 319: }else{
  1059  01FE  2A24               	goto	l2079
  1060  01FF                     l2077:	
  1061                           
  1062                           ;main.c: 320: czas_s = flash_hi ;
  1063  01FF  0840               	movf	_flash_hi,w	;volatile
  1064  0200  0021               	movlb	1	; select bank1
  1065  0201  00AC               	movwf	??_main^(0+128)
  1066  0202  01AD               	clrf	(??_main^(0+128)+1)
  1067  0203  082C               	movf	??_main^(0+128),w
  1068  0204  0020               	movlb	0	; select bank0
  1069  0205  00AA               	movwf	_czas_s	;volatile
  1070  0206  0021               	movlb	1	; select bank1
  1071  0207  082D               	movf	(??_main+1)^(0+128),w
  1072  0208  0020               	movlb	0	; select bank0
  1073  0209  00AB               	movwf	_czas_s+1	;volatile
  1074                           
  1075                           ;main.c: 321: czas_s = (czas_s<<8);
  1076  020A  082A               	movf	_czas_s,w	;volatile
  1077  020B  0021               	movlb	1	; select bank1
  1078  020C  00AD               	movwf	(??_main^(0+128)+1)
  1079  020D  01AC               	clrf	??_main^(0+128)
  1080  020E  082C               	movf	??_main^(0+128),w
  1081  020F  0020               	movlb	0	; select bank0
  1082  0210  00AA               	movwf	_czas_s	;volatile
  1083  0211  0021               	movlb	1	; select bank1
  1084  0212  082D               	movf	(??_main+1)^(0+128),w
  1085  0213  0020               	movlb	0	; select bank0
  1086  0214  00AB               	movwf	_czas_s+1	;volatile
  1087                           
  1088                           ;main.c: 322: czas_s|= flash_low;
  1089  0215  0841               	movf	_flash_low,w	;volatile
  1090  0216  0021               	movlb	1	; select bank1
  1091  0217  00AC               	movwf	??_main^(0+128)
  1092  0218  01AD               	clrf	(??_main^(0+128)+1)
  1093  0219  082C               	movf	??_main^(0+128),w
  1094  021A  0020               	movlb	0	; select bank0
  1095  021B  04AA               	iorwf	_czas_s,f	;volatile
  1096  021C  0021               	movlb	1	; select bank1
  1097  021D  082D               	movf	(??_main+1)^(0+128),w
  1098  021E  0020               	movlb	0	; select bank0
  1099  021F  04AB               	iorwf	_czas_s+1,f	;volatile
  1100                           
  1101                           ;main.c: 325: czas_flash = czas_s;
  1102  0220  082B               	movf	_czas_s+1,w	;volatile
  1103  0221  00A9               	movwf	_czas_flash+1	;volatile
  1104  0222  082A               	movf	_czas_s,w	;volatile
  1105  0223  00A8               	movwf	_czas_flash	;volatile
  1106  0224                     l2079:	
  1107                           
  1108                           ;main.c: 326: }
  1109                           ;main.c: 329: if (czas_s == 0) {
  1110  0224  082A               	movf	_czas_s,w	;volatile
  1111  0225  042B               	iorwf	_czas_s+1,w	;volatile
  1112  0226  1D03               	btfss	3,2
  1113  0227  2A30               	goto	l178
  1114                           
  1115                           ;main.c: 330: czas_s = czas_s_reset;
  1116  0228  0021               	movlb	1	; select bank1
  1117  0229  0829               	movf	(_czas_s_reset+1)^(0+128),w	;volatile
  1118  022A  0020               	movlb	0	; select bank0
  1119  022B  00AB               	movwf	_czas_s+1	;volatile
  1120  022C  0021               	movlb	1	; select bank1
  1121  022D  0828               	movf	_czas_s_reset^(0+128),w	;volatile
  1122  022E  0020               	movlb	0	; select bank0
  1123  022F  00AA               	movwf	_czas_s	;volatile
  1124  0230                     l178:	
  1125                           ;main.c: 331: }
  1126                           ;main.c: 333: while(1){
  1127                           
  1128                           
  1129                           ;main.c: 336: if (czas_s > 1800) {
  1130  0230  3007               	movlw	7
  1131  0231  0020               	movlb	0	; select bank0
  1132  0232  022B               	subwf	_czas_s+1,w	;volatile
  1133  0233  3009               	movlw	9
  1134  0234  1903               	skipnz
  1135  0235  022A               	subwf	_czas_s,w	;volatile
  1136  0236  1C03               	skipc
  1137  0237  2A3C               	goto	l2085
  1138                           
  1139                           ;main.c: 337: czas_s = 1800;
  1140  0238  3008               	movlw	8
  1141  0239  00AA               	movwf	_czas_s	;volatile
  1142  023A  3007               	movlw	7
  1143  023B  00AB               	movwf	_czas_s+1	;volatile
  1144  023C                     l2085:	
  1145                           
  1146                           ;main.c: 338: }
  1147                           ;main.c: 339: if (czas_s < 1) {
  1148  023C  082A               	movf	_czas_s,w	;volatile
  1149  023D  042B               	iorwf	_czas_s+1,w	;volatile
  1150  023E  1D03               	btfss	3,2
  1151  023F  2A44               	goto	l2089
  1152                           
  1153                           ;main.c: 340: czas_s = 1;
  1154  0240  3001               	movlw	1
  1155  0241  00AA               	movwf	_czas_s	;volatile
  1156  0242  3000               	movlw	0
  1157  0243  00AB               	movwf	_czas_s+1	;volatile
  1158  0244                     l2089:	
  1159                           
  1160                           ;main.c: 341: }
  1161                           ;main.c: 344: if ( (PORTBbits.RB3 == 0) && (PORTBbits.RB4 == 1 ) && ( START == 0 )){
  1162  0244  1D8D               	btfss	13,3	;volatile
  1163  0245  1E0D               	btfss	13,4	;volatile
  1164  0246  2A68               	goto	l2105
  1165  0247  0838               	movf	_START,w	;volatile
  1166  0248  1D03               	btfss	3,2
  1167  0249  2A68               	goto	l2105
  1168                           
  1169                           ;main.c: 345: if (przycisk_plus_flag == 0 ){
  1170  024A  0849               	movf	_przycisk_plus_flag,w	;volatile
  1171  024B  1D03               	btfss	3,2
  1172  024C  2A57               	goto	l2099
  1173                           
  1174                           ;main.c: 346: _delay((unsigned long)((50)*(8000000/4000.0)));
  1175  024D  3082               	movlw	130
  1176  024E  0021               	movlb	1	; select bank1
  1177  024F  00AD               	movwf	(??_main^(0+128)+1)
  1178  0250  30DD               	movlw	221
  1179  0251  00AC               	movwf	??_main^(0+128)
  1180  0252                     u2787:	
  1181  0252  0BAC               	decfsz	??_main^(0+128),f
  1182  0253  2A52               	goto	u2787
  1183  0254  0BAD               	decfsz	(??_main^(0+128)+1),f
  1184  0255  2A52               	goto	u2787
  1185  0256  3200               	nop2
  1186  0257                     l2099:	
  1187                           
  1188                           ;main.c: 347: }
  1189                           ;main.c: 348: if ( (PORTBbits.RB3 == 0) && (przycisk_plus_flag == 0) ) {
  1190  0257  0020               	movlb	0	; select bank0
  1191  0258  198D               	btfsc	13,3	;volatile
  1192  0259  2A6D               	goto	l2109
  1193  025A  0849               	movf	_przycisk_plus_flag,w	;volatile
  1194  025B  1D03               	btfss	3,2
  1195  025C  2A6D               	goto	l2109
  1196                           
  1197                           ;main.c: 349: czas_s++;
  1198  025D  3001               	movlw	1
  1199  025E  07AA               	addwf	_czas_s,f	;volatile
  1200  025F  3000               	movlw	0
  1201  0260  3DAB               	addwfc	_czas_s+1,f	;volatile
  1202                           
  1203                           ;main.c: 350: przycisk_plus_flag = 1;
  1204  0261  3001               	movlw	1
  1205  0262  0021               	movlb	1	; select bank1
  1206  0263  00AC               	movwf	??_main^(0+128)
  1207  0264  082C               	movf	??_main^(0+128),w
  1208  0265  0020               	movlb	0	; select bank0
  1209  0266  00C9               	movwf	_przycisk_plus_flag	;volatile
  1210                           
  1211                           ;main.c: 351: }
  1212                           ;main.c: 352: }else{
  1213  0267  2A6D               	goto	l2109
  1214  0268                     l2105:	
  1215                           
  1216                           ;main.c: 353: przycisk_plus_flag = 0;
  1217  0268  01C9               	clrf	_przycisk_plus_flag	;volatile
  1218                           
  1219                           ;main.c: 354: timer1 = 1500;
  1220  0269  30DC               	movlw	220
  1221  026A  00AC               	movwf	_timer1	;volatile
  1222  026B  3005               	movlw	5
  1223  026C  00AD               	movwf	_timer1+1	;volatile
  1224  026D                     l2109:	
  1225                           
  1226                           ;main.c: 355: }
  1227                           ;main.c: 357: if ( (timer1 == 0) && (przycisk_plus_flag == 1) ) {
  1228  026D  082C               	movf	_timer1,w	;volatile
  1229  026E  042D               	iorwf	_timer1+1,w	;volatile
  1230  026F  1D03               	btfss	3,2
  1231  0270  2A82               	goto	l2115
  1232  0271  0349               	decf	_przycisk_plus_flag,w	;volatile
  1233  0272  1D03               	btfss	3,2
  1234  0273  2A82               	goto	l2115
  1235                           
  1236                           ;main.c: 358: czas_s++;
  1237  0274  3001               	movlw	1
  1238  0275  07AA               	addwf	_czas_s,f	;volatile
  1239  0276  3000               	movlw	0
  1240  0277  3DAB               	addwfc	_czas_s+1,f	;volatile
  1241                           
  1242                           ;main.c: 359: _delay((unsigned long)((10)*(8000000/4000.0)));
  1243  0278  301A               	movlw	26
  1244  0279  0021               	movlb	1	; select bank1
  1245  027A  00AD               	movwf	(??_main^(0+128)+1)
  1246  027B  30F8               	movlw	248
  1247  027C  00AC               	movwf	??_main^(0+128)
  1248  027D                     u2797:	
  1249  027D  0BAC               	decfsz	??_main^(0+128),f
  1250  027E  2A7D               	goto	u2797
  1251  027F  0BAD               	decfsz	(??_main^(0+128)+1),f
  1252  0280  2A7D               	goto	u2797
  1253  0281  0000               	nop
  1254  0282                     l2115:	
  1255                           
  1256                           ;main.c: 360: }
  1257                           ;main.c: 364: if ( (PORTBbits.RB3 == 1) && (PORTBbits.RB4 == 0 ) && ( START == 0 )){
  1258  0282  0020               	movlb	0	; select bank0
  1259  0283  198D               	btfsc	13,3	;volatile
  1260  0284  1A0D               	btfsc	13,4	;volatile
  1261  0285  2AA7               	goto	l2131
  1262  0286  0838               	movf	_START,w	;volatile
  1263  0287  1D03               	btfss	3,2
  1264  0288  2AA7               	goto	l2131
  1265                           
  1266                           ;main.c: 365: if (przycisk_minus_flag == 0 ){
  1267  0289  0848               	movf	_przycisk_minus_flag,w	;volatile
  1268  028A  1D03               	btfss	3,2
  1269  028B  2A96               	goto	l2125
  1270                           
  1271                           ;main.c: 366: _delay((unsigned long)((50)*(8000000/4000.0)));
  1272  028C  3082               	movlw	130
  1273  028D  0021               	movlb	1	; select bank1
  1274  028E  00AD               	movwf	(??_main^(0+128)+1)
  1275  028F  30DD               	movlw	221
  1276  0290  00AC               	movwf	??_main^(0+128)
  1277  0291                     u2807:	
  1278  0291  0BAC               	decfsz	??_main^(0+128),f
  1279  0292  2A91               	goto	u2807
  1280  0293  0BAD               	decfsz	(??_main^(0+128)+1),f
  1281  0294  2A91               	goto	u2807
  1282  0295  3200               	nop2
  1283  0296                     l2125:	
  1284                           
  1285                           ;main.c: 367: }
  1286                           ;main.c: 368: if ( (PORTBbits.RB4 == 0) && (przycisk_minus_flag == 0) ) {
  1287  0296  0020               	movlb	0	; select bank0
  1288  0297  1A0D               	btfsc	13,4	;volatile
  1289  0298  2AAC               	goto	l2135
  1290  0299  0848               	movf	_przycisk_minus_flag,w	;volatile
  1291  029A  1D03               	btfss	3,2
  1292  029B  2AAC               	goto	l2135
  1293                           
  1294                           ;main.c: 369: czas_s--;
  1295  029C  3001               	movlw	1
  1296  029D  02AA               	subwf	_czas_s,f	;volatile
  1297  029E  3000               	movlw	0
  1298  029F  3BAB               	subwfb	_czas_s+1,f	;volatile
  1299                           
  1300                           ;main.c: 370: przycisk_minus_flag = 1;
  1301  02A0  3001               	movlw	1
  1302  02A1  0021               	movlb	1	; select bank1
  1303  02A2  00AC               	movwf	??_main^(0+128)
  1304  02A3  082C               	movf	??_main^(0+128),w
  1305  02A4  0020               	movlb	0	; select bank0
  1306  02A5  00C8               	movwf	_przycisk_minus_flag	;volatile
  1307                           
  1308                           ;main.c: 371: }
  1309                           ;main.c: 372: }else{
  1310  02A6  2AAC               	goto	l2135
  1311  02A7                     l2131:	
  1312                           
  1313                           ;main.c: 373: przycisk_minus_flag = 0;
  1314  02A7  01C8               	clrf	_przycisk_minus_flag	;volatile
  1315                           
  1316                           ;main.c: 374: timer6 = 1500;
  1317  02A8  30DC               	movlw	220
  1318  02A9  00B2               	movwf	_timer6	;volatile
  1319  02AA  3005               	movlw	5
  1320  02AB  00B3               	movwf	_timer6+1	;volatile
  1321  02AC                     l2135:	
  1322                           
  1323                           ;main.c: 375: }
  1324                           ;main.c: 377: if ( (timer6 == 0) && (przycisk_minus_flag == 1) ) {
  1325  02AC  0832               	movf	_timer6,w	;volatile
  1326  02AD  0433               	iorwf	_timer6+1,w	;volatile
  1327  02AE  1D03               	btfss	3,2
  1328  02AF  2AC1               	goto	l2141
  1329  02B0  0348               	decf	_przycisk_minus_flag,w	;volatile
  1330  02B1  1D03               	btfss	3,2
  1331  02B2  2AC1               	goto	l2141
  1332                           
  1333                           ;main.c: 378: czas_s--;
  1334  02B3  3001               	movlw	1
  1335  02B4  02AA               	subwf	_czas_s,f	;volatile
  1336  02B5  3000               	movlw	0
  1337  02B6  3BAB               	subwfb	_czas_s+1,f	;volatile
  1338                           
  1339                           ;main.c: 379: _delay((unsigned long)((10)*(8000000/4000.0)));
  1340  02B7  301A               	movlw	26
  1341  02B8  0021               	movlb	1	; select bank1
  1342  02B9  00AD               	movwf	(??_main^(0+128)+1)
  1343  02BA  30F8               	movlw	248
  1344  02BB  00AC               	movwf	??_main^(0+128)
  1345  02BC                     u2817:	
  1346  02BC  0BAC               	decfsz	??_main^(0+128),f
  1347  02BD  2ABC               	goto	u2817
  1348  02BE  0BAD               	decfsz	(??_main^(0+128)+1),f
  1349  02BF  2ABC               	goto	u2817
  1350  02C0  0000               	nop
  1351  02C1                     l2141:	
  1352                           
  1353                           ;main.c: 380: }
  1354                           ;main.c: 384: if ( (PORTBbits.RB3 == 0) && (PORTBbits.RB4 == 0 ) && ( START == 0 )){
  1355  02C1  0020               	movlb	0	; select bank0
  1356  02C2  1D8D               	btfss	13,3	;volatile
  1357  02C3  1A0D               	btfsc	13,4	;volatile
  1358  02C4  2B0F               	goto	l2155
  1359  02C5  0838               	movf	_START,w	;volatile
  1360  02C6  1D03               	btfss	3,2
  1361  02C7  2B0F               	goto	l2155
  1362                           
  1363                           ;main.c: 385: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1364  02C8  300B               	movlw	11
  1365  02C9  0021               	movlb	1	; select bank1
  1366  02CA  00AE               	movwf	(??_main^(0+128)+2)
  1367  02CB  3026               	movlw	38
  1368  02CC  00AD               	movwf	(??_main^(0+128)+1)
  1369  02CD  3066               	movlw	102
  1370  02CE  00AC               	movwf	??_main^(0+128)
  1371  02CF                     u2827:	
  1372  02CF  0BAC               	decfsz	??_main^(0+128),f
  1373  02D0  2ACF               	goto	u2827
  1374  02D1  0BAD               	decfsz	(??_main^(0+128)+1),f
  1375  02D2  2ACF               	goto	u2827
  1376  02D3  0BAE               	decfsz	(??_main^(0+128)+2),f
  1377  02D4  2ACF               	goto	u2827
  1378  02D5  3200               	nop2
  1379  02D6  0064               	clrwdt	;# 
  1380                           
  1381                           ;main.c: 387: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1382  02D7  300B               	movlw	11
  1383  02D8  0021               	movlb	1	; select bank1
  1384  02D9  00AE               	movwf	(??_main^(0+128)+2)
  1385  02DA  3026               	movlw	38
  1386  02DB  00AD               	movwf	(??_main^(0+128)+1)
  1387  02DC  3066               	movlw	102
  1388  02DD  00AC               	movwf	??_main^(0+128)
  1389  02DE                     u2837:	
  1390  02DE  0BAC               	decfsz	??_main^(0+128),f
  1391  02DF  2ADE               	goto	u2837
  1392  02E0  0BAD               	decfsz	(??_main^(0+128)+1),f
  1393  02E1  2ADE               	goto	u2837
  1394  02E2  0BAE               	decfsz	(??_main^(0+128)+2),f
  1395  02E3  2ADE               	goto	u2837
  1396  02E4  3200               	nop2
  1397  02E5  0064               	clrwdt	;# 
  1398                           
  1399                           ;main.c: 389: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1400  02E6  300B               	movlw	11
  1401  02E7  0021               	movlb	1	; select bank1
  1402  02E8  00AE               	movwf	(??_main^(0+128)+2)
  1403  02E9  3026               	movlw	38
  1404  02EA  00AD               	movwf	(??_main^(0+128)+1)
  1405  02EB  3066               	movlw	102
  1406  02EC  00AC               	movwf	??_main^(0+128)
  1407  02ED                     u2847:	
  1408  02ED  0BAC               	decfsz	??_main^(0+128),f
  1409  02EE  2AED               	goto	u2847
  1410  02EF  0BAD               	decfsz	(??_main^(0+128)+1),f
  1411  02F0  2AED               	goto	u2847
  1412  02F1  0BAE               	decfsz	(??_main^(0+128)+2),f
  1413  02F2  2AED               	goto	u2847
  1414  02F3  3200               	nop2
  1415  02F4  0064               	clrwdt	;# 
  1416                           
  1417                           ;main.c: 391: if ( (PORTBbits.RB3 == 0) && (PORTBbits.RB4 == 0 )){
  1418  02F5  0020               	movlb	0	; select bank0
  1419  02F6  1D8D               	btfss	13,3	;volatile
  1420  02F7  1A0D               	btfsc	13,4	;volatile
  1421  02F8  2B01               	goto	l192
  1422                           
  1423                           ;main.c: 392: czas_s = czas_s_reset;
  1424  02F9  0021               	movlb	1	; select bank1
  1425  02FA  0829               	movf	(_czas_s_reset+1)^(0+128),w	;volatile
  1426  02FB  0020               	movlb	0	; select bank0
  1427  02FC  00AB               	movwf	_czas_s+1	;volatile
  1428  02FD  0021               	movlb	1	; select bank1
  1429  02FE  0828               	movf	_czas_s_reset^(0+128),w	;volatile
  1430  02FF  0020               	movlb	0	; select bank0
  1431  0300  00AA               	movwf	_czas_s	;volatile
  1432  0301                     l192:	
  1433                           
  1434                           ;main.c: 393: }
  1435                           ;main.c: 394: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1436  0301  300B               	movlw	11
  1437  0302  0021               	movlb	1	; select bank1
  1438  0303  00AE               	movwf	(??_main^(0+128)+2)
  1439  0304  3026               	movlw	38
  1440  0305  00AD               	movwf	(??_main^(0+128)+1)
  1441  0306  3066               	movlw	102
  1442  0307  00AC               	movwf	??_main^(0+128)
  1443  0308                     u2857:	
  1444  0308  0BAC               	decfsz	??_main^(0+128),f
  1445  0309  2B08               	goto	u2857
  1446  030A  0BAD               	decfsz	(??_main^(0+128)+1),f
  1447  030B  2B08               	goto	u2857
  1448  030C  0BAE               	decfsz	(??_main^(0+128)+2),f
  1449  030D  2B08               	goto	u2857
  1450  030E  3200               	nop2
  1451  030F                     l2155:	
  1452                           
  1453                           ;main.c: 395: }
  1454                           ;main.c: 399: if ( (PORTBbits.RB5 == 0)) {
  1455  030F  0020               	movlb	0	; select bank0
  1456  0310  1A8D               	btfsc	13,5	;volatile
  1457  0311  2B47               	goto	l2169
  1458                           
  1459                           ;main.c: 400: if (timer8 == 0) {
  1460  0312  0836               	movf	_timer8,w	;volatile
  1461  0313  0437               	iorwf	_timer8+1,w	;volatile
  1462  0314  1D03               	btfss	3,2
  1463  0315  2B4C               	goto	l2171
  1464                           
  1465                           ;main.c: 401: timer8 = 10000;
  1466  0316  3010               	movlw	16
  1467  0317  00B6               	movwf	_timer8	;volatile
  1468  0318  3027               	movlw	39
  1469  0319  00B7               	movwf	_timer8+1	;volatile
  1470                           
  1471                           ;main.c: 402: if (moc == 166) {
  1472  031A  30A6               	movlw	166
  1473  031B  0647               	xorwf	_moc,w	;volatile
  1474  031C  1D03               	btfss	3,2
  1475  031D  2B20               	goto	l2165
  1476                           
  1477                           ;main.c: 403: moc = 0;
  1478  031E  01C7               	clrf	_moc	;volatile
  1479                           
  1480                           ;main.c: 404: }else{
  1481  031F  2B26               	goto	l2167
  1482  0320                     l2165:	
  1483                           
  1484                           ;main.c: 405: moc = 166;
  1485  0320  30A6               	movlw	166
  1486  0321  0021               	movlb	1	; select bank1
  1487  0322  00AC               	movwf	??_main^(0+128)
  1488  0323  082C               	movf	??_main^(0+128),w
  1489  0324  0020               	movlb	0	; select bank0
  1490  0325  00C7               	movwf	_moc	;volatile
  1491  0326                     l2167:	
  1492                           
  1493                           ;main.c: 406: }
  1494                           ;main.c: 407: LATAbits.LATA3 = 1;
  1495  0326  0022               	movlb	2	; select bank2
  1496  0327  158C               	bsf	12,3	;volatile
  1497  0328  0064               	clrwdt	;# 
  1498                           
  1499                           ;main.c: 409: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1500  0329  300B               	movlw	11
  1501  032A  0021               	movlb	1	; select bank1
  1502  032B  00AE               	movwf	(??_main^(0+128)+2)
  1503  032C  3026               	movlw	38
  1504  032D  00AD               	movwf	(??_main^(0+128)+1)
  1505  032E  3066               	movlw	102
  1506  032F  00AC               	movwf	??_main^(0+128)
  1507  0330                     u2867:	
  1508  0330  0BAC               	decfsz	??_main^(0+128),f
  1509  0331  2B30               	goto	u2867
  1510  0332  0BAD               	decfsz	(??_main^(0+128)+1),f
  1511  0333  2B30               	goto	u2867
  1512  0334  0BAE               	decfsz	(??_main^(0+128)+2),f
  1513  0335  2B30               	goto	u2867
  1514  0336  3200               	nop2
  1515  0337  0064               	clrwdt	;# 
  1516                           
  1517                           ;main.c: 411: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1518  0338  300B               	movlw	11
  1519  0339  0021               	movlb	1	; select bank1
  1520  033A  00AE               	movwf	(??_main^(0+128)+2)
  1521  033B  3026               	movlw	38
  1522  033C  00AD               	movwf	(??_main^(0+128)+1)
  1523  033D  3066               	movlw	102
  1524  033E  00AC               	movwf	??_main^(0+128)
  1525  033F                     u2877:	
  1526  033F  0BAC               	decfsz	??_main^(0+128),f
  1527  0340  2B3F               	goto	u2877
  1528  0341  0BAD               	decfsz	(??_main^(0+128)+1),f
  1529  0342  2B3F               	goto	u2877
  1530  0343  0BAE               	decfsz	(??_main^(0+128)+2),f
  1531  0344  2B3F               	goto	u2877
  1532  0345  3200               	nop2
  1533                           
  1534                           ;main.c: 412: }
  1535                           ;main.c: 413: }else{
  1536  0346  2B4C               	goto	l2171
  1537  0347                     l2169:	
  1538                           
  1539                           ;main.c: 414: timer8 = 10000;
  1540  0347  3010               	movlw	16
  1541  0348  0020               	movlb	0	; select bank0
  1542  0349  00B6               	movwf	_timer8	;volatile
  1543  034A  3027               	movlw	39
  1544  034B  00B7               	movwf	_timer8+1	;volatile
  1545  034C                     l2171:	
  1546                           
  1547                           ;main.c: 415: }
  1548                           ;main.c: 417: if (moc == 0) {
  1549  034C  0020               	movlb	0	; select bank0
  1550  034D  0847               	movf	_moc,w	;volatile
  1551  034E  1D03               	btfss	3,2
  1552  034F  2B52               	goto	l2175
  1553                           
  1554                           ;main.c: 419: ledBlink_time = 250;
  1555  0350  30FA               	movlw	250
  1556  0351  2B53               	goto	L1
  1557  0352                     l2175:	
  1558                           ;main.c: 420: }else{
  1559                           
  1560                           
  1561                           ;main.c: 422: ledBlink_time = 50;
  1562  0352  3032               	movlw	50
  1563  0353                     L1:	
  1564  0353  0021               	movlb	1	; select bank1
  1565  0354  00A2               	movwf	_ledBlink_time^(0+128)	;volatile
  1566  0355  3000               	movlw	0
  1567  0356  00A3               	movwf	(_ledBlink_time^(0+128)+1)	;volatile
  1568                           
  1569                           ;main.c: 423: }
  1570                           ;main.c: 430: if ( ( (czas_s!= czas_flash) || (flash_moc!= moc) ) && (PORTBbits.RB3 ==1)
      +                           && (PORTBbits.RB4 == 1) ) {
  1571  0357  0020               	movlb	0	; select bank0
  1572  0358  0829               	movf	_czas_flash+1,w	;volatile
  1573  0359  062B               	xorwf	_czas_s+1,w	;volatile
  1574  035A  1D03               	skipz
  1575  035B  2B5E               	goto	u2525
  1576  035C  0828               	movf	_czas_flash,w	;volatile
  1577  035D  062A               	xorwf	_czas_s,w	;volatile
  1578  035E                     u2525:	
  1579  035E  1D03               	skipz
  1580  035F  2B64               	goto	l202
  1581  0360  0842               	movf	_flash_moc,w	;volatile
  1582  0361  0647               	xorwf	_moc,w	;volatile
  1583  0362  1903               	skipnz
  1584  0363  2BFD               	goto	l2211
  1585  0364                     l202:	
  1586  0364  198D               	btfsc	13,3	;volatile
  1587  0365  1E0D               	btfss	13,4	;volatile
  1588  0366  2BFD               	goto	l2211
  1589                           
  1590                           ;main.c: 432: if (timer7<4000) {
  1591  0367  300F               	movlw	15
  1592  0368  0235               	subwf	_timer7+1,w	;volatile
  1593  0369  30A0               	movlw	160
  1594  036A  1903               	skipnz
  1595  036B  0234               	subwf	_timer7,w	;volatile
  1596  036C  1803               	skipnc
  1597  036D  2B77               	goto	l2185
  1598                           
  1599                           ;main.c: 433: kro_1 = 1;
  1600  036E  3001               	movlw	1
  1601  036F  0021               	movlb	1	; select bank1
  1602  0370  00AC               	movwf	??_main^(0+128)
  1603  0371  082C               	movf	??_main^(0+128),w
  1604  0372  00AA               	movwf	_kro_1^(0+128)	;volatile
  1605                           
  1606                           ;main.c: 434: kro_2 = 1;
  1607  0373  3001               	movlw	1
  1608  0374  00AC               	movwf	??_main^(0+128)
  1609  0375  082C               	movf	??_main^(0+128),w
  1610  0376  00AB               	movwf	_kro_2^(0+128)	;volatile
  1611  0377                     l2185:	
  1612                           
  1613                           ;main.c: 435: }
  1614                           ;main.c: 438: if (timer7 == 0 ) {
  1615  0377  0020               	movlb	0	; select bank0
  1616  0378  0834               	movf	_timer7,w	;volatile
  1617  0379  0435               	iorwf	_timer7+1,w	;volatile
  1618  037A  1D03               	btfss	3,2
  1619  037B  2C01               	goto	l2213
  1620                           
  1621                           ;main.c: 442: unsigned char tmp;
  1622                           ;main.c: 443: tmp = (czas_s & 0x00ff);
  1623  037C  082A               	movf	_czas_s,w	;volatile
  1624  037D  0021               	movlb	1	; select bank1
  1625  037E  00AC               	movwf	??_main^(0+128)
  1626  037F  082C               	movf	??_main^(0+128),w
  1627  0380  0020               	movlb	0	; select bank0
  1628  0381  00E1               	movwf	main@tmp
  1629                           
  1630                           ;main.c: 444: erase_flash(adr_hi, adr_low);
  1631  0382  086D               	movf	_adr_low,w	;volatile
  1632  0383  0021               	movlb	1	; select bank1
  1633  0384  00AC               	movwf	??_main^(0+128)
  1634  0385  082C               	movf	??_main^(0+128),w
  1635  0386  0020               	movlb	0	; select bank0
  1636  0387  00CC               	movwf	erase_flash@adr_lo
  1637  0388  086C               	movf	_adr_hi,w	;volatile
  1638  0389  3187  277C  3181   	fcall	_erase_flash
  1639                           
  1640                           ;main.c: 445: write_flash(adr_hi, adr_low, tmp );
  1641  038C  0020               	movlb	0	; select bank0
  1642  038D  086D               	movf	_adr_low,w	;volatile
  1643  038E  0021               	movlb	1	; select bank1
  1644  038F  00AC               	movwf	??_main^(0+128)
  1645  0390  082C               	movf	??_main^(0+128),w
  1646  0391  0020               	movlb	0	; select bank0
  1647  0392  00CC               	movwf	write_flash@adr_lo
  1648  0393  0861               	movf	main@tmp,w
  1649  0394  0021               	movlb	1	; select bank1
  1650  0395  00AD               	movwf	(??_main+1)^(0+128)
  1651  0396  082D               	movf	(??_main+1)^(0+128),w
  1652  0397  0020               	movlb	0	; select bank0
  1653  0398  00CD               	movwf	write_flash@data_lo
  1654  0399  086C               	movf	_adr_hi,w	;volatile
  1655  039A  3187  2755  3181   	fcall	_write_flash
  1656                           
  1657                           ;main.c: 446: tmp = ((czas_s >>8)&0x00ff);
  1658  039D  0020               	movlb	0	; select bank0
  1659  039E  082B               	movf	_czas_s+1,w	;volatile
  1660  039F  0021               	movlb	1	; select bank1
  1661  03A0  00AC               	movwf	??_main^(0+128)
  1662  03A1  082C               	movf	??_main^(0+128),w
  1663  03A2  0020               	movlb	0	; select bank0
  1664  03A3  00E1               	movwf	main@tmp
  1665                           
  1666                           ;main.c: 447: write_flash(adr_hi, adr_low2, tmp);
  1667  03A4  086E               	movf	_adr_low2,w	;volatile
  1668  03A5  0021               	movlb	1	; select bank1
  1669  03A6  00AC               	movwf	??_main^(0+128)
  1670  03A7  082C               	movf	??_main^(0+128),w
  1671  03A8  0020               	movlb	0	; select bank0
  1672  03A9  00CC               	movwf	write_flash@adr_lo
  1673  03AA  0861               	movf	main@tmp,w
  1674  03AB  0021               	movlb	1	; select bank1
  1675  03AC  00AD               	movwf	(??_main+1)^(0+128)
  1676  03AD  082D               	movf	(??_main+1)^(0+128),w
  1677  03AE  0020               	movlb	0	; select bank0
  1678  03AF  00CD               	movwf	write_flash@data_lo
  1679  03B0  086C               	movf	_adr_hi,w	;volatile
  1680  03B1  3187  2755  3181   	fcall	_write_flash
  1681                           
  1682                           ;main.c: 449: write_flash(adr_hi, adr_moc, moc);
  1683  03B4  0020               	movlb	0	; select bank0
  1684  03B5  086F               	movf	_adr_moc,w	;volatile
  1685  03B6  0021               	movlb	1	; select bank1
  1686  03B7  00AC               	movwf	??_main^(0+128)
  1687  03B8  082C               	movf	??_main^(0+128),w
  1688  03B9  0020               	movlb	0	; select bank0
  1689  03BA  00CC               	movwf	write_flash@adr_lo
  1690  03BB  0847               	movf	_moc,w	;volatile
  1691  03BC  0021               	movlb	1	; select bank1
  1692  03BD  00AD               	movwf	(??_main+1)^(0+128)
  1693  03BE  082D               	movf	(??_main+1)^(0+128),w
  1694  03BF  0020               	movlb	0	; select bank0
  1695  03C0  00CD               	movwf	write_flash@data_lo
  1696  03C1  086C               	movf	_adr_hi,w	;volatile
  1697  03C2  3187  2755  3181   	fcall	_write_flash
  1698                           
  1699                           ;main.c: 454: flash_low = read_flash(adr_hi, adr_low);
  1700  03C5  0020               	movlb	0	; select bank0
  1701  03C6  086D               	movf	_adr_low,w	;volatile
  1702  03C7  0021               	movlb	1	; select bank1
  1703  03C8  00AC               	movwf	??_main^(0+128)
  1704  03C9  082C               	movf	??_main^(0+128),w
  1705  03CA  0020               	movlb	0	; select bank0
  1706  03CB  00CC               	movwf	read_flash@adrs_lo
  1707  03CC  086C               	movf	_adr_hi,w	;volatile
  1708  03CD  3187  279C  3181   	fcall	_read_flash
  1709  03D0  0021               	movlb	1	; select bank1
  1710  03D1  00AD               	movwf	(??_main+1)^(0+128)
  1711  03D2  082D               	movf	(??_main+1)^(0+128),w
  1712  03D3  0020               	movlb	0	; select bank0
  1713  03D4  00C1               	movwf	_flash_low	;volatile
  1714                           
  1715                           ;main.c: 455: flash_hi = (read_flash(adr_hi, adr_low2) );
  1716  03D5  086E               	movf	_adr_low2,w	;volatile
  1717  03D6  0021               	movlb	1	; select bank1
  1718  03D7  00AC               	movwf	??_main^(0+128)
  1719  03D8  082C               	movf	??_main^(0+128),w
  1720  03D9  0020               	movlb	0	; select bank0
  1721  03DA  00CC               	movwf	read_flash@adrs_lo
  1722  03DB  086C               	movf	_adr_hi,w	;volatile
  1723  03DC  3187  279C  3181   	fcall	_read_flash
  1724  03DF  0021               	movlb	1	; select bank1
  1725  03E0  00AD               	movwf	(??_main+1)^(0+128)
  1726  03E1  082D               	movf	(??_main+1)^(0+128),w
  1727  03E2  0020               	movlb	0	; select bank0
  1728  03E3  00C0               	movwf	_flash_hi	;volatile
  1729                           
  1730                           ;main.c: 457: flash_moc = read_flash(adr_hi, adr_moc);
  1731  03E4  086F               	movf	_adr_moc,w	;volatile
  1732  03E5  0021               	movlb	1	; select bank1
  1733  03E6  00AC               	movwf	??_main^(0+128)
  1734  03E7  082C               	movf	??_main^(0+128),w
  1735  03E8  0020               	movlb	0	; select bank0
  1736  03E9  00CC               	movwf	read_flash@adrs_lo
  1737  03EA  086C               	movf	_adr_hi,w	;volatile
  1738  03EB  3187  279C  3181   	fcall	_read_flash
  1739  03EE  0021               	movlb	1	; select bank1
  1740  03EF  00AD               	movwf	(??_main+1)^(0+128)
  1741  03F0  082D               	movf	(??_main+1)^(0+128),w
  1742  03F1  0020               	movlb	0	; select bank0
  1743  03F2  00C2               	movwf	_flash_moc	;volatile
  1744                           
  1745                           ;main.c: 460: flash_moc = moc;
  1746  03F3  0847               	movf	_moc,w	;volatile
  1747  03F4  0021               	movlb	1	; select bank1
  1748  03F5  00AC               	movwf	??_main^(0+128)
  1749  03F6  082C               	movf	??_main^(0+128),w
  1750  03F7  0020               	movlb	0	; select bank0
  1751  03F8  00C2               	movwf	_flash_moc	;volatile
  1752                           
  1753                           ;main.c: 461: czas_flash = czas_s;
  1754  03F9  082B               	movf	_czas_s+1,w	;volatile
  1755  03FA  00A9               	movwf	_czas_flash+1	;volatile
  1756  03FB  082A               	movf	_czas_s,w	;volatile
  1757  03FC  00A8               	movwf	_czas_flash	;volatile
  1758  03FD                     l2211:	
  1759                           ;main.c: 463: }
  1760                           ;main.c: 464: }else{
  1761                           
  1762                           ;main.c: 462: timer7 = 5000;
  1763                           
  1764                           
  1765                           ;main.c: 465: timer7 = 5000;
  1766  03FD  3088               	movlw	136
  1767  03FE  00B4               	movwf	_timer7	;volatile
  1768  03FF  3013               	movlw	19
  1769  0400  00B5               	movwf	_timer7+1	;volatile
  1770  0401                     l2213:	
  1771                           
  1772                           ;main.c: 466: }
  1773                           ;main.c: 479: if ( (PORTBbits.RB5 == 0) ) {
  1774  0401  1A8D               	btfsc	13,5	;volatile
  1775  0402  2C25               	goto	l2227
  1776                           
  1777                           ;main.c: 480: if ( (START_Fl ==0) && (timer3<10) ) {
  1778  0403  0839               	movf	_START_Fl,w	;volatile
  1779  0404  1D03               	btfss	3,2
  1780  0405  2C2A               	goto	l2231
  1781  0406  3000               	movlw	0
  1782  0407  022F               	subwf	_timer3+1,w	;volatile
  1783  0408  300A               	movlw	10
  1784  0409  1903               	skipnz
  1785  040A  022E               	subwf	_timer3,w	;volatile
  1786  040B  1803               	skipnc
  1787  040C  2C2A               	goto	l2231
  1788                           
  1789                           ;main.c: 481: if (START == 0 ) {
  1790  040D  0838               	movf	_START,w	;volatile
  1791  040E  1D03               	btfss	3,2
  1792  040F  2C1D               	goto	l2223
  1793                           
  1794                           ;main.c: 482: START = 1;
  1795  0410  3001               	movlw	1
  1796  0411  0021               	movlb	1	; select bank1
  1797  0412  00AC               	movwf	??_main^(0+128)
  1798  0413  082C               	movf	??_main^(0+128),w
  1799  0414  0020               	movlb	0	; select bank0
  1800  0415  00B8               	movwf	_START	;volatile
  1801                           
  1802                           ;main.c: 483: grzalka_numer = 1;
  1803  0416  3001               	movlw	1
  1804  0417  0021               	movlb	1	; select bank1
  1805  0418  00AC               	movwf	??_main^(0+128)
  1806  0419  082C               	movf	??_main^(0+128),w
  1807  041A  0020               	movlb	0	; select bank0
  1808  041B  00EB               	movwf	_grzalka_numer	;volatile
  1809                           
  1810                           ;main.c: 484: }else{
  1811  041C  2C1E               	goto	l2225
  1812  041D                     l2223:	
  1813                           
  1814                           ;main.c: 485: START = 0;
  1815  041D  01B8               	clrf	_START	;volatile
  1816  041E                     l2225:	
  1817                           
  1818                           ;main.c: 486: }
  1819                           ;main.c: 487: START_Fl = 1;
  1820  041E  3001               	movlw	1
  1821  041F  0021               	movlb	1	; select bank1
  1822  0420  00AC               	movwf	??_main^(0+128)
  1823  0421  082C               	movf	??_main^(0+128),w
  1824  0422  0020               	movlb	0	; select bank0
  1825  0423  00B9               	movwf	_START_Fl	;volatile
  1826                           
  1827                           ;main.c: 488: }
  1828                           ;main.c: 489: }else{
  1829  0424  2C2A               	goto	l2231
  1830  0425                     l2227:	
  1831                           
  1832                           ;main.c: 490: START_Fl = 0;
  1833  0425  01B9               	clrf	_START_Fl	;volatile
  1834                           
  1835                           ;main.c: 491: timer3 = 60;
  1836  0426  303C               	movlw	60
  1837  0427  00AE               	movwf	_timer3	;volatile
  1838  0428  3000               	movlw	0
  1839  0429  00AF               	movwf	_timer3+1	;volatile
  1840  042A                     l2231:	
  1841                           
  1842                           ;main.c: 492: }
  1843                           ;main.c: 495: if (czas_s < 1) {
  1844  042A  082A               	movf	_czas_s,w	;volatile
  1845  042B  042B               	iorwf	_czas_s+1,w	;volatile
  1846  042C  1D03               	btfss	3,2
  1847  042D  2C32               	goto	l2235
  1848                           
  1849                           ;main.c: 496: czas_s = 1;
  1850  042E  3001               	movlw	1
  1851  042F  00AA               	movwf	_czas_s	;volatile
  1852  0430  3000               	movlw	0
  1853  0431  00AB               	movwf	_czas_s+1	;volatile
  1854  0432                     l2235:	
  1855                           
  1856                           ;main.c: 497: }
  1857                           ;main.c: 498: czas_ms = czas_s *1000UL;
  1858  0432  082A               	movf	_czas_s,w	;volatile
  1859  0433  00CC               	movwf	___lmul@multiplier
  1860  0434  082B               	movf	_czas_s+1,w	;volatile
  1861  0435  00CD               	movwf	___lmul@multiplier+1
  1862  0436  01CE               	clrf	___lmul@multiplier+2
  1863  0437  01CF               	clrf	___lmul@multiplier+3
  1864  0438  3000               	movlw	0
  1865  0439  00D3               	movwf	___lmul@multiplicand+3
  1866  043A  3000               	movlw	0
  1867  043B  00D2               	movwf	___lmul@multiplicand+2
  1868  043C  3003               	movlw	3
  1869  043D  00D1               	movwf	___lmul@multiplicand+1
  1870  043E  30E8               	movlw	232
  1871  043F  00D0               	movwf	___lmul@multiplicand
  1872  0440  3186  26F8  3181   	fcall	___lmul
  1873  0443  0020               	movlb	0	; select bank0
  1874  0444  084F               	movf	?___lmul+3,w
  1875  0445  00A3               	movwf	_czas_ms+3	;volatile
  1876  0446  084E               	movf	?___lmul+2,w
  1877  0447  00A2               	movwf	_czas_ms+2	;volatile
  1878  0448  084D               	movf	?___lmul+1,w
  1879  0449  00A1               	movwf	_czas_ms+1	;volatile
  1880  044A  084C               	movf	?___lmul,w
  1881  044B  00A0               	movwf	_czas_ms	;volatile
  1882                           
  1883                           ;main.c: 499: if (grzalka_numer>6) {
  1884  044C  3007               	movlw	7
  1885  044D  026B               	subwf	_grzalka_numer,w	;volatile
  1886  044E  1C03               	skipc
  1887  044F  2C56               	goto	l2241
  1888                           
  1889                           ;main.c: 500: grzalka_numer =1;
  1890  0450  3001               	movlw	1
  1891  0451  0021               	movlb	1	; select bank1
  1892  0452  00AC               	movwf	??_main^(0+128)
  1893  0453  082C               	movf	??_main^(0+128),w
  1894  0454  0020               	movlb	0	; select bank0
  1895  0455  00EB               	movwf	_grzalka_numer	;volatile
  1896  0456                     l2241:	
  1897                           
  1898                           ;main.c: 501: }
  1899                           ;main.c: 502: if ( (START == 1) && (timer5 ==0) && (moc ==0) ) {
  1900  0456  0338               	decf	_START,w	;volatile
  1901  0457  1D03               	btfss	3,2
  1902  0458  2CAF               	goto	l213
  1903  0459  0867               	movf	_timer5+3,w	;volatile
  1904  045A  0466               	iorwf	_timer5+2,w	;volatile
  1905  045B  0465               	iorwf	_timer5+1,w	;volatile
  1906  045C  0464               	iorwf	_timer5,w	;volatile
  1907  045D  1D03               	skipz
  1908  045E  2CAF               	goto	l213
  1909  045F  0847               	movf	_moc,w	;volatile
  1910  0460  1D03               	btfss	3,2
  1911  0461  2CAF               	goto	l213
  1912                           
  1913                           ;main.c: 503: timer5 = czas_ms;
  1914  0462  0823               	movf	_czas_ms+3,w	;volatile
  1915  0463  00E7               	movwf	_timer5+3	;volatile
  1916  0464  0822               	movf	_czas_ms+2,w	;volatile
  1917  0465  00E6               	movwf	_timer5+2	;volatile
  1918  0466  0821               	movf	_czas_ms+1,w	;volatile
  1919  0467  00E5               	movwf	_timer5+1	;volatile
  1920  0468  0820               	movf	_czas_ms,w	;volatile
  1921  0469  00E4               	movwf	_timer5	;volatile
  1922                           
  1923                           ;main.c: 505: switch (grzalka_numer) {
  1924  046A  2C94               	goto	l2275
  1925  046B                     l215:	
  1926                           ;main.c: 506: case 1:
  1927                           
  1928                           
  1929                           ;main.c: 507: LATAbits.LATA0 = 1;
  1930  046B  0022               	movlb	2	; select bank2
  1931  046C  140C               	bsf	12,0	;volatile
  1932  046D  2C91               	goto	L8
  1933  046E                     l2249:	
  1934                           ;main.c: 511: case 2:
  1935                           
  1936                           ;main.c: 510: break;
  1937                           
  1938                           ;main.c: 509: LATAbits.LATA2 = 0;
  1939                           
  1940                           ;main.c: 508: LATAbits.LATA1 = 0;
  1941                           
  1942  046E  2C79               	goto	l2265
  1943  046F                     l218:	
  1944                           ;main.c: 517: case 3:
  1945                           
  1946                           ;main.c: 516: break;
  1947                           
  1948                           ;main.c: 515: LATAbits.LATA2 = 0;
  1949                           
  1950                           ;main.c: 514: LATAbits.LATA1 = 0;
  1951                           
  1952                           ;main.c: 513: LATAbits.LATA0 = 0;
  1953                           
  1954                           ;main.c: 512: timer5 = czas_przerwa_ms;
  1955                           
  1956                           
  1957                           ;main.c: 518: LATAbits.LATA0 = 0;
  1958  046F  0022               	movlb	2	; select bank2
  1959  0470  100C               	bcf	12,0	;volatile
  1960                           
  1961                           ;main.c: 519: LATAbits.LATA1 = 1;
  1962  0471  148C               	bsf	12,1	;volatile
  1963  0472  2C92               	goto	l2271
  1964  0473                     l2257:	
  1965                           ;main.c: 522: case 4:
  1966                           
  1967                           ;main.c: 521: break;
  1968                           
  1969                           ;main.c: 520: LATAbits.LATA2 = 0;
  1970                           
  1971  0473  2C79               	goto	l2265
  1972  0474                     l220:	
  1973                           ;main.c: 528: case 5:
  1974                           
  1975                           ;main.c: 527: break;
  1976                           
  1977                           ;main.c: 526: LATAbits.LATA2 = 0;
  1978                           
  1979                           ;main.c: 525: LATAbits.LATA1 = 0;
  1980                           
  1981                           ;main.c: 524: LATAbits.LATA0 = 0;
  1982                           
  1983                           ;main.c: 523: timer5 = czas_przerwa_ms;
  1984                           
  1985                           
  1986                           ;main.c: 529: LATAbits.LATA0 = 0;
  1987  0474  0022               	movlb	2	; select bank2
  1988  0475  100C               	bcf	12,0	;volatile
  1989                           
  1990                           ;main.c: 530: LATAbits.LATA1 = 0;
  1991  0476  108C               	bcf	12,1	;volatile
  1992                           
  1993                           ;main.c: 531: LATAbits.LATA2 = 1;
  1994  0477  150C               	bsf	12,2	;volatile
  1995                           
  1996                           ;main.c: 532: break;
  1997  0478  2CA9               	goto	l2277
  1998  0479                     l2265:	
  1999                           ;main.c: 533: case 6:
  2000                           
  2001                           
  2002                           ;main.c: 534: timer5 = czas_przerwa_ms;
  2003  0479  0020               	movlb	0	; select bank0
  2004  047A  086A               	movf	_czas_przerwa_ms,w	;volatile
  2005  047B  0021               	movlb	1	; select bank1
  2006  047C  00AC               	movwf	??_main^(0+128)
  2007  047D  01AD               	clrf	(??_main^(0+128)+1)
  2008  047E  01AE               	clrf	(??_main^(0+128)+2)
  2009  047F  01AF               	clrf	(??_main^(0+128)+3)
  2010  0480  082F               	movf	(??_main+3)^(0+128),w
  2011  0481  0020               	movlb	0	; select bank0
  2012  0482  00E7               	movwf	_timer5+3	;volatile
  2013  0483  0021               	movlb	1	; select bank1
  2014  0484  082E               	movf	(??_main+2)^(0+128),w
  2015  0485  0020               	movlb	0	; select bank0
  2016  0486  00E6               	movwf	_timer5+2	;volatile
  2017  0487  0021               	movlb	1	; select bank1
  2018  0488  082D               	movf	(??_main+1)^(0+128),w
  2019  0489  0020               	movlb	0	; select bank0
  2020  048A  00E5               	movwf	_timer5+1	;volatile
  2021  048B  0021               	movlb	1	; select bank1
  2022  048C  082C               	movf	??_main^(0+128),w
  2023  048D  0020               	movlb	0	; select bank0
  2024  048E  00E4               	movwf	_timer5	;volatile
  2025                           
  2026                           ;main.c: 535: LATAbits.LATA0 = 0;
  2027  048F  0022               	movlb	2	; select bank2
  2028  0490  100C               	bcf	12,0	;volatile
  2029  0491                     L8:	
  2030                           
  2031                           ;main.c: 536: LATAbits.LATA1 = 0;
  2032  0491  108C               	bcf	12,1	;volatile
  2033  0492                     l2271:	
  2034                           
  2035                           ;main.c: 537: LATAbits.LATA2 = 0;
  2036  0492  110C               	bcf	12,2	;volatile
  2037                           
  2038                           ;main.c: 539: }
  2039                           
  2040                           ;main.c: 538: break;
  2041  0493  2CA9               	goto	l2277
  2042  0494                     l2275:	
  2043  0494  0020               	movlb	0	; select bank0
  2044  0495  086B               	movf	_grzalka_numer,w	;volatile
  2045                           
  2046                           ; Switch size 1, requested type "space"
  2047                           ; Number of cases is 6, Range of values is 1 to 6
  2048                           ; switch strategies available:
  2049                           ; Name         Instructions Cycles
  2050                           ; simple_byte           19    10 (average)
  2051                           ; direct_byte           21     9 (fixed)
  2052                           ; jumptable            263     9 (fixed)
  2053                           ;	Chosen strategy is simple_byte
  2054  0496  3A01               	xorlw	1	; case 1
  2055  0497  1903               	skipnz
  2056  0498  2C6B               	goto	l215
  2057  0499  3A03               	xorlw	3	; case 2
  2058  049A  1903               	skipnz
  2059  049B  2C6E               	goto	l2249
  2060  049C  3A01               	xorlw	1	; case 3
  2061  049D  1903               	skipnz
  2062  049E  2C6F               	goto	l218
  2063  049F  3A07               	xorlw	7	; case 4
  2064  04A0  1903               	skipnz
  2065  04A1  2C73               	goto	l2257
  2066  04A2  3A01               	xorlw	1	; case 5
  2067  04A3  1903               	skipnz
  2068  04A4  2C74               	goto	l220
  2069  04A5  3A03               	xorlw	3	; case 6
  2070  04A6  1903               	skipnz
  2071  04A7  2C79               	goto	l2265
  2072  04A8  2CA9               	goto	l2277
  2073  04A9                     l2277:	
  2074                           
  2075                           ;main.c: 540: grzalka_numer++;
  2076  04A9  3001               	movlw	1
  2077  04AA  0021               	movlb	1	; select bank1
  2078  04AB  00AC               	movwf	??_main^(0+128)
  2079  04AC  082C               	movf	??_main^(0+128),w
  2080  04AD  0020               	movlb	0	; select bank0
  2081  04AE  07EB               	addwf	_grzalka_numer,f	;volatile
  2082  04AF                     l213:	
  2083                           
  2084                           ;main.c: 541: }
  2085                           ;main.c: 543: if ( (START == 1) && (timer5 ==0) && (moc == 166) ) {
  2086  04AF  0338               	decf	_START,w	;volatile
  2087  04B0  1D03               	btfss	3,2
  2088  04B1  2D39               	goto	l222
  2089  04B2  0867               	movf	_timer5+3,w	;volatile
  2090  04B3  0466               	iorwf	_timer5+2,w	;volatile
  2091  04B4  0465               	iorwf	_timer5+1,w	;volatile
  2092  04B5  0464               	iorwf	_timer5,w	;volatile
  2093  04B6  1D03               	skipz
  2094  04B7  2D39               	goto	l222
  2095  04B8  30A6               	movlw	166
  2096  04B9  0647               	xorwf	_moc,w	;volatile
  2097  04BA  1D03               	btfss	3,2
  2098  04BB  2D39               	goto	l222
  2099                           
  2100                           ;main.c: 544: timer5 = czas_ms;
  2101  04BC  0823               	movf	_czas_ms+3,w	;volatile
  2102  04BD  00E7               	movwf	_timer5+3	;volatile
  2103  04BE  0822               	movf	_czas_ms+2,w	;volatile
  2104  04BF  00E6               	movwf	_timer5+2	;volatile
  2105  04C0  0821               	movf	_czas_ms+1,w	;volatile
  2106  04C1  00E5               	movwf	_timer5+1	;volatile
  2107  04C2  0820               	movf	_czas_ms,w	;volatile
  2108  04C3  00E4               	movwf	_timer5	;volatile
  2109                           
  2110                           ;main.c: 546: switch (grzalka_numer) {
  2111  04C4  2D1E               	goto	l2311
  2112  04C5                     l2285:	
  2113                           ;main.c: 547: case 1:
  2114                           
  2115                           
  2116                           ;main.c: 548: timer5 = czas_przerwa_ms;
  2117  04C5  086A               	movf	_czas_przerwa_ms,w	;volatile
  2118  04C6  0021               	movlb	1	; select bank1
  2119  04C7  00AC               	movwf	??_main^(0+128)
  2120  04C8  01AD               	clrf	(??_main^(0+128)+1)
  2121  04C9  01AE               	clrf	(??_main^(0+128)+2)
  2122  04CA  01AF               	clrf	(??_main^(0+128)+3)
  2123  04CB  082F               	movf	(??_main+3)^(0+128),w
  2124  04CC  0020               	movlb	0	; select bank0
  2125  04CD  00E7               	movwf	_timer5+3	;volatile
  2126  04CE  0021               	movlb	1	; select bank1
  2127  04CF  082E               	movf	(??_main+2)^(0+128),w
  2128  04D0  0020               	movlb	0	; select bank0
  2129  04D1  00E6               	movwf	_timer5+2	;volatile
  2130  04D2  0021               	movlb	1	; select bank1
  2131  04D3  082D               	movf	(??_main+1)^(0+128),w
  2132  04D4  0020               	movlb	0	; select bank0
  2133  04D5  00E5               	movwf	_timer5+1	;volatile
  2134  04D6  0021               	movlb	1	; select bank1
  2135  04D7  082C               	movf	??_main^(0+128),w
  2136  04D8  0020               	movlb	0	; select bank0
  2137  04D9  00E4               	movwf	_timer5	;volatile
  2138                           
  2139                           ;main.c: 549: LATAbits.LATA0 = 1;
  2140  04DA  0022               	movlb	2	; select bank2
  2141  04DB  140C               	bsf	12,0	;volatile
  2142                           
  2143                           ;main.c: 550: LATAbits.LATA1 = 0;
  2144  04DC  108C               	bcf	12,1	;volatile
  2145  04DD  2CFA               	goto	l2299
  2146  04DE                     l226:	
  2147                           ;main.c: 553: case 2:
  2148                           
  2149                           ;main.c: 552: break;
  2150                           
  2151                           ;main.c: 551: LATAbits.LATA2 = 0;
  2152                           
  2153                           
  2154                           ;main.c: 554: LATAbits.LATA0 = 1;
  2155  04DE  0022               	movlb	2	; select bank2
  2156  04DF  140C               	bsf	12,0	;volatile
  2157  04E0  2CF9               	goto	L5
  2158  04E1                     l2293:	
  2159                           ;main.c: 558: case 3:
  2160                           
  2161                           ;main.c: 557: break;
  2162                           
  2163                           ;main.c: 556: LATAbits.LATA2 = 0;
  2164                           
  2165                           ;main.c: 555: LATAbits.LATA1 = 1;
  2166                           
  2167                           
  2168                           ;main.c: 559: timer5 = czas_przerwa_ms;
  2169  04E1  0020               	movlb	0	; select bank0
  2170  04E2  086A               	movf	_czas_przerwa_ms,w	;volatile
  2171  04E3  0021               	movlb	1	; select bank1
  2172  04E4  00AC               	movwf	??_main^(0+128)
  2173  04E5  01AD               	clrf	(??_main^(0+128)+1)
  2174  04E6  01AE               	clrf	(??_main^(0+128)+2)
  2175  04E7  01AF               	clrf	(??_main^(0+128)+3)
  2176  04E8  082F               	movf	(??_main+3)^(0+128),w
  2177  04E9  0020               	movlb	0	; select bank0
  2178  04EA  00E7               	movwf	_timer5+3	;volatile
  2179  04EB  0021               	movlb	1	; select bank1
  2180  04EC  082E               	movf	(??_main+2)^(0+128),w
  2181  04ED  0020               	movlb	0	; select bank0
  2182  04EE  00E6               	movwf	_timer5+2	;volatile
  2183  04EF  0021               	movlb	1	; select bank1
  2184  04F0  082D               	movf	(??_main+1)^(0+128),w
  2185  04F1  0020               	movlb	0	; select bank0
  2186  04F2  00E5               	movwf	_timer5+1	;volatile
  2187  04F3  0021               	movlb	1	; select bank1
  2188  04F4  082C               	movf	??_main^(0+128),w
  2189  04F5  0020               	movlb	0	; select bank0
  2190  04F6  00E4               	movwf	_timer5	;volatile
  2191                           
  2192                           ;main.c: 560: LATAbits.LATA0 = 0;
  2193  04F7  0022               	movlb	2	; select bank2
  2194  04F8  100C               	bcf	12,0	;volatile
  2195  04F9                     L5:	
  2196                           
  2197                           ;main.c: 561: LATAbits.LATA1 = 1;
  2198  04F9  148C               	bsf	12,1	;volatile
  2199  04FA                     l2299:	
  2200                           
  2201                           ;main.c: 562: LATAbits.LATA2 = 0;
  2202  04FA  110C               	bcf	12,2	;volatile
  2203                           
  2204                           ;main.c: 563: break;
  2205  04FB  2D33               	goto	l2313
  2206  04FC                     l228:	
  2207                           ;main.c: 564: case 4:
  2208                           
  2209                           
  2210                           ;main.c: 565: LATAbits.LATA0 = 0;
  2211  04FC  0022               	movlb	2	; select bank2
  2212  04FD  100C               	bcf	12,0	;volatile
  2213                           
  2214                           ;main.c: 566: LATAbits.LATA1 = 1;
  2215  04FE  148C               	bsf	12,1	;volatile
  2216  04FF  2D1C               	goto	L4
  2217  0500                     l2301:	
  2218                           ;main.c: 569: case 5:
  2219                           
  2220                           ;main.c: 568: break;
  2221                           
  2222                           ;main.c: 567: LATAbits.LATA2 = 1;
  2223                           
  2224                           
  2225                           ;main.c: 570: timer5 = czas_przerwa_ms;
  2226  0500  0020               	movlb	0	; select bank0
  2227  0501  086A               	movf	_czas_przerwa_ms,w	;volatile
  2228  0502  0021               	movlb	1	; select bank1
  2229  0503  00AC               	movwf	??_main^(0+128)
  2230  0504  01AD               	clrf	(??_main^(0+128)+1)
  2231  0505  01AE               	clrf	(??_main^(0+128)+2)
  2232  0506  01AF               	clrf	(??_main^(0+128)+3)
  2233  0507  082F               	movf	(??_main+3)^(0+128),w
  2234  0508  0020               	movlb	0	; select bank0
  2235  0509  00E7               	movwf	_timer5+3	;volatile
  2236  050A  0021               	movlb	1	; select bank1
  2237  050B  082E               	movf	(??_main+2)^(0+128),w
  2238  050C  0020               	movlb	0	; select bank0
  2239  050D  00E6               	movwf	_timer5+2	;volatile
  2240  050E  0021               	movlb	1	; select bank1
  2241  050F  082D               	movf	(??_main+1)^(0+128),w
  2242  0510  0020               	movlb	0	; select bank0
  2243  0511  00E5               	movwf	_timer5+1	;volatile
  2244  0512  0021               	movlb	1	; select bank1
  2245  0513  082C               	movf	??_main^(0+128),w
  2246  0514  0020               	movlb	0	; select bank0
  2247  0515  00E4               	movwf	_timer5	;volatile
  2248                           
  2249                           ;main.c: 571: LATAbits.LATA0 = 0;
  2250  0516  0022               	movlb	2	; select bank2
  2251  0517  100C               	bcf	12,0	;volatile
  2252  0518  2D1B               	goto	L6
  2253  0519                     l230:	
  2254                           ;main.c: 575: case 6:
  2255                           
  2256                           ;main.c: 574: break;
  2257                           
  2258                           ;main.c: 573: LATAbits.LATA2 = 1;
  2259                           
  2260                           ;main.c: 572: LATAbits.LATA1 = 0;
  2261                           
  2262                           
  2263                           ;main.c: 576: LATAbits.LATA0 = 1;
  2264  0519  0022               	movlb	2	; select bank2
  2265  051A  140C               	bsf	12,0	;volatile
  2266  051B                     L6:	
  2267                           
  2268                           ;main.c: 577: LATAbits.LATA1 = 0;
  2269  051B  108C               	bcf	12,1	;volatile
  2270  051C                     L4:	
  2271                           
  2272                           ;main.c: 578: LATAbits.LATA2 = 1;
  2273  051C  150C               	bsf	12,2	;volatile
  2274                           
  2275                           ;main.c: 580: }
  2276                           
  2277                           ;main.c: 579: break;
  2278  051D  2D33               	goto	l2313
  2279  051E                     l2311:	
  2280  051E  0020               	movlb	0	; select bank0
  2281  051F  086B               	movf	_grzalka_numer,w	;volatile
  2282                           
  2283                           ; Switch size 1, requested type "space"
  2284                           ; Number of cases is 6, Range of values is 1 to 6
  2285                           ; switch strategies available:
  2286                           ; Name         Instructions Cycles
  2287                           ; simple_byte           19    10 (average)
  2288                           ; direct_byte           21     9 (fixed)
  2289                           ; jumptable            263     9 (fixed)
  2290                           ;	Chosen strategy is simple_byte
  2291  0520  3A01               	xorlw	1	; case 1
  2292  0521  1903               	skipnz
  2293  0522  2CC5               	goto	l2285
  2294  0523  3A03               	xorlw	3	; case 2
  2295  0524  1903               	skipnz
  2296  0525  2CDE               	goto	l226
  2297  0526  3A01               	xorlw	1	; case 3
  2298  0527  1903               	skipnz
  2299  0528  2CE1               	goto	l2293
  2300  0529  3A07               	xorlw	7	; case 4
  2301  052A  1903               	skipnz
  2302  052B  2CFC               	goto	l228
  2303  052C  3A01               	xorlw	1	; case 5
  2304  052D  1903               	skipnz
  2305  052E  2D00               	goto	l2301
  2306  052F  3A03               	xorlw	3	; case 6
  2307  0530  1903               	skipnz
  2308  0531  2D19               	goto	l230
  2309  0532  2D33               	goto	l2313
  2310  0533                     l2313:	
  2311                           
  2312                           ;main.c: 581: grzalka_numer++;
  2313  0533  3001               	movlw	1
  2314  0534  0021               	movlb	1	; select bank1
  2315  0535  00AC               	movwf	??_main^(0+128)
  2316  0536  082C               	movf	??_main^(0+128),w
  2317  0537  0020               	movlb	0	; select bank0
  2318  0538  07EB               	addwf	_grzalka_numer,f	;volatile
  2319  0539                     l222:	
  2320                           
  2321                           ;main.c: 582: }
  2322                           ;main.c: 587: if (START == 1) {
  2323  0539  0338               	decf	_START,w	;volatile
  2324  053A  1D03               	btfss	3,2
  2325  053B  2D5D               	goto	l2321
  2326                           
  2327                           ;main.c: 588: if (timer4 ==0) {
  2328  053C  0830               	movf	_timer4,w	;volatile
  2329  053D  0431               	iorwf	_timer4+1,w	;volatile
  2330  053E  1D03               	btfss	3,2
  2331  053F  2D5D               	goto	l2321
  2332                           
  2333                           ;main.c: 589: timer4 =ledBlink_time;
  2334  0540  0021               	movlb	1	; select bank1
  2335  0541  0823               	movf	(_ledBlink_time+1)^(0+128),w	;volatile
  2336  0542  0020               	movlb	0	; select bank0
  2337  0543  00B1               	movwf	_timer4+1	;volatile
  2338  0544  0021               	movlb	1	; select bank1
  2339  0545  0822               	movf	_ledBlink_time^(0+128),w	;volatile
  2340  0546  0020               	movlb	0	; select bank0
  2341  0547  00B0               	movwf	_timer4	;volatile
  2342                           
  2343                           ;main.c: 590: LATAbits.LATA3 ^= 1;
  2344  0548  0022               	movlb	2	; select bank2
  2345  0549  0C0C               	rrf	12,w	;volatile
  2346  054A  0021               	movlb	1	; select bank1
  2347  054B  00AC               	movwf	??_main^(0+128)
  2348  054C  0CAC               	rrf	??_main^(0+128),f
  2349  054D  0C2C               	rrf	??_main^(0+128),w
  2350  054E  3901               	andlw	1
  2351  054F  00AC               	movwf	??_main^(0+128)
  2352  0550  3001               	movlw	1
  2353  0551  06AC               	xorwf	??_main^(0+128),f
  2354  0552  0DAC               	rlf	??_main^(0+128),f
  2355  0553  0DAC               	rlf	??_main^(0+128),f
  2356  0554  0DAC               	rlf	??_main^(0+128),f
  2357  0555  0022               	movlb	2	; select bank2
  2358  0556  080C               	movf	12,w	;volatile
  2359  0557  0021               	movlb	1	; select bank1
  2360  0558  062C               	xorwf	??_main^(0+128),w
  2361  0559  39F7               	andlw	-9
  2362  055A  062C               	xorwf	??_main^(0+128),w
  2363  055B  0022               	movlb	2	; select bank2
  2364  055C  008C               	movwf	12	;volatile
  2365  055D                     l2321:	
  2366                           
  2367                           ;main.c: 591: }
  2368                           ;main.c: 592: }
  2369                           ;main.c: 595: if (START == 0) {
  2370  055D  0020               	movlb	0	; select bank0
  2371  055E  0838               	movf	_START,w	;volatile
  2372  055F  1D03               	btfss	3,2
  2373  0560  2D6F               	goto	l2327
  2374                           
  2375                           ;main.c: 596: LATAbits.LATA0 = 0;
  2376  0561  0022               	movlb	2	; select bank2
  2377  0562  100C               	bcf	12,0	;volatile
  2378                           
  2379                           ;main.c: 597: LATAbits.LATA1 = 0;
  2380  0563  108C               	bcf	12,1	;volatile
  2381                           
  2382                           ;main.c: 598: LATAbits.LATA2 = 0;
  2383  0564  110C               	bcf	12,2	;volatile
  2384                           
  2385                           ;main.c: 599: LATAbits.LATA3 = 0;
  2386  0565  118C               	bcf	12,3	;volatile
  2387                           
  2388                           ;main.c: 600: timer5 = 0;
  2389  0566  3000               	movlw	0
  2390  0567  0020               	movlb	0	; select bank0
  2391  0568  00E7               	movwf	_timer5+3	;volatile
  2392  0569  3000               	movlw	0
  2393  056A  00E6               	movwf	_timer5+2	;volatile
  2394  056B  3000               	movlw	0
  2395  056C  00E5               	movwf	_timer5+1	;volatile
  2396  056D  3000               	movlw	0
  2397  056E  00E4               	movwf	_timer5	;volatile
  2398  056F                     l2327:	
  2399                           
  2400                           ;main.c: 601: }
  2401                           ;main.c: 608: if (START ==1) {
  2402  056F  0338               	decf	_START,w	;volatile
  2403  0570  1D03               	btfss	3,2
  2404  0571  2DA1               	goto	l2335
  2405                           
  2406                           ;main.c: 609: volatile unsigned int liczba_tmp;
  2407                           ;main.c: 610: liczba_tmp = (timer5-1)/1000;
  2408  0572  3000               	movlw	0
  2409  0573  00CF               	movwf	___lldiv@divisor+3
  2410  0574  3000               	movlw	0
  2411  0575  00CE               	movwf	___lldiv@divisor+2
  2412  0576  3003               	movlw	3
  2413  0577  00CD               	movwf	___lldiv@divisor+1
  2414  0578  30E8               	movlw	232
  2415  0579  00CC               	movwf	___lldiv@divisor
  2416  057A  30FF               	movlw	255
  2417  057B  0764               	addwf	_timer5,w	;volatile
  2418  057C  00D0               	movwf	___lldiv@dividend
  2419  057D  30FF               	movlw	255
  2420  057E  3D65               	addwfc	_timer5+1,w	;volatile
  2421  057F  00D1               	movwf	___lldiv@dividend+1
  2422  0580  30FF               	movlw	255
  2423  0581  3D66               	addwfc	_timer5+2,w	;volatile
  2424  0582  00D2               	movwf	___lldiv@dividend+2
  2425  0583  30FF               	movlw	255
  2426  0584  3D67               	addwfc	_timer5+3,w	;volatile
  2427  0585  00D3               	movwf	___lldiv@dividend+3
  2428  0586  3186  2670  3181   	fcall	___lldiv
  2429  0589  0020               	movlb	0	; select bank0
  2430  058A  084D               	movf	?___lldiv+1,w
  2431  058B  00E3               	movwf	main@liczba_tmp+1	;volatile
  2432  058C  084C               	movf	?___lldiv,w
  2433  058D  00E2               	movwf	main@liczba_tmp	;volatile
  2434                           
  2435                           ;main.c: 611: if (timer5>500) {
  2436  058E  0867               	movf	_timer5+3,w	;volatile
  2437  058F  1D03               	btfss	3,2
  2438  0590  2D9A               	goto	l2333
  2439  0591  0866               	movf	_timer5+2,w	;volatile
  2440  0592  1D03               	btfss	3,2
  2441  0593  2D9A               	goto	l2333
  2442  0594  30F5               	movlw	245
  2443  0595  0264               	subwf	_timer5,w	;volatile
  2444  0596  3001               	movlw	1
  2445  0597  3B65               	subwfb	_timer5+1,w	;volatile
  2446  0598  1C03               	btfss	3,0
  2447  0599  2DA9               	goto	l2337
  2448  059A                     l2333:	
  2449                           
  2450                           ;main.c: 612: wyswietl( liczba_tmp +1 );
  2451  059A  0862               	movf	main@liczba_tmp,w	;volatile
  2452  059B  3E01               	addlw	1
  2453  059C  00DA               	movwf	wyswietl@liczba
  2454  059D  3000               	movlw	0
  2455  059E  3D63               	addwfc	main@liczba_tmp+1,w	;volatile
  2456  059F  00DB               	movwf	wyswietl@liczba+1
  2457  05A0  2DA6               	goto	L7
  2458  05A1                     l2335:	
  2459                           ;main.c: 613: }
  2460                           ;main.c: 616: }else{
  2461                           
  2462                           
  2463                           ;main.c: 617: wyswietl(czas_s);
  2464  05A1  0020               	movlb	0	; select bank0
  2465  05A2  082B               	movf	_czas_s+1,w	;volatile
  2466  05A3  00DB               	movwf	wyswietl@liczba+1
  2467  05A4  082A               	movf	_czas_s,w	;volatile
  2468  05A5  00DA               	movwf	wyswietl@liczba
  2469  05A6                     L7:	
  2470  05A6  3185  25BE  3181   	fcall	_wyswietl
  2471  05A9                     l2337:	
  2472                           
  2473                           ;main.c: 619: }
  2474                           ;main.c: 623: if (START == 0) {
  2475  05A9  0020               	movlb	0	; select bank0
  2476  05AA  0838               	movf	_START,w	;volatile
  2477  05AB  1D03               	btfss	3,2
  2478  05AC  2DB6               	goto	l2341
  2479                           
  2480                           ;main.c: 624: timer2 = 1800000;
  2481  05AD  3000               	movlw	0
  2482  05AE  00A7               	movwf	_timer2+3	;volatile
  2483  05AF  301B               	movlw	27
  2484  05B0  00A6               	movwf	_timer2+2	;volatile
  2485  05B1  3077               	movlw	119
  2486  05B2  00A5               	movwf	_timer2+1	;volatile
  2487  05B3  3040               	movlw	64
  2488  05B4  00A4               	movwf	_timer2	;volatile
  2489                           
  2490                           ;main.c: 625: }else{
  2491  05B5  2DBC               	goto	l238
  2492  05B6                     l2341:	
  2493                           
  2494                           ;main.c: 626: if (timer2 == 0) {
  2495  05B6  0827               	movf	_timer2+3,w	;volatile
  2496  05B7  0426               	iorwf	_timer2+2,w	;volatile
  2497  05B8  0425               	iorwf	_timer2+1,w	;volatile
  2498  05B9  0424               	iorwf	_timer2,w	;volatile
  2499  05BA  1903               	btfsc	3,2
  2500                           
  2501                           ;main.c: 627: START =0;
  2502  05BB  01B8               	clrf	_START	;volatile
  2503  05BC                     l238:	
  2504  05BC  0064               	clrwdt	;# 
  2505  05BD  2A30               	goto	l178
  2506  05BE                     __end_of_main:	
  2507                           ;main.c: 632: }
  2508                           ;main.c: 634: return (0);
  2509                           ;	Return value of _main is never used
  2510                           
  2511                           
  2512                           	psect	text1
  2513  05BE                     __ptext1:	
  2514 ;; *************** function _wyswietl *****************
  2515 ;; Defined at:
  2516 ;;		line 639 in file "main.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  liczba          2   14[BANK0 ] unsigned int 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;		None               void
  2523 ;; Registers used:
  2524 ;;		wreg, status,2, status,0, pclath, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2530 ;;      Params:         0       2       0       0       0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0
  2532 ;;      Temps:          0       1       0       0       0       0       0       0
  2533 ;;      Totals:         0       3       0       0       0       0       0       0
  2534 ;;Total ram usage:        3 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:    2
  2537 ;; This function calls:
  2538 ;;		___lwdiv
  2539 ;;		___lwmod
  2540 ;; This function is called by:
  2541 ;;		_main
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           
  2546                           ;psect for function _wyswietl
  2547  05BE                     _wyswietl:	
  2548                           
  2549                           ;main.c: 643: if ( liczba > 599 ) {
  2550                           
  2551                           ;incstack = 0
  2552                           ; Regs used in _wyswietl: [wreg+status,2+status,0+pclath+cstack]
  2553  05BE  3002               	movlw	2
  2554  05BF  0020               	movlb	0	; select bank0
  2555  05C0  025B               	subwf	wyswietl@liczba+1,w
  2556  05C1  3058               	movlw	88
  2557  05C2  1903               	skipnz
  2558  05C3  025A               	subwf	wyswietl@liczba,w
  2559  05C4  1C03               	skipc
  2560  05C5  2DFE               	goto	l1937
  2561                           
  2562                           ;main.c: 644: liczba = liczba/60;
  2563  05C6  303C               	movlw	60
  2564  05C7  00D2               	movwf	___lwdiv@divisor
  2565  05C8  3000               	movlw	0
  2566  05C9  00D3               	movwf	___lwdiv@divisor+1
  2567  05CA  085B               	movf	wyswietl@liczba+1,w
  2568  05CB  00D5               	movwf	___lwdiv@dividend+1
  2569  05CC  085A               	movf	wyswietl@liczba,w
  2570  05CD  00D4               	movwf	___lwdiv@dividend
  2571  05CE  3186  26C3  3185   	fcall	___lwdiv
  2572  05D1  0020               	movlb	0	; select bank0
  2573  05D2  0853               	movf	?___lwdiv+1,w
  2574  05D3  00DB               	movwf	wyswietl@liczba+1
  2575  05D4  0852               	movf	?___lwdiv,w
  2576  05D5  00DA               	movwf	wyswietl@liczba
  2577                           
  2578                           ;main.c: 645: cyf_1 = liczba/10;
  2579  05D6  300A               	movlw	10
  2580  05D7  00D2               	movwf	___lwdiv@divisor
  2581  05D8  3000               	movlw	0
  2582  05D9  00D3               	movwf	___lwdiv@divisor+1
  2583  05DA  085B               	movf	wyswietl@liczba+1,w
  2584  05DB  00D5               	movwf	___lwdiv@dividend+1
  2585  05DC  085A               	movf	wyswietl@liczba,w
  2586  05DD  00D4               	movwf	___lwdiv@dividend
  2587  05DE  3186  26C3  3185   	fcall	___lwdiv
  2588  05E1  0020               	movlb	0	; select bank0
  2589  05E2  0852               	movf	?___lwdiv,w
  2590  05E3  00DC               	movwf	??_wyswietl
  2591  05E4  085C               	movf	??_wyswietl,w
  2592  05E5  00E8               	movwf	_cyf_1	;volatile
  2593                           
  2594                           ;main.c: 646: cyf_2 = liczba%10;
  2595  05E6  300A               	movlw	10
  2596  05E7  00CC               	movwf	___lwmod@divisor
  2597  05E8  3000               	movlw	0
  2598  05E9  00CD               	movwf	___lwmod@divisor+1
  2599  05EA  085B               	movf	wyswietl@liczba+1,w
  2600  05EB  00CF               	movwf	___lwmod@dividend+1
  2601  05EC  085A               	movf	wyswietl@liczba,w
  2602  05ED  00CE               	movwf	___lwmod@dividend
  2603  05EE  3187  2728         	fcall	___lwmod
  2604  05F0  0020               	movlb	0	; select bank0
  2605  05F1  084C               	movf	?___lwmod,w
  2606  05F2  00DC               	movwf	??_wyswietl
  2607  05F3  085C               	movf	??_wyswietl,w
  2608  05F4  00E9               	movwf	_cyf_2	;volatile
  2609                           
  2610                           ;main.c: 647: kro_1 = 0;
  2611  05F5  0021               	movlb	1	; select bank1
  2612  05F6  01AA               	clrf	_kro_1^(0+128)	;volatile
  2613                           
  2614                           ;main.c: 648: kro_2 = 1;
  2615  05F7  3001               	movlw	1
  2616  05F8  0020               	movlb	0	; select bank0
  2617  05F9  00DC               	movwf	??_wyswietl
  2618  05FA  085C               	movf	??_wyswietl,w
  2619  05FB  0021               	movlb	1	; select bank1
  2620  05FC  00AB               	movwf	_kro_2^(0+128)	;volatile
  2621                           
  2622                           ;main.c: 649: }else if( liczba > 99 ){
  2623  05FD  0008               	return
  2624  05FE                     l1937:	
  2625  05FE  3000               	movlw	0
  2626  05FF  0020               	movlb	0	; select bank0
  2627  0600  025B               	subwf	wyswietl@liczba+1,w
  2628  0601  3064               	movlw	100
  2629  0602  1903               	skipnz
  2630  0603  025A               	subwf	wyswietl@liczba,w
  2631  0604  1C03               	skipc
  2632  0605  2E39               	goto	l1947
  2633                           
  2634                           ;main.c: 650: cyf_1 = liczba/60;
  2635  0606  303C               	movlw	60
  2636  0607  00D2               	movwf	___lwdiv@divisor
  2637  0608  3000               	movlw	0
  2638  0609  00D3               	movwf	___lwdiv@divisor+1
  2639  060A  085B               	movf	wyswietl@liczba+1,w
  2640  060B  00D5               	movwf	___lwdiv@dividend+1
  2641  060C  085A               	movf	wyswietl@liczba,w
  2642  060D  00D4               	movwf	___lwdiv@dividend
  2643  060E  3186  26C3  3185   	fcall	___lwdiv
  2644  0611  0020               	movlb	0	; select bank0
  2645  0612  0852               	movf	?___lwdiv,w
  2646  0613  00DC               	movwf	??_wyswietl
  2647  0614  085C               	movf	??_wyswietl,w
  2648  0615  00E8               	movwf	_cyf_1	;volatile
  2649                           
  2650                           ;main.c: 651: kro_1 = 1;
  2651  0616  3001               	movlw	1
  2652  0617  00DC               	movwf	??_wyswietl
  2653  0618  085C               	movf	??_wyswietl,w
  2654  0619  0021               	movlb	1	; select bank1
  2655  061A  00AA               	movwf	_kro_1^(0+128)	;volatile
  2656                           
  2657                           ;main.c: 652: kro_2 = 0;
  2658  061B  01AB               	clrf	_kro_2^(0+128)	;volatile
  2659                           
  2660                           ;main.c: 653: cyf_2 = (liczba%60)/10;
  2661  061C  300A               	movlw	10
  2662  061D  0020               	movlb	0	; select bank0
  2663  061E  00D2               	movwf	___lwdiv@divisor
  2664  061F  3000               	movlw	0
  2665  0620  00D3               	movwf	___lwdiv@divisor+1
  2666  0621  085B               	movf	wyswietl@liczba+1,w
  2667  0622  00CF               	movwf	___lwmod@dividend+1
  2668  0623  085A               	movf	wyswietl@liczba,w
  2669  0624  00CE               	movwf	___lwmod@dividend
  2670  0625  303C               	movlw	60
  2671  0626  00CC               	movwf	___lwmod@divisor
  2672  0627  3000               	movlw	0
  2673  0628  00CD               	movwf	___lwmod@divisor+1
  2674  0629  3187  2728  3185   	fcall	___lwmod
  2675  062C  0020               	movlb	0	; select bank0
  2676  062D  084D               	movf	?___lwmod+1,w
  2677  062E  00D5               	movwf	___lwdiv@dividend+1
  2678  062F  084C               	movf	?___lwmod,w
  2679  0630  00D4               	movwf	___lwdiv@dividend
  2680  0631  3186  26C3         	fcall	___lwdiv
  2681  0633  0020               	movlb	0	; select bank0
  2682  0634  0852               	movf	?___lwdiv,w
  2683  0635  00DC               	movwf	??_wyswietl
  2684  0636  085C               	movf	??_wyswietl,w
  2685  0637  00E9               	movwf	_cyf_2	;volatile
  2686                           
  2687                           ;main.c: 654: }else if (liczba > 9) {
  2688  0638  0008               	return
  2689  0639                     l1947:	
  2690  0639  3000               	movlw	0
  2691  063A  025B               	subwf	wyswietl@liczba+1,w
  2692  063B  300A               	movlw	10
  2693  063C  1903               	skipnz
  2694  063D  025A               	subwf	wyswietl@liczba,w
  2695  063E  1C03               	skipc
  2696  063F  2E63               	goto	l1955
  2697                           
  2698                           ;main.c: 655: cyf_1 = liczba/10;
  2699  0640  300A               	movlw	10
  2700  0641  00D2               	movwf	___lwdiv@divisor
  2701  0642  3000               	movlw	0
  2702  0643  00D3               	movwf	___lwdiv@divisor+1
  2703  0644  085B               	movf	wyswietl@liczba+1,w
  2704  0645  00D5               	movwf	___lwdiv@dividend+1
  2705  0646  085A               	movf	wyswietl@liczba,w
  2706  0647  00D4               	movwf	___lwdiv@dividend
  2707  0648  3186  26C3  3185   	fcall	___lwdiv
  2708  064B  0020               	movlb	0	; select bank0
  2709  064C  0852               	movf	?___lwdiv,w
  2710  064D  00DC               	movwf	??_wyswietl
  2711  064E  085C               	movf	??_wyswietl,w
  2712  064F  00E8               	movwf	_cyf_1	;volatile
  2713                           
  2714                           ;main.c: 656: cyf_2 = liczba%10;
  2715  0650  300A               	movlw	10
  2716  0651  00CC               	movwf	___lwmod@divisor
  2717  0652  3000               	movlw	0
  2718  0653  00CD               	movwf	___lwmod@divisor+1
  2719  0654  085B               	movf	wyswietl@liczba+1,w
  2720  0655  00CF               	movwf	___lwmod@dividend+1
  2721  0656  085A               	movf	wyswietl@liczba,w
  2722  0657  00CE               	movwf	___lwmod@dividend
  2723  0658  3187  2728         	fcall	___lwmod
  2724  065A  0020               	movlb	0	; select bank0
  2725  065B  084C               	movf	?___lwmod,w
  2726  065C  00DC               	movwf	??_wyswietl
  2727  065D  085C               	movf	??_wyswietl,w
  2728  065E  00E9               	movwf	_cyf_2	;volatile
  2729                           
  2730                           ;main.c: 657: kro_1 = 0;
  2731  065F  0021               	movlb	1	; select bank1
  2732  0660  01AA               	clrf	_kro_1^(0+128)	;volatile
  2733                           
  2734                           ;main.c: 658: kro_2 = 0;
  2735  0661  01AB               	clrf	_kro_2^(0+128)	;volatile
  2736                           
  2737                           ;main.c: 659: }else{
  2738  0662  0008               	return
  2739  0663                     l1955:	
  2740                           
  2741                           ;main.c: 660: cyf_1 = 10;
  2742  0663  300A               	movlw	10
  2743  0664  0020               	movlb	0	; select bank0
  2744  0665  00DC               	movwf	??_wyswietl
  2745  0666  085C               	movf	??_wyswietl,w
  2746  0667  00E8               	movwf	_cyf_1	;volatile
  2747                           
  2748                           ;main.c: 661: cyf_2 = liczba;
  2749  0668  085A               	movf	wyswietl@liczba,w
  2750  0669  00DC               	movwf	??_wyswietl
  2751  066A  085C               	movf	??_wyswietl,w
  2752  066B  00E9               	movwf	_cyf_2	;volatile
  2753                           
  2754                           ;main.c: 662: kro_1 = 0;
  2755  066C  0021               	movlb	1	; select bank1
  2756  066D  01AA               	clrf	_kro_1^(0+128)	;volatile
  2757                           
  2758                           ;main.c: 663: kro_2 = 0;
  2759  066E  01AB               	clrf	_kro_2^(0+128)	;volatile
  2760  066F  0008               	return
  2761  0670                     __end_of_wyswietl:	
  2762                           
  2763                           	psect	text2
  2764  0728                     __ptext2:	
  2765 ;; *************** function ___lwmod *****************
  2766 ;; Defined at:
  2767 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  divisor         2    0[BANK0 ] unsigned int 
  2770 ;;  dividend        2    2[BANK0 ] unsigned int 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  counter         1    5[BANK0 ] unsigned char 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  2    0[BANK0 ] unsigned int 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2782 ;;      Params:         0       4       0       0       0       0       0       0
  2783 ;;      Locals:         0       1       0       0       0       0       0       0
  2784 ;;      Temps:          0       1       0       0       0       0       0       0
  2785 ;;      Totals:         0       6       0       0       0       0       0       0
  2786 ;;Total ram usage:        6 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    1
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_wyswietl
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           
  2797                           ;psect for function ___lwmod
  2798  0728                     ___lwmod:	
  2799                           
  2800                           ;incstack = 0
  2801                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2802  0728  0020               	movlb	0	; select bank0
  2803  0729  084C               	movf	___lwmod@divisor,w
  2804  072A  044D               	iorwf	___lwmod@divisor+1,w
  2805  072B  1903               	btfsc	3,2
  2806  072C  2F50               	goto	l1875
  2807  072D  01D1               	clrf	___lwmod@counter
  2808  072E  0AD1               	incf	___lwmod@counter,f
  2809  072F                     l1865:	
  2810  072F  1BCD               	btfsc	___lwmod@divisor+1,7
  2811  0730  2F3B               	goto	l1867
  2812  0731  3001               	movlw	1
  2813  0732                     u2025:	
  2814  0732  35CC               	lslf	___lwmod@divisor,f
  2815  0733  0DCD               	rlf	___lwmod@divisor+1,f
  2816  0734  0B89               	decfsz	9,f
  2817  0735  2F32               	goto	u2025
  2818  0736  3001               	movlw	1
  2819  0737  00D0               	movwf	??___lwmod
  2820  0738  0850               	movf	??___lwmod,w
  2821  0739  07D1               	addwf	___lwmod@counter,f
  2822  073A  2F2F               	goto	l1865
  2823  073B                     l1867:	
  2824  073B  084D               	movf	___lwmod@divisor+1,w
  2825  073C  024F               	subwf	___lwmod@dividend+1,w
  2826  073D  1D03               	skipz
  2827  073E  2F41               	goto	u2045
  2828  073F  084C               	movf	___lwmod@divisor,w
  2829  0740  024E               	subwf	___lwmod@dividend,w
  2830  0741                     u2045:	
  2831  0741  1C03               	skipc
  2832  0742  2F47               	goto	l1871
  2833  0743  084C               	movf	___lwmod@divisor,w
  2834  0744  02CE               	subwf	___lwmod@dividend,f
  2835  0745  084D               	movf	___lwmod@divisor+1,w
  2836  0746  3BCF               	subwfb	___lwmod@dividend+1,f
  2837  0747                     l1871:	
  2838  0747  3001               	movlw	1
  2839  0748                     u2055:	
  2840  0748  36CD               	lsrf	___lwmod@divisor+1,f
  2841  0749  0CCC               	rrf	___lwmod@divisor,f
  2842  074A  0B89               	decfsz	9,f
  2843  074B  2F48               	goto	u2055
  2844  074C  3001               	movlw	1
  2845  074D  02D1               	subwf	___lwmod@counter,f
  2846  074E  1D03               	btfss	3,2
  2847  074F  2F3B               	goto	l1867
  2848  0750                     l1875:	
  2849  0750  084F               	movf	___lwmod@dividend+1,w
  2850  0751  00CD               	movwf	?___lwmod+1
  2851  0752  084E               	movf	___lwmod@dividend,w
  2852  0753  00CC               	movwf	?___lwmod
  2853  0754  0008               	return
  2854  0755                     __end_of___lwmod:	
  2855                           
  2856                           	psect	text3
  2857  06C3                     __ptext3:	
  2858 ;; *************** function ___lwdiv *****************
  2859 ;; Defined at:
  2860 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  divisor         2    6[BANK0 ] unsigned int 
  2863 ;;  dividend        2    8[BANK0 ] unsigned int 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  quotient        2   11[BANK0 ] unsigned int 
  2866 ;;  counter         1   13[BANK0 ] unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  2    6[BANK0 ] unsigned int 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2876 ;;      Params:         0       4       0       0       0       0       0       0
  2877 ;;      Locals:         0       3       0       0       0       0       0       0
  2878 ;;      Temps:          0       1       0       0       0       0       0       0
  2879 ;;      Totals:         0       8       0       0       0       0       0       0
  2880 ;;Total ram usage:        8 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    1
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_wyswietl
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           
  2891                           ;psect for function ___lwdiv
  2892  06C3                     ___lwdiv:	
  2893                           
  2894                           ;incstack = 0
  2895                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2896  06C3  0020               	movlb	0	; select bank0
  2897  06C4  01D7               	clrf	___lwdiv@quotient
  2898  06C5  01D8               	clrf	___lwdiv@quotient+1
  2899  06C6  0852               	movf	___lwdiv@divisor,w
  2900  06C7  0453               	iorwf	___lwdiv@divisor+1,w
  2901  06C8  1903               	btfsc	3,2
  2902  06C9  2EF3               	goto	l1285
  2903  06CA  01D9               	clrf	___lwdiv@counter
  2904  06CB  0AD9               	incf	___lwdiv@counter,f
  2905  06CC                     l1273:	
  2906  06CC  1BD3               	btfsc	___lwdiv@divisor+1,7
  2907  06CD  2ED8               	goto	l1275
  2908  06CE  3001               	movlw	1
  2909  06CF                     u1025:	
  2910  06CF  35D2               	lslf	___lwdiv@divisor,f
  2911  06D0  0DD3               	rlf	___lwdiv@divisor+1,f
  2912  06D1  0B89               	decfsz	9,f
  2913  06D2  2ECF               	goto	u1025
  2914  06D3  3001               	movlw	1
  2915  06D4  00D6               	movwf	??___lwdiv
  2916  06D5  0856               	movf	??___lwdiv,w
  2917  06D6  07D9               	addwf	___lwdiv@counter,f
  2918  06D7  2ECC               	goto	l1273
  2919  06D8                     l1275:	
  2920  06D8  3001               	movlw	1
  2921  06D9                     u1045:	
  2922  06D9  35D7               	lslf	___lwdiv@quotient,f
  2923  06DA  0DD8               	rlf	___lwdiv@quotient+1,f
  2924  06DB  0B89               	decfsz	9,f
  2925  06DC  2ED9               	goto	u1045
  2926  06DD  0853               	movf	___lwdiv@divisor+1,w
  2927  06DE  0255               	subwf	___lwdiv@dividend+1,w
  2928  06DF  1D03               	skipz
  2929  06E0  2EE3               	goto	u1055
  2930  06E1  0852               	movf	___lwdiv@divisor,w
  2931  06E2  0254               	subwf	___lwdiv@dividend,w
  2932  06E3                     u1055:	
  2933  06E3  1C03               	skipc
  2934  06E4  2EEA               	goto	l1281
  2935  06E5  0852               	movf	___lwdiv@divisor,w
  2936  06E6  02D4               	subwf	___lwdiv@dividend,f
  2937  06E7  0853               	movf	___lwdiv@divisor+1,w
  2938  06E8  3BD5               	subwfb	___lwdiv@dividend+1,f
  2939  06E9  1457               	bsf	___lwdiv@quotient,0
  2940  06EA                     l1281:	
  2941  06EA  3001               	movlw	1
  2942  06EB                     u1065:	
  2943  06EB  36D3               	lsrf	___lwdiv@divisor+1,f
  2944  06EC  0CD2               	rrf	___lwdiv@divisor,f
  2945  06ED  0B89               	decfsz	9,f
  2946  06EE  2EEB               	goto	u1065
  2947  06EF  3001               	movlw	1
  2948  06F0  02D9               	subwf	___lwdiv@counter,f
  2949  06F1  1D03               	btfss	3,2
  2950  06F2  2ED8               	goto	l1275
  2951  06F3                     l1285:	
  2952  06F3  0858               	movf	___lwdiv@quotient+1,w
  2953  06F4  00D3               	movwf	?___lwdiv+1
  2954  06F5  0857               	movf	___lwdiv@quotient,w
  2955  06F6  00D2               	movwf	?___lwdiv
  2956  06F7  0008               	return
  2957  06F8                     __end_of___lwdiv:	
  2958                           
  2959                           	psect	text4
  2960  0755                     __ptext4:	
  2961 ;; *************** function _write_flash *****************
  2962 ;; Defined at:
  2963 ;;		line 702 in file "main.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  adr_hi          1    wreg     unsigned char 
  2966 ;;  adr_lo          1    0[BANK0 ] unsigned char 
  2967 ;;  data_lo         1    1[BANK0 ] unsigned char 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  adr_hi          1    4[BANK0 ] unsigned char 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;		None               void
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0, pclath, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2979 ;;      Params:         0       2       0       0       0       0       0       0
  2980 ;;      Locals:         0       1       0       0       0       0       0       0
  2981 ;;      Temps:          0       2       0       0       0       0       0       0
  2982 ;;      Totals:         0       5       0       0       0       0       0       0
  2983 ;;Total ram usage:        5 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    2
  2986 ;; This function calls:
  2987 ;;		_unlock_flash
  2988 ;; This function is called by:
  2989 ;;		_main
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           
  2994                           ;psect for function _write_flash
  2995  0755                     _write_flash:	
  2996                           
  2997                           ;incstack = 0
  2998                           ; Regs used in _write_flash: [wreg+status,2+status,0+pclath+cstack]
  2999                           ;write_flash@adr_hi stored from wreg
  3000  0755  0020               	movlb	0	; select bank0
  3001  0756  00D0               	movwf	write_flash@adr_hi
  3002                           
  3003                           ;main.c: 704: INTCONbits.GIE = 0;
  3004  0757  138B               	bcf	11,7	;volatile
  3005                           
  3006                           ;main.c: 705: PMCON1bits.CFGS=0;
  3007  0758  0023               	movlb	3	; select bank3
  3008  0759  1315               	bcf	21,6	;volatile
  3009                           
  3010                           ;main.c: 707: PMADRH=adr_hi;
  3011  075A  0020               	movlb	0	; select bank0
  3012  075B  0850               	movf	write_flash@adr_hi,w
  3013  075C  0023               	movlb	3	; select bank3
  3014  075D  0092               	movwf	18	;volatile
  3015                           
  3016                           ;main.c: 708: PMADRL=adr_lo;
  3017  075E  0020               	movlb	0	; select bank0
  3018  075F  084C               	movf	write_flash@adr_lo,w
  3019  0760  0023               	movlb	3	; select bank3
  3020  0761  0091               	movwf	17	;volatile
  3021                           
  3022                           ;main.c: 710: PMCON1bits.FREE = 0;
  3023  0762  1215               	bcf	21,4	;volatile
  3024                           
  3025                           ;main.c: 711: PMCON1bits.LWLO=1;
  3026  0763  1695               	bsf	21,5	;volatile
  3027                           
  3028                           ;main.c: 712: PMCON1bits.WREN=1;
  3029  0764  1515               	bsf	21,2	;volatile
  3030                           
  3031                           ;main.c: 714: PMDATL=data_lo;
  3032  0765  0020               	movlb	0	; select bank0
  3033  0766  084D               	movf	write_flash@data_lo,w
  3034  0767  0023               	movlb	3	; select bank3
  3035  0768  0093               	movwf	19	;volatile
  3036                           
  3037                           ;main.c: 715: PMDATH = 0;
  3038  0769  0194               	clrf	20	;volatile
  3039                           
  3040                           ;main.c: 718: PMCON1bits.LWLO = 0;
  3041  076A  1295               	bcf	21,5	;volatile
  3042                           
  3043                           ;main.c: 719: unlock_flash();
  3044  076B  3187  27BA  3187   	fcall	_unlock_flash
  3045                           
  3046                           ;main.c: 720: _delay((unsigned long)((3)*(8000000/4000.0)));
  3047  076E  3008               	movlw	8
  3048  076F  0020               	movlb	0	; select bank0
  3049  0770  00CF               	movwf	??_write_flash+1
  3050  0771  30C9               	movlw	201
  3051  0772  00CE               	movwf	??_write_flash
  3052  0773                     u2887:	
  3053  0773  0BCE               	decfsz	??_write_flash,f
  3054  0774  2F73               	goto	u2887
  3055  0775  0BCF               	decfsz	??_write_flash+1,f
  3056  0776  2F73               	goto	u2887
  3057  0777  3200               	nop2
  3058                           
  3059                           ;main.c: 721: PMCON1bits.WREN = 0;
  3060  0778  0023               	movlb	3	; select bank3
  3061  0779  1115               	bcf	21,2	;volatile
  3062                           
  3063                           ;main.c: 723: INTCONbits.GIE = 1;
  3064  077A  178B               	bsf	11,7	;volatile
  3065  077B  0008               	return
  3066  077C                     __end_of_write_flash:	
  3067                           
  3068                           	psect	text5
  3069  079C                     __ptext5:	
  3070 ;; *************** function _read_flash *****************
  3071 ;; Defined at:
  3072 ;;		line 670 in file "main.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  adrs_hi         1    wreg     unsigned char 
  3075 ;;  adrs_lo         1    0[BANK0 ] unsigned char 
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  adrs_hi         1    1[BANK0 ] unsigned char 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      unsigned char 
  3080 ;; Registers used:
  3081 ;;		wreg
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3087 ;;      Params:         0       1       0       0       0       0       0       0
  3088 ;;      Locals:         0       1       0       0       0       0       0       0
  3089 ;;      Temps:          0       0       0       0       0       0       0       0
  3090 ;;      Totals:         0       2       0       0       0       0       0       0
  3091 ;;Total ram usage:        2 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; Hardware stack levels required when called:    1
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_main
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           
  3102                           ;psect for function _read_flash
  3103  079C                     _read_flash:	
  3104                           
  3105                           ;incstack = 0
  3106                           ; Regs used in _read_flash: [wreg]
  3107                           ;read_flash@adrs_hi stored from wreg
  3108  079C  0020               	movlb	0	; select bank0
  3109  079D  00CD               	movwf	read_flash@adrs_hi
  3110                           
  3111                           ;main.c: 674: PMCON1bits.CFGS=0;
  3112  079E  0023               	movlb	3	; select bank3
  3113  079F  1315               	bcf	21,6	;volatile
  3114                           
  3115                           ;main.c: 675: PMADRL=adrs_lo ;
  3116  07A0  0020               	movlb	0	; select bank0
  3117  07A1  084C               	movf	read_flash@adrs_lo,w
  3118  07A2  0023               	movlb	3	; select bank3
  3119  07A3  0091               	movwf	17	;volatile
  3120                           
  3121                           ;main.c: 676: PMADRH=adrs_hi;
  3122  07A4  0020               	movlb	0	; select bank0
  3123  07A5  084D               	movf	read_flash@adrs_hi,w
  3124  07A6  0023               	movlb	3	; select bank3
  3125  07A7  0092               	movwf	18	;volatile
  3126                           
  3127                           ;main.c: 678: PMCON1bits.RD = 1;
  3128  07A8  1415               	bsf	21,0	;volatile
  3129                           
  3130                           ;main.c: 679: __nop();
  3131  07A9  0000               	nop
  3132                           
  3133                           ;main.c: 680: __nop();
  3134  07AA  0000               	nop
  3135                           
  3136                           ;main.c: 682: return PMDATL;
  3137  07AB  0023               	movlb	3	; select bank3
  3138  07AC  0813               	movf	19,w	;volatile
  3139  07AD  0008               	return
  3140  07AE                     __end_of_read_flash:	
  3141                           
  3142                           	psect	text6
  3143  077C                     __ptext6:	
  3144 ;; *************** function _erase_flash *****************
  3145 ;; Defined at:
  3146 ;;		line 727 in file "main.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  adr_hi          1    wreg     unsigned char 
  3149 ;;  adr_lo          1    0[BANK0 ] unsigned char 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  adr_hi          1    3[BANK0 ] unsigned char 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;		None               void
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0, pclath, cstack
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3161 ;;      Params:         0       1       0       0       0       0       0       0
  3162 ;;      Locals:         0       1       0       0       0       0       0       0
  3163 ;;      Temps:          0       2       0       0       0       0       0       0
  3164 ;;      Totals:         0       4       0       0       0       0       0       0
  3165 ;;Total ram usage:        4 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    2
  3168 ;; This function calls:
  3169 ;;		_unlock_flash
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           
  3176                           ;psect for function _erase_flash
  3177  077C                     _erase_flash:	
  3178                           
  3179                           ;incstack = 0
  3180                           ; Regs used in _erase_flash: [wreg+status,2+status,0+pclath+cstack]
  3181                           ;erase_flash@adr_hi stored from wreg
  3182  077C  0020               	movlb	0	; select bank0
  3183  077D  00CF               	movwf	erase_flash@adr_hi
  3184                           
  3185                           ;main.c: 729: INTCONbits.GIE = 0;
  3186  077E  138B               	bcf	11,7	;volatile
  3187                           
  3188                           ;main.c: 730: PMCON1bits.CFGS=0;
  3189  077F  0023               	movlb	3	; select bank3
  3190  0780  1315               	bcf	21,6	;volatile
  3191                           
  3192                           ;main.c: 732: PMADRH=adr_hi;
  3193  0781  0020               	movlb	0	; select bank0
  3194  0782  084F               	movf	erase_flash@adr_hi,w
  3195  0783  0023               	movlb	3	; select bank3
  3196  0784  0092               	movwf	18	;volatile
  3197                           
  3198                           ;main.c: 733: PMADRL=adr_lo;
  3199  0785  0020               	movlb	0	; select bank0
  3200  0786  084C               	movf	erase_flash@adr_lo,w
  3201  0787  0023               	movlb	3	; select bank3
  3202  0788  0091               	movwf	17	;volatile
  3203                           
  3204                           ;main.c: 735: PMCON1bits.FREE = 1;
  3205  0789  1615               	bsf	21,4	;volatile
  3206                           
  3207                           ;main.c: 736: PMCON1bits.WREN=1;
  3208  078A  1515               	bsf	21,2	;volatile
  3209                           
  3210                           ;main.c: 737: unlock_flash();
  3211  078B  3187  27BA  3187   	fcall	_unlock_flash
  3212                           
  3213                           ;main.c: 738: _delay((unsigned long)((3)*(8000000/4000.0)));
  3214  078E  3008               	movlw	8
  3215  078F  0020               	movlb	0	; select bank0
  3216  0790  00CE               	movwf	??_erase_flash+1
  3217  0791  30C9               	movlw	201
  3218  0792  00CD               	movwf	??_erase_flash
  3219  0793                     u2897:	
  3220  0793  0BCD               	decfsz	??_erase_flash,f
  3221  0794  2F93               	goto	u2897
  3222  0795  0BCE               	decfsz	??_erase_flash+1,f
  3223  0796  2F93               	goto	u2897
  3224  0797  3200               	nop2
  3225                           
  3226                           ;main.c: 739: PMCON1bits.WREN = 0;
  3227  0798  0023               	movlb	3	; select bank3
  3228  0799  1115               	bcf	21,2	;volatile
  3229                           
  3230                           ;main.c: 741: INTCONbits.GIE = 1;
  3231  079A  178B               	bsf	11,7	;volatile
  3232  079B  0008               	return
  3233  079C                     __end_of_erase_flash:	
  3234                           
  3235                           	psect	text7
  3236  07BA                     __ptext7:	
  3237 ;; *************** function _unlock_flash *****************
  3238 ;; Defined at:
  3239 ;;		line 689 in file "main.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;		None
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;		None
  3244 ;; Return value:  Size  Location     Type
  3245 ;;		None               void
  3246 ;; Registers used:
  3247 ;;		wreg
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3253 ;;      Params:         0       0       0       0       0       0       0       0
  3254 ;;      Locals:         0       0       0       0       0       0       0       0
  3255 ;;      Temps:          0       0       0       0       0       0       0       0
  3256 ;;      Totals:         0       0       0       0       0       0       0       0
  3257 ;;Total ram usage:        0 bytes
  3258 ;; Hardware stack levels used:    1
  3259 ;; Hardware stack levels required when called:    1
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_write_flash
  3264 ;;		_erase_flash
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           
  3269                           ;psect for function _unlock_flash
  3270  07BA                     _unlock_flash:	
  3271                           
  3272                           ;main.c: 691: PMCON2=0x55;
  3273                           
  3274                           ;incstack = 0
  3275                           ; Regs used in _unlock_flash: [wreg]
  3276  07BA  3055               	movlw	85
  3277  07BB  0023               	movlb	3	; select bank3
  3278  07BC  0096               	movwf	22	;volsfr
  3279                           
  3280                           ;main.c: 692: PMCON2=0xAA;
  3281  07BD  30AA               	movlw	170
  3282  07BE  0096               	movwf	22	;volsfr
  3283                           
  3284                           ;main.c: 693: PMCON1bits.WR=1;
  3285  07BF  1495               	bsf	21,1	;volatile
  3286                           
  3287                           ;main.c: 694: __nop();
  3288  07C0  0000               	nop
  3289                           
  3290                           ;main.c: 695: __nop();
  3291  07C1  0000               	nop
  3292  07C2  0008               	return
  3293  07C3                     __end_of_unlock_flash:	
  3294                           
  3295                           	psect	text8
  3296  06F8                     __ptext8:	
  3297 ;; *************** function ___lmul *****************
  3298 ;; Defined at:
  3299 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3302 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  product         4    8[BANK0 ] unsigned long 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  4    0[BANK0 ] unsigned long 
  3307 ;; Registers used:
  3308 ;;		wreg, status,2, status,0
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3314 ;;      Params:         0       8       0       0       0       0       0       0
  3315 ;;      Locals:         0       4       0       0       0       0       0       0
  3316 ;;      Temps:          0       0       0       0       0       0       0       0
  3317 ;;      Totals:         0      12       0       0       0       0       0       0
  3318 ;;Total ram usage:       12 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    1
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		_main
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           
  3329                           ;psect for function ___lmul
  3330  06F8                     ___lmul:	
  3331                           
  3332                           ;incstack = 0
  3333                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3334  06F8  3000               	movlw	0
  3335  06F9  0020               	movlb	0	; select bank0
  3336  06FA  00D7               	movwf	___lmul@product+3
  3337  06FB  3000               	movlw	0
  3338  06FC  00D6               	movwf	___lmul@product+2
  3339  06FD  3000               	movlw	0
  3340  06FE  00D5               	movwf	___lmul@product+1
  3341  06FF  3000               	movlw	0
  3342  0700  00D4               	movwf	___lmul@product
  3343  0701                     l1963:	
  3344  0701  1C4C               	btfss	___lmul@multiplier,0
  3345  0702  2F0B               	goto	l1967
  3346  0703  0850               	movf	___lmul@multiplicand,w
  3347  0704  07D4               	addwf	___lmul@product,f
  3348  0705  0851               	movf	___lmul@multiplicand+1,w
  3349  0706  3DD5               	addwfc	___lmul@product+1,f
  3350  0707  0852               	movf	___lmul@multiplicand+2,w
  3351  0708  3DD6               	addwfc	___lmul@product+2,f
  3352  0709  0853               	movf	___lmul@multiplicand+3,w
  3353  070A  3DD7               	addwfc	___lmul@product+3,f
  3354  070B                     l1967:	
  3355  070B  3001               	movlw	1
  3356  070C                     u2115:	
  3357  070C  35D0               	lslf	___lmul@multiplicand,f
  3358  070D  0DD1               	rlf	___lmul@multiplicand+1,f
  3359  070E  0DD2               	rlf	___lmul@multiplicand+2,f
  3360  070F  0DD3               	rlf	___lmul@multiplicand+3,f
  3361  0710  0B89               	decfsz	9,f
  3362  0711  2F0C               	goto	u2115
  3363  0712  3001               	movlw	1
  3364  0713                     u2125:	
  3365  0713  36CF               	lsrf	___lmul@multiplier+3,f
  3366  0714  0CCE               	rrf	___lmul@multiplier+2,f
  3367  0715  0CCD               	rrf	___lmul@multiplier+1,f
  3368  0716  0CCC               	rrf	___lmul@multiplier,f
  3369  0717  0B89               	decfsz	9,f
  3370  0718  2F13               	goto	u2125
  3371  0719  084F               	movf	___lmul@multiplier+3,w
  3372  071A  044E               	iorwf	___lmul@multiplier+2,w
  3373  071B  044D               	iorwf	___lmul@multiplier+1,w
  3374  071C  044C               	iorwf	___lmul@multiplier,w
  3375  071D  1D03               	skipz
  3376  071E  2F01               	goto	l1963
  3377  071F  0857               	movf	___lmul@product+3,w
  3378  0720  00CF               	movwf	?___lmul+3
  3379  0721  0856               	movf	___lmul@product+2,w
  3380  0722  00CE               	movwf	?___lmul+2
  3381  0723  0855               	movf	___lmul@product+1,w
  3382  0724  00CD               	movwf	?___lmul+1
  3383  0725  0854               	movf	___lmul@product,w
  3384  0726  00CC               	movwf	?___lmul
  3385  0727  0008               	return
  3386  0728                     __end_of___lmul:	
  3387                           
  3388                           	psect	text9
  3389  0670                     __ptext9:	
  3390 ;; *************** function ___lldiv *****************
  3391 ;; Defined at:
  3392 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;  divisor         4    0[BANK0 ] unsigned long 
  3395 ;;  dividend        4    4[BANK0 ] unsigned long 
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;  quotient        4    9[BANK0 ] unsigned long 
  3398 ;;  counter         1   13[BANK0 ] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  4    0[BANK0 ] unsigned long 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3408 ;;      Params:         0       8       0       0       0       0       0       0
  3409 ;;      Locals:         0       5       0       0       0       0       0       0
  3410 ;;      Temps:          0       1       0       0       0       0       0       0
  3411 ;;      Totals:         0      14       0       0       0       0       0       0
  3412 ;;Total ram usage:       14 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_main
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           
  3423                           ;psect for function ___lldiv
  3424  0670                     ___lldiv:	
  3425                           
  3426                           ;incstack = 0
  3427                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3428  0670  3000               	movlw	0
  3429  0671  0020               	movlb	0	; select bank0
  3430  0672  00D8               	movwf	___lldiv@quotient+3
  3431  0673  3000               	movlw	0
  3432  0674  00D7               	movwf	___lldiv@quotient+2
  3433  0675  3000               	movlw	0
  3434  0676  00D6               	movwf	___lldiv@quotient+1
  3435  0677  3000               	movlw	0
  3436  0678  00D5               	movwf	___lldiv@quotient
  3437  0679  084F               	movf	___lldiv@divisor+3,w
  3438  067A  044E               	iorwf	___lldiv@divisor+2,w
  3439  067B  044D               	iorwf	___lldiv@divisor+1,w
  3440  067C  044C               	iorwf	___lldiv@divisor,w
  3441  067D  1903               	skipnz
  3442  067E  2EBA               	goto	l1995
  3443  067F  01D9               	clrf	___lldiv@counter
  3444  0680  0AD9               	incf	___lldiv@counter,f
  3445  0681                     l1981:	
  3446  0681  1BCF               	btfsc	___lldiv@divisor+3,7
  3447  0682  2E8F               	goto	l1983
  3448  0683  3001               	movlw	1
  3449  0684                     u2155:	
  3450  0684  35CC               	lslf	___lldiv@divisor,f
  3451  0685  0DCD               	rlf	___lldiv@divisor+1,f
  3452  0686  0DCE               	rlf	___lldiv@divisor+2,f
  3453  0687  0DCF               	rlf	___lldiv@divisor+3,f
  3454  0688  0B89               	decfsz	9,f
  3455  0689  2E84               	goto	u2155
  3456  068A  3001               	movlw	1
  3457  068B  00D4               	movwf	??___lldiv
  3458  068C  0854               	movf	??___lldiv,w
  3459  068D  07D9               	addwf	___lldiv@counter,f
  3460  068E  2E81               	goto	l1981
  3461  068F                     l1983:	
  3462  068F  3001               	movlw	1
  3463  0690                     u2175:	
  3464  0690  35D5               	lslf	___lldiv@quotient,f
  3465  0691  0DD6               	rlf	___lldiv@quotient+1,f
  3466  0692  0DD7               	rlf	___lldiv@quotient+2,f
  3467  0693  0DD8               	rlf	___lldiv@quotient+3,f
  3468  0694  0B89               	decfsz	9,f
  3469  0695  2E90               	goto	u2175
  3470  0696  084F               	movf	___lldiv@divisor+3,w
  3471  0697  0253               	subwf	___lldiv@dividend+3,w
  3472  0698  1D03               	skipz
  3473  0699  2EA4               	goto	u2185
  3474  069A  084E               	movf	___lldiv@divisor+2,w
  3475  069B  0252               	subwf	___lldiv@dividend+2,w
  3476  069C  1D03               	skipz
  3477  069D  2EA4               	goto	u2185
  3478  069E  084D               	movf	___lldiv@divisor+1,w
  3479  069F  0251               	subwf	___lldiv@dividend+1,w
  3480  06A0  1D03               	skipz
  3481  06A1  2EA4               	goto	u2185
  3482  06A2  084C               	movf	___lldiv@divisor,w
  3483  06A3  0250               	subwf	___lldiv@dividend,w
  3484  06A4                     u2185:	
  3485  06A4  1C03               	skipc
  3486  06A5  2EAF               	goto	l1991
  3487  06A6  084C               	movf	___lldiv@divisor,w
  3488  06A7  02D0               	subwf	___lldiv@dividend,f
  3489  06A8  084D               	movf	___lldiv@divisor+1,w
  3490  06A9  3BD1               	subwfb	___lldiv@dividend+1,f
  3491  06AA  084E               	movf	___lldiv@divisor+2,w
  3492  06AB  3BD2               	subwfb	___lldiv@dividend+2,f
  3493  06AC  084F               	movf	___lldiv@divisor+3,w
  3494  06AD  3BD3               	subwfb	___lldiv@dividend+3,f
  3495  06AE  1455               	bsf	___lldiv@quotient,0
  3496  06AF                     l1991:	
  3497  06AF  3001               	movlw	1
  3498  06B0                     u2195:	
  3499  06B0  36CF               	lsrf	___lldiv@divisor+3,f
  3500  06B1  0CCE               	rrf	___lldiv@divisor+2,f
  3501  06B2  0CCD               	rrf	___lldiv@divisor+1,f
  3502  06B3  0CCC               	rrf	___lldiv@divisor,f
  3503  06B4  0B89               	decfsz	9,f
  3504  06B5  2EB0               	goto	u2195
  3505  06B6  3001               	movlw	1
  3506  06B7  02D9               	subwf	___lldiv@counter,f
  3507  06B8  1D03               	btfss	3,2
  3508  06B9  2E8F               	goto	l1983
  3509  06BA                     l1995:	
  3510  06BA  0858               	movf	___lldiv@quotient+3,w
  3511  06BB  00CF               	movwf	?___lldiv+3
  3512  06BC  0857               	movf	___lldiv@quotient+2,w
  3513  06BD  00CE               	movwf	?___lldiv+2
  3514  06BE  0856               	movf	___lldiv@quotient+1,w
  3515  06BF  00CD               	movwf	?___lldiv+1
  3516  06C0  0855               	movf	___lldiv@quotient,w
  3517  06C1  00CC               	movwf	?___lldiv
  3518  06C2  0008               	return
  3519  06C3                     __end_of___lldiv:	
  3520                           
  3521                           	psect	intentry
  3522  0004                     __pintentry:	
  3523 ;; *************** function _ISR *****************
  3524 ;; Defined at:
  3525 ;;		line 747 in file "main.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;		None               void
  3532 ;; Registers used:
  3533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3539 ;;      Params:         0       0       0       0       0       0       0       0
  3540 ;;      Locals:         0       0       0       0       0       0       0       0
  3541 ;;      Temps:          5       0       0       0       0       0       0       0
  3542 ;;      Totals:         5       0       0       0       0       0       0       0
  3543 ;;Total ram usage:        5 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		Interrupt level 1
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552  0004                     _ISR:	
  3553                           
  3554                           ;incstack = 0
  3555                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath]
  3556  0004  3180               	pagesel	$
  3557  0005  0020               	movlb	0	; select bank0
  3558  0006  087F               	movf	127,w
  3559  0007  00F9               	movwf	??_ISR+4
  3560                           
  3561                           ;main.c: 750: if ( INTCONbits.TMR0IF == 1 ) {
  3562  0008  1D0B               	btfss	11,2	;volatile
  3563  0009  28DE               	goto	i1l285
  3564                           
  3565                           ;main.c: 752: if (multi>1) {
  3566  000A  3002               	movlw	2
  3567  000B  0273               	subwf	_multi,w	;volatile
  3568  000C  1C03               	skipc
  3569  000D  287C               	goto	i1l1817
  3570                           
  3571                           ;main.c: 754: LATB |= 0b00000011;
  3572  000E  3003               	movlw	3
  3573  000F  00F5               	movwf	??_ISR
  3574  0010  0875               	movf	??_ISR,w
  3575  0011  0022               	movlb	2	; select bank2
  3576  0012  048D               	iorwf	13,f	;volatile
  3577                           
  3578                           ;main.c: 755: LATC = 255;
  3579  0013  30FF               	movlw	255
  3580  0014  008E               	movwf	14	;volatile
  3581                           
  3582                           ;main.c: 757: if(idx==0){
  3583  0015  0871               	movf	_idx,w	;volatile
  3584  0016  1D03               	btfss	3,2
  3585  0017  2844               	goto	i1l1799
  3586                           
  3587                           ;main.c: 758: if (kro_1 == 1) {
  3588  0018  0021               	movlb	1	; select bank1
  3589  0019  032A               	decf	_kro_1^(0+128),w	;volatile
  3590  001A  1D03               	btfss	3,2
  3591  001B  2827               	goto	i1l1793
  3592                           
  3593                           ;main.c: 759: LATC = ~(cyfry[cyf_1] | (1<<7));
  3594  001C  0020               	movlb	0	; select bank0
  3595  001D  0868               	movf	_cyf_1,w	;volatile
  3596  001E  3E00               	addlw	low (_cyfry| (0+32768))
  3597  001F  0084               	movwf	4
  3598  0020  3088               	movlw	high (_cyfry| (0+32768))
  3599  0021  1803               	skipnc
  3600  0022  3E01               	addlw	1
  3601  0023  0085               	movwf	5
  3602  0024  0800               	movf	0,w	;code access
  3603  0025  3880               	iorlw	128
  3604  0026  2835               	goto	L9
  3605  0027                     i1l1793:	
  3606                           ;main.c: 761: }else if( cyf_1 != 10 ){
  3607                           
  3608                           ;main.c: 760: LATB &= ~an[idx] ;
  3609                           
  3610  0027  300A               	movlw	10
  3611  0028  0020               	movlb	0	; select bank0
  3612  0029  0668               	xorwf	_cyf_1,w	;volatile
  3613  002A  1903               	btfsc	3,2
  3614  002B  2844               	goto	i1l1799
  3615                           
  3616                           ;main.c: 762: LATC = ~(cyfry[cyf_1] & ~(1<<7));
  3617  002C  0868               	movf	_cyf_1,w	;volatile
  3618  002D  3E00               	addlw	low (_cyfry| (0+32768))
  3619  002E  0084               	movwf	4
  3620  002F  3088               	movlw	high (_cyfry| (0+32768))
  3621  0030  1803               	skipnc
  3622  0031  3E01               	addlw	1
  3623  0032  0085               	movwf	5
  3624  0033  0800               	movf	0,w	;code access
  3625  0034  397F               	andlw	127
  3626  0035                     L9:	
  3627  0035  3AFF               	xorlw	255
  3628  0036  0022               	movlb	2	; select bank2
  3629  0037  008E               	movwf	14	;volatile
  3630                           
  3631                           ;main.c: 763: LATB &= ~an[idx] ;
  3632  0038  0871               	movf	_idx,w	;volatile
  3633  0039  3E0F               	addlw	low (_an| (0+32768))
  3634  003A  0084               	movwf	4
  3635  003B  3088               	movlw	high (_an| (0+32768))
  3636  003C  1803               	skipnc
  3637  003D  3E01               	addlw	1
  3638  003E  0085               	movwf	5
  3639  003F  0800               	movf	0,w	;code access
  3640  0040  3AFF               	xorlw	255
  3641  0041  00F5               	movwf	??_ISR
  3642  0042  0875               	movf	??_ISR,w
  3643  0043  058D               	andwf	13,f	;volatile
  3644  0044                     i1l1799:	
  3645                           
  3646                           ;main.c: 764: }
  3647                           ;main.c: 765: }
  3648                           ;main.c: 767: if(idx==1){
  3649  0044  0371               	decf	_idx,w	;volatile
  3650  0045  1D03               	btfss	3,2
  3651  0046  2873               	goto	i1l1813
  3652                           
  3653                           ;main.c: 768: if (kro_2 == 1) {
  3654  0047  0021               	movlb	1	; select bank1
  3655  0048  032B               	decf	_kro_2^(0+128),w	;volatile
  3656  0049  1D03               	btfss	3,2
  3657  004A  2856               	goto	i1l1807
  3658                           
  3659                           ;main.c: 769: LATC = ~(cyfry[cyf_2] | (1<<7));
  3660  004B  0020               	movlb	0	; select bank0
  3661  004C  0869               	movf	_cyf_2,w	;volatile
  3662  004D  3E00               	addlw	low (_cyfry| (0+32768))
  3663  004E  0084               	movwf	4
  3664  004F  3088               	movlw	high (_cyfry| (0+32768))
  3665  0050  1803               	skipnc
  3666  0051  3E01               	addlw	1
  3667  0052  0085               	movwf	5
  3668  0053  0800               	movf	0,w	;code access
  3669  0054  3880               	iorlw	128
  3670  0055  2864               	goto	L10
  3671  0056                     i1l1807:	
  3672                           ;main.c: 771: }else if( cyf_2 != 10 ){
  3673                           
  3674                           ;main.c: 770: LATB &= ~an[idx] ;
  3675                           
  3676  0056  300A               	movlw	10
  3677  0057  0020               	movlb	0	; select bank0
  3678  0058  0669               	xorwf	_cyf_2,w	;volatile
  3679  0059  1903               	btfsc	3,2
  3680  005A  2873               	goto	i1l1813
  3681                           
  3682                           ;main.c: 772: LATC = ~(cyfry[cyf_2] & ~(1<<7));
  3683  005B  0869               	movf	_cyf_2,w	;volatile
  3684  005C  3E00               	addlw	low (_cyfry| (0+32768))
  3685  005D  0084               	movwf	4
  3686  005E  3088               	movlw	high (_cyfry| (0+32768))
  3687  005F  1803               	skipnc
  3688  0060  3E01               	addlw	1
  3689  0061  0085               	movwf	5
  3690  0062  0800               	movf	0,w	;code access
  3691  0063  397F               	andlw	127
  3692  0064                     L10:	
  3693  0064  3AFF               	xorlw	255
  3694  0065  0022               	movlb	2	; select bank2
  3695  0066  008E               	movwf	14	;volatile
  3696                           
  3697                           ;main.c: 773: LATB &= ~an[idx] ;
  3698  0067  0871               	movf	_idx,w	;volatile
  3699  0068  3E0F               	addlw	low (_an| (0+32768))
  3700  0069  0084               	movwf	4
  3701  006A  3088               	movlw	high (_an| (0+32768))
  3702  006B  1803               	skipnc
  3703  006C  3E01               	addlw	1
  3704  006D  0085               	movwf	5
  3705  006E  0800               	movf	0,w	;code access
  3706  006F  3AFF               	xorlw	255
  3707  0070  00F5               	movwf	??_ISR
  3708  0071  0875               	movf	??_ISR,w
  3709  0072  058D               	andwf	13,f	;volatile
  3710  0073                     i1l1813:	
  3711                           
  3712                           ;main.c: 774: }
  3713                           ;main.c: 775: }
  3714                           ;main.c: 778: if(++idx>1) idx=0;
  3715  0073  3001               	movlw	1
  3716  0074  00F5               	movwf	??_ISR
  3717  0075  0875               	movf	??_ISR,w
  3718  0076  07F1               	addwf	_idx,f	;volatile
  3719  0077  3002               	movlw	2
  3720  0078  0271               	subwf	_idx,w	;volatile
  3721  0079  1803               	btfsc	3,0
  3722  007A  01F1               	clrf	_idx	;volatile
  3723                           
  3724                           ;main.c: 779: multi =0;
  3725  007B  01F3               	clrf	_multi	;volatile
  3726  007C                     i1l1817:	
  3727                           
  3728                           ;main.c: 780: }
  3729                           ;main.c: 781: multi++;
  3730  007C  3001               	movlw	1
  3731  007D  00F5               	movwf	??_ISR
  3732  007E  0875               	movf	??_ISR,w
  3733  007F  07F3               	addwf	_multi,f	;volatile
  3734                           
  3735                           ;main.c: 785: if (timer1 >0) {
  3736  0080  0020               	movlb	0	; select bank0
  3737  0081  082C               	movf	_timer1,w	;volatile
  3738  0082  042D               	iorwf	_timer1+1,w	;volatile
  3739  0083  1903               	btfsc	3,2
  3740  0084  2889               	goto	i1l277
  3741                           
  3742                           ;main.c: 786: timer1--;
  3743  0085  3001               	movlw	1
  3744  0086  02AC               	subwf	_timer1,f	;volatile
  3745  0087  3000               	movlw	0
  3746  0088  3BAD               	subwfb	_timer1+1,f	;volatile
  3747  0089                     i1l277:	
  3748                           
  3749                           ;main.c: 787: }
  3750                           ;main.c: 789: if (timer2 >0) {
  3751  0089  0827               	movf	_timer2+3,w	;volatile
  3752  008A  0426               	iorwf	_timer2+2,w	;volatile
  3753  008B  0425               	iorwf	_timer2+1,w	;volatile
  3754  008C  0424               	iorwf	_timer2,w	;volatile
  3755  008D  1903               	skipnz
  3756  008E  289F               	goto	i1l1825
  3757                           
  3758                           ;main.c: 790: timer2--;
  3759  008F  3001               	movlw	1
  3760  0090  00F5               	movwf	??_ISR
  3761  0091  3000               	movlw	0
  3762  0092  00F6               	movwf	??_ISR+1
  3763  0093  3000               	movlw	0
  3764  0094  00F7               	movwf	??_ISR+2
  3765  0095  3000               	movlw	0
  3766  0096  00F8               	movwf	??_ISR+3
  3767  0097  0875               	movf	??_ISR,w
  3768  0098  02A4               	subwf	_timer2,f	;volatile
  3769  0099  0876               	movf	??_ISR+1,w
  3770  009A  3BA5               	subwfb	_timer2+1,f	;volatile
  3771  009B  0877               	movf	??_ISR+2,w
  3772  009C  3BA6               	subwfb	_timer2+2,f	;volatile
  3773  009D  0878               	movf	??_ISR+3,w
  3774  009E  3BA7               	subwfb	_timer2+3,f	;volatile
  3775  009F                     i1l1825:	
  3776                           
  3777                           ;main.c: 791: }
  3778                           ;main.c: 793: if (timer3 >0) {
  3779  009F  082E               	movf	_timer3,w	;volatile
  3780  00A0  042F               	iorwf	_timer3+1,w	;volatile
  3781  00A1  1903               	btfsc	3,2
  3782  00A2  28A7               	goto	i1l1829
  3783                           
  3784                           ;main.c: 794: timer3--;
  3785  00A3  3001               	movlw	1
  3786  00A4  02AE               	subwf	_timer3,f	;volatile
  3787  00A5  3000               	movlw	0
  3788  00A6  3BAF               	subwfb	_timer3+1,f	;volatile
  3789  00A7                     i1l1829:	
  3790                           
  3791                           ;main.c: 795: }
  3792                           ;main.c: 797: if (timer4 >0) {
  3793  00A7  0830               	movf	_timer4,w	;volatile
  3794  00A8  0431               	iorwf	_timer4+1,w	;volatile
  3795  00A9  1903               	btfsc	3,2
  3796  00AA  28AF               	goto	i1l280
  3797                           
  3798                           ;main.c: 798: timer4--;
  3799  00AB  3001               	movlw	1
  3800  00AC  02B0               	subwf	_timer4,f	;volatile
  3801  00AD  3000               	movlw	0
  3802  00AE  3BB1               	subwfb	_timer4+1,f	;volatile
  3803  00AF                     i1l280:	
  3804                           
  3805                           ;main.c: 799: }
  3806                           ;main.c: 801: if (timer5 >0) {
  3807  00AF  0867               	movf	_timer5+3,w	;volatile
  3808  00B0  0466               	iorwf	_timer5+2,w	;volatile
  3809  00B1  0465               	iorwf	_timer5+1,w	;volatile
  3810  00B2  0464               	iorwf	_timer5,w	;volatile
  3811  00B3  1903               	skipnz
  3812  00B4  28C5               	goto	i1l1835
  3813                           
  3814                           ;main.c: 802: timer5--;
  3815  00B5  3001               	movlw	1
  3816  00B6  00F5               	movwf	??_ISR
  3817  00B7  3000               	movlw	0
  3818  00B8  00F6               	movwf	??_ISR+1
  3819  00B9  3000               	movlw	0
  3820  00BA  00F7               	movwf	??_ISR+2
  3821  00BB  3000               	movlw	0
  3822  00BC  00F8               	movwf	??_ISR+3
  3823  00BD  0875               	movf	??_ISR,w
  3824  00BE  02E4               	subwf	_timer5,f	;volatile
  3825  00BF  0876               	movf	??_ISR+1,w
  3826  00C0  3BE5               	subwfb	_timer5+1,f	;volatile
  3827  00C1  0877               	movf	??_ISR+2,w
  3828  00C2  3BE6               	subwfb	_timer5+2,f	;volatile
  3829  00C3  0878               	movf	??_ISR+3,w
  3830  00C4  3BE7               	subwfb	_timer5+3,f	;volatile
  3831  00C5                     i1l1835:	
  3832                           
  3833                           ;main.c: 803: }
  3834                           ;main.c: 805: if (timer6 >0) {
  3835  00C5  0832               	movf	_timer6,w	;volatile
  3836  00C6  0433               	iorwf	_timer6+1,w	;volatile
  3837  00C7  1903               	btfsc	3,2
  3838  00C8  28CD               	goto	i1l1839
  3839                           
  3840                           ;main.c: 806: timer6--;
  3841  00C9  3001               	movlw	1
  3842  00CA  02B2               	subwf	_timer6,f	;volatile
  3843  00CB  3000               	movlw	0
  3844  00CC  3BB3               	subwfb	_timer6+1,f	;volatile
  3845  00CD                     i1l1839:	
  3846                           
  3847                           ;main.c: 807: }
  3848                           ;main.c: 809: if (timer7 >0) {
  3849  00CD  0834               	movf	_timer7,w	;volatile
  3850  00CE  0435               	iorwf	_timer7+1,w	;volatile
  3851  00CF  1903               	btfsc	3,2
  3852  00D0  28D5               	goto	i1l1843
  3853                           
  3854                           ;main.c: 810: timer7--;
  3855  00D1  3001               	movlw	1
  3856  00D2  02B4               	subwf	_timer7,f	;volatile
  3857  00D3  3000               	movlw	0
  3858  00D4  3BB5               	subwfb	_timer7+1,f	;volatile
  3859  00D5                     i1l1843:	
  3860                           
  3861                           ;main.c: 811: }
  3862                           ;main.c: 813: if (timer8 >0) {
  3863  00D5  0836               	movf	_timer8,w	;volatile
  3864  00D6  0437               	iorwf	_timer8+1,w	;volatile
  3865  00D7  1903               	btfsc	3,2
  3866  00D8  28DD               	goto	i1l1847
  3867                           
  3868                           ;main.c: 814: timer8--;
  3869  00D9  3001               	movlw	1
  3870  00DA  02B6               	subwf	_timer8,f	;volatile
  3871  00DB  3000               	movlw	0
  3872  00DC  3BB7               	subwfb	_timer8+1,f	;volatile
  3873  00DD                     i1l1847:	
  3874                           
  3875                           ;main.c: 815: }
  3876                           ;main.c: 816: INTCONbits.TMR0IF = 0;
  3877  00DD  110B               	bcf	11,2	;volatile
  3878  00DE                     i1l285:	
  3879  00DE  0879               	movf	??_ISR+4,w
  3880  00DF  00FF               	movwf	127
  3881  00E0  0009               	retfie
  3882  00E1                     __end_of_ISR:	
  3883  007E                     btemp	set	126	;btemp
  3884  007E                     wtemp	set	126
  3885  007E                     wtemp0	set	126
  3886  0080                     wtemp1	set	128
  3887  0082                     wtemp2	set	130
  3888  0084                     wtemp3	set	132
  3889  0086                     wtemp4	set	134
  3890  0088                     wtemp5	set	136
  3891  007F                     wtemp6	set	127
  3892  007E                     ttemp	set	126
  3893  007E                     ttemp0	set	126
  3894  0081                     ttemp1	set	129
  3895  0084                     ttemp2	set	132
  3896  0087                     ttemp3	set	135
  3897  007F                     ttemp4	set	127
  3898  007E                     ltemp	set	126
  3899  007E                     ltemp0	set	126
  3900  0082                     ltemp1	set	130
  3901  0086                     ltemp2	set	134
  3902  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    17
    Data        4
    BSS         57
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     24      80
    BANK1            80      4      16
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            76      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_wyswietl
    _wyswietl->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11     7      4    3214
                                             17 BANK0      7     3      4
                                              0 BANK1      4     4      0
                            ___lldiv
                             ___lmul
                        _erase_flash
                         _read_flash
                        _write_flash
                           _wyswietl
 ---------------------------------------------------------------------------------
 (1) _wyswietl                                             3     1      2    1600
                                             14 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     556
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     592
                                              6 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _write_flash                                          5     3      2     417
                                              0 BANK0      5     3      2
                       _unlock_flash
 ---------------------------------------------------------------------------------
 (1) _read_flash                                           2     1      1     386
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _erase_flash                                          4     3      1     116
                                              0 BANK0      4     3      1
                       _unlock_flash
 ---------------------------------------------------------------------------------
 (2) _unlock_flash                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     349
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
   ___lmul
   _erase_flash
     _unlock_flash
   _read_flash
   _write_flash
     _unlock_flash
   _wyswietl
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     18      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      4      10       8       20.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               4C      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      6A      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Nov 04 22:17:49 2015

             __CFG_CP$ON 0000                        _x 004B                       _an 080F  
  __size_of_unlock_flash 0009              __CFG_LVP$ON 0000                      l202 0364  
                    l220 0474                      l213 04AF                      l230 0519  
                    l222 0539                      l215 046B                      l226 04DE  
                    l218 046F                      l228 04FC                      l238 05BC  
                    l192 0301                      l178 0230             ?_erase_flash 004C  
                    _ISR 0004                      _PWM 0070                      _adc 00A0  
                    _idx 0071                      _moc 0047             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_IESO$ON 0000                     ?_ISR 0075  
                   l2105 0268                     l2211 03FD                     l2131 02A7  
                   l2115 0282                     l2301 0500                     l2213 0401  
                   l2141 02C1                     l2125 0296                     l2109 026D  
                   l2311 051E                     l2223 041D                     l2231 042A  
                   l2135 02AC                     l2071 01F4                     l1281 06EA  
                   l1273 06CC                     l2321 055D                     l2313 0533  
                   l2241 0456                     l2225 041E                     l1275 06D8  
                   l2235 0432                     l2227 0425                     l2171 034C  
                   l2155 030F                     l1285 06F3                     l2341 05B6  
                   l2333 059A                     l2165 0320                     l2085 023C  
                   l2077 01FF                     l2069 01EE                     l2335 05A1  
                   l2327 056F                     l2271 0492                     l2175 0352  
                   l2167 0326                     l2079 0224                     l2337 05A9  
                   l2265 0479                     l2257 0473                     l2249 046E  
                   l2185 0377                     l2169 0347                     l2089 0244  
                   l2275 0494                     l2099 0257                     l2293 04E1  
                   l2285 04C5                     l2277 04A9                     l2299 04FA  
                   l1871 0747                     l1865 072F                     l1937 05FE  
                   l1963 0701                     l1867 073B                     l1875 0750  
                   l1955 0663                     l1947 0639                     l1981 0681  
                   l1991 06AF                     l1983 068F                     l1967 070B  
                   l1995 06BA             __CFG_WDTE$ON 0000                     u1025 06CF  
                   u1045 06D9                     u1055 06E3                     u1065 06EB  
                   u2025 0732                     u2115 070C                     u2125 0713  
                   u2045 0741                     _LATB 010D                     u2055 0748  
                   _LATC 010E                     u2155 0684                     u2175 0690  
                   u2185 06A4                     u2195 06B0                     u2525 035E  
                   u2807 0291                     u2817 02BC                     u2827 02CF  
                   u2837 02DE                     u2847 02ED                     u2857 0308  
                   u2777 01B2                     u2867 0330                     u2787 0252  
                   u2877 033F                     u2797 027D                     u2887 0773  
                   u2897 0793             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 011A                     _temp 00A4                     fsr0h 0005  
                   fsr0l 0004                     indf0 0000                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 00E1  
                   ttemp 007E                     wtemp 007E            __CFG_MCLRE$ON 0000  
           _unlock_flash 07BA                    ??_ISR 0075                    ?_main 005D  
        __end_of___lldiv 06C3          __end_of___lwdiv 06F8                    i1l280 00AF  
        __end_of___lwmod 0755                    i1l277 0089                    i1l285 00DE  
                  _START 0038                    _TRISC 008E              _write_flash 0755  
    ___lmul@multiplicand 0050                    _cyf_1 0068                    _cyf_2 0069  
                  _cyf_3 003D                    _kro_1 00AA                    _kro_2 00AB  
                  _kro_3 0045                    _cyfry 0800                    _multi 0073  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F        erase_flash@adr_hi 004F  
      erase_flash@adr_lo 004C          __initialization 00E3             __end_of_main 05BE  
         __CFG_LPBOR$OFF 0000                   ??_main 00AC                   _ADCON1 009E  
                 _ANSELC 018E                   i1l1813 0073                   i1l1807 0056  
                 i1l1825 009F                   i1l1817 007C                   i1l1843 00D5  
                 i1l1835 00C5                   i1l1829 00A7                   i1l1847 00DD  
                 i1l1839 00CD                   i1l1793 0027                   i1l1799 0044  
                 _PMADRH 0192                   _PMADRL 0191                   _PMDATH 0194  
                 _PMDATL 0193                   _PMCON2 0196           __CFG_PWRTE$OFF 0000  
                 ___lmul 06F8                   _adr_hi 006C           __CFG_STVREN$ON 0000  
              ??___lldiv 0054                ??___lwdiv 0056                ??___lwmod 0050  
                 _czas_s 002A              _wyswietlacz 0074                   _timer1 002C  
                 _timer2 0024                   _timer3 002E                   _timer4 0030  
                 _timer5 0064                   _timer6 0032                   _timer7 0034  
                 _timer8 0036     __size_of_erase_flash 0020  __end_of__initialization 0117  
       __end_of_wyswietl 0670           __pcstackCOMMON 0075             __pidataBANK0 07C3  
          __end_of_cyfry 080F               __end_of_an 0811           _OPTION_REGbits 0095  
             __pbssBANK0 0020               __pbssBANK1 00A0      _przycisk_minus_flag 0048  
        __CFG_VCAPEN$OFF 0000               __pmaintext 011A                  ?___lmul 004C  
             __pintentry 0004           ___lmul@product 0054               _flaga_temp 003F  
           ?_write_flash 004C           main@liczba_tmp 0062               _czas_flash 0028  
        __size_of___lmul 0030                  ___lldiv 0670                  ___lwdiv 06C3  
                ___lwmod 0728                  _adr_moc 006F                  _adr_low 006D  
             _read_flash 079C                  __ptext1 05BE                  __ptext2 0728  
                __ptext3 06C3                  __ptext4 0755                  __ptext5 079C  
                __ptext6 077C                  __ptext7 07BA                  __ptext8 06F8  
                __ptext9 0670             __size_of_ISR 00DD                  _czas_ms 0020  
                _licznik 0072                  _temp_sr 00A6                ?_wyswietl 005A  
                clrloop0 07AF                  main@tmp 0061     end_of_initialization 0117  
       _case_wyswietlacz 003A          ___lldiv@divisor 004C          ___lldiv@counter 0059  
     write_flash@data_lo 004D             __pstringtext 0800            _grzalka_numer 006B  
              _PORTBbits 000D               _test_index 004A         __CFG_FOSC$INTOSC 0000  
              _TRISAbits 008C                _TRISBbits 008D               ??_wyswietl 005C  
         __end_of___lmul 0728              ?_read_flash 004C            ??_erase_flash 004D  
    start_initialization 00E3              __end_of_ISR 00E1     __size_of_write_flash 0027  
           _czas_s_reset 00A8            ?_unlock_flash 0075                 ??___lmul 0054  
            __pdataBANK0 006C              __pbssBIGRAM 218C              __pbssCOMMON 0070  
              ___latbits 0002            __pcstackBANK0 004C            __pcstackBANK1 00AC  
    __end_of_erase_flash 079C      __size_of_read_flash 0012                __pnvBANK0 0064  
              __pnvBANK1 00A8           ??_unlock_flash 004C         ___lwdiv@dividend 0054  
               ?___lldiv 004C                 ?___lwdiv 0052                 ?___lwmod 004C  
     _przycisk_plus_flag 0049                _cyf_1_tmp 003B                _cyf_2_tmp 003C  
              _cyf_3_tmp 003E                _flash_moc 0042                _flash_low 0041  
       ___lwdiv@quotient 0057                _kro_1_tmp 0043                _kro_2_tmp 0044  
              _kro_3_tmp 0046        __size_of_wyswietl 00B2                 _LATAbits 010C  
               _LATBbits 010D                clear_ram0 07AE        write_flash@adr_hi 0050  
      write_flash@adr_lo 004C                 _START_Fl 0039               _ADCON0bits 009D  
          _ledBlink_time 00A2              _erase_flash 077C                 _WPUBbits 020D  
      ___lmul@multiplier 004C          _czas_przerwa_ms 006A         __size_of___lldiv 0053  
       __size_of___lwdiv 0035         __size_of___lwmod 002D             ??_read_flash 004D  
             _ANSELAbits 018C               _ANSELBbits 018D                 _adr_low2 006E  
   __end_of_unlock_flash 07C3          ___lwdiv@divisor 0052          ___lwdiv@counter 0059  
               _flash_hi 0040            __size_of_main 04A4       __end_of_read_flash 07AE  
               main@argc 005D                 main@argv 005F        read_flash@adrs_hi 004D  
      read_flash@adrs_lo 004C               _INTCONbits 000B            ??_write_flash 004E  
             _FVRCONbits 0117                 _wyswietl 05BE                 intlevel1 0000  
             _PMCON1bits 0195         ___lwmod@dividend 004E         ___lldiv@dividend 0050  
      __CFG_CLKOUTEN$OFF 0000               _OSCCONbits 0099              _temp_tabela 218C  
       ___lldiv@quotient 0055          ___lwmod@divisor 004C          ___lwmod@counter 0051  
         wyswietl@liczba 005A               _WDTCONbits 0097      __end_of_write_flash 077C  
